{"ast":null,"code":"import _slicedToArray from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//import { cilSortNumericDown } from \"@coreui/icons\";\nimport{useState}from\"react\";import ModalCard from\"src/views/modal/Modal\";import TableCard from\"src/views/table/TableCard\";import swal from\"sweetalert\";import{CKEditor}from'@ckeditor/ckeditor5-react';import ClassicEditor from'@ckeditor/ckeditor5-build-classic';import SingeleTask from\"../../TaskDetails/SingleTaskDetails\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NewTaskSubmited=function NewTaskSubmited(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),Show=_useState2[0],setShow=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showRedoneModal=_useState4[0],setRedoneModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showSingleTask=_useState6[0],setShowSingleTask=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),task=_useState8[0],setTask=_useState8[1];var OpenModal=function OpenModal(id,invoice){setShow(true);setTask({taskid:id,invoice:invoice});};var Close=function Close(){setShow(false);setTask([]);};var CloseRedone=function CloseRedone(){setRedoneModal(false);setShow(true);};var SubmitRevisionDetails=function SubmitRevisionDetails(){swal(\"REVISION REQUEST\",\"Sent Succesfully\",\"success\");setShow(false);setRedoneModal(false);setTask([]);};var Content=function Content(){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"ul\",{className:\"list-group\",children:[/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\",children:[\"Cras justo odio\",/*#__PURE__*/_jsx(\"span\",{style:{cursor:\"pointer\"},className:\"badge badge-primary badge-pill\",children:\"Download\"})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\",children:[\"Dapibus ac facilisis in\",/*#__PURE__*/_jsx(\"span\",{style:{cursor:\"pointer\"},className:\"badge badge-primary badge-pill\",children:\"Download\"})]}),/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\",children:[\"Morbi leo risus\",/*#__PURE__*/_jsx(\"span\",{style:{cursor:\"pointer\"},className:\"badge badge-primary badge-pill\",children:\"Download\"})]})]})});};var RevisionContenT=function RevisionContenT(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h6\",{children:[\"REVISION REQUEST FOR ORDER \",task['taskid']]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Revision Details\"}),/*#__PURE__*/_jsx(CKEditor,{editor:ClassicEditor// data={message}\n,onReady:function onReady(editor){// You can store the \"editor\" and use when it is needed.\n//console.log( 'Editor is ready to use!', editor );\neditor.editing.view.change(function(writer){writer.setStyle(\"height\",\"300px\",editor.editing.view.document.getRoot());});},onChange:function onChange(event,editor){var data=editor.getData();//setMessage(data);\n}})]});};var RequestRedone=function RequestRedone(){setShow(false);setRedoneModal(true);};var OpenSingleTaskDetails=function OpenSingleTaskDetails(id,invoice){setShowSingleTask(!showSingleTask);};var OpenMoreModal=function OpenMoreModal(id,invoice){swal(\"INVOICE +\".concat(invoice),{buttons:{file:{text:\"SUBMITED FILES\",value:\"file\",className:\"btn btn-outline-info\"},details:{text:\"ORDER DETAILS\",value:\"details\",className:\"btn btn-info\"}}}).then(function(value){switch(value){case\"file\":OpenModal(id,invoice);break;case\"details\":OpenSingleTaskDetails(id,invoice);break;default:break;}});};var Buttons=function Buttons(id,invoice){return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return OpenMoreModal(id,invoice);},className:\"btn btn-primary\",children:\"More\"});};var AcceptOrder=function AcceptOrder(){swal(\"You Are About To Mark Order \".concat(task['taskid'],\" As Complete\"),{buttons:{cancel:\"Cancel !\",complete:{text:\"COMPLETED?\",value:\"complete\",className:\"btn btn-success\"}}}).then(function(value){switch(value){case'complete':swal(\"ORDER COMPLETED\",\"succesfully\",\"success\");setShow(false);setRedoneModal(false);break;default:swal(\"Process Cancelled \",\"succesfully\",\"success\");break;}});};var Btns=function Btns(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return RequestRedone();},className:\"btn btn-info\",children:\"REQUEST REDONE\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return AcceptOrder();},className:\"btn btn-success\",children:\"ACCEPT ORDER\"})]});};var columns=[{dataField:\"#taskId\",text:\"#taskId\"},{dataField:\"username\",text:\"writername\"},{dataField:\"email\",text:\"writer email\"},{dataField:\"taskTitle\",text:\"Task Title\"},{dataField:\"sdate\",text:\"submited Date\"},{dataField:\"edate\",text:\"DeadLine\"},{dataField:\"action\",text:\"Actions\"}];var Products=[{\"#taskId\":\"98272282\",username:\"airo\",email:\"airotony8@gmail.com\",taskTitle:\"ggdttsssjjsbsbs\",sdate:\"2020-8-9\",edate:\"2020-7-8\",action:Buttons(5,\"#55277772\")}];return/*#__PURE__*/_jsxs(_Fragment,{children:[showSingleTask&&/*#__PURE__*/_jsx(SingeleTask,{id:task['taskid'],isAccept:false,closeTask:OpenSingleTaskDetails}),/*#__PURE__*/_jsx(ModalCard,{Show:Show,Close:Close,showBtn:false,Buttons:Btns,content:Content()}),/*#__PURE__*/_jsx(ModalCard,{Show:showRedoneModal,ButtonName:\"SEND REVISION REQUEST\",content:RevisionContenT(),Save:SubmitRevisionDetails,Close:CloseRedone}),!showSingleTask&&/*#__PURE__*/_jsx(TableCard,{products:Products,columns:columns,title:\"NEW SUBMITED TASK\"})]});};export default NewTaskSubmited;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/submited/submited.js"],"names":["useState","ModalCard","TableCard","swal","CKEditor","ClassicEditor","SingeleTask","NewTaskSubmited","Show","setShow","showRedoneModal","setRedoneModal","showSingleTask","setShowSingleTask","task","setTask","OpenModal","id","invoice","taskid","Close","CloseRedone","SubmitRevisionDetails","Content","cursor","RevisionContenT","editor","editing","view","change","writer","setStyle","document","getRoot","event","data","getData","RequestRedone","OpenSingleTaskDetails","OpenMoreModal","buttons","file","text","value","className","details","then","Buttons","AcceptOrder","cancel","complete","Btns","columns","dataField","Products","username","email","taskTitle","sdate","edate","action"],"mappings":"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","sourcesContent":["//import { cilSortNumericDown } from \"@coreui/icons\";\nimport { useState } from \"react\";\nimport ModalCard from \"src/views/modal/Modal\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\n\nconst NewTaskSubmited = ()=>{\n\n  const [Show,setShow]=useState(false);\n  const [showRedoneModal,setRedoneModal]= useState(false);\n  const [showSingleTask,setShowSingleTask]= useState(false);\n\n  const [task,setTask]=useState([]);\n\n  const OpenModal =(id,invoice)=>{\n      setShow(true)\n      \n      setTask({taskid:id,invoice:invoice});\n  }\n\n  const Close=()=>{\n      setShow(false);\n      setTask([]);\n  }\n  const CloseRedone=()=>{\n      setRedoneModal(false);\n      setShow(true)\n  }\n\n  const SubmitRevisionDetails=()=>{\n    swal(`REVISION REQUEST`, \"Sent Succesfully\", \"success\")\n    \n        setShow(false);\n        setRedoneModal(false);\n        setTask([]);\n   \n  }\n\n  const Content =()=>{\n      return <>\n <ul className=\"list-group\">\n  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n    Cras justo odio\n    <span style={{cursor:\"pointer\"}} className=\"badge badge-primary badge-pill\">Download</span>\n  </li>\n  <li  className=\"list-group-item d-flex justify-content-between align-items-center\">\n    Dapibus ac facilisis in\n    <span style={{cursor:\"pointer\"}} className=\"badge badge-primary badge-pill\">Download</span>\n  </li>\n  <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n    Morbi leo risus\n    <span  style={{cursor:\"pointer\"}} className=\"badge badge-primary badge-pill\">Download</span>\n  </li>\n</ul>\n       </>\n  }\n\n  const RevisionContenT=()=>{\n      return <>\n               {<h6>REVISION REQUEST FOR ORDER {task['taskid']}</h6>}\n               <br/>\n                 <label>Revision Details</label>\n               <CKEditor\n       \n       editor={ ClassicEditor }\n      // data={message}\n    \n       onReady={ editor => {\n           // You can store the \"editor\" and use when it is needed.\n           //console.log( 'Editor is ready to use!', editor );\n           editor.editing.view.change((writer) => {\n            writer.setStyle(\n                \"height\",\n                \"300px\",\n                editor.editing.view.document.getRoot()\n            );\n            });\n       } }\n       onChange={ ( event, editor ) => {\n           const data = editor.getData();\n           \n           //setMessage(data);\n       } }\n      \n   />\n            </>\n  }\n\n  const RequestRedone=()=>{\n      setShow(false);\n      setRedoneModal(true);\n\n  }\n\n  const OpenSingleTaskDetails=(id,invoice)=>{\n      setShowSingleTask(!showSingleTask);\n  }\n\n    const OpenMoreModal=(id,invoice)=>{\n      swal(`INVOICE +${invoice}`,{\n            buttons:{\n                file:{\n                    text:\"SUBMITED FILES\",\n                    value:\"file\",\n                    className:\"btn btn-outline-info\"\n                },\n               \n                details:{\n                    text:\"ORDER DETAILS\",\n                    value:\"details\",\n                    className:\"btn btn-info\"\n                },\n            }\n      })\n      .then((value)=>{\n          switch (value) {\n              case \"file\":\n                  OpenModal(id,invoice);\n                  break;\n               \n                    case \"details\":\n                          OpenSingleTaskDetails(id,invoice);\n                        break;  \n          \n              default:\n                  break;\n          }\n      })\n    }\n    const Buttons=(id,invoice)=>{\n        return <button onClick={()=>OpenMoreModal(id,invoice)} className=\"btn btn-primary\">More</button>\n     }\n\n   const AcceptOrder=()=>{\n       swal(`You Are About To Mark Order ${task['taskid']} As Complete`,{\n           buttons:{\n               cancel:\"Cancel !\",\n               complete:{\n                   text:\"COMPLETED?\",\n                    value:\"complete\",\n                    className:\"btn btn-success\"\n               }\n           }\n       })\n       .then((value)=>{\n           switch (value) {\n               case 'complete':\n                \n                     swal(\"ORDER COMPLETED\",\"succesfully\",\"success\");\n                     setShow(false);\n                setRedoneModal(false);\n                   break;\n           \n               default:\n                   swal(\"Process Cancelled \",\"succesfully\",\"success\");\n                   break;\n           }\n       })\n   }  \n\n     const Btns=()=>{\n        return <> \n                  <button onClick={()=>RequestRedone()} className=\"btn btn-info\">REQUEST REDONE</button>\n                  <button onClick={()=>AcceptOrder()}  className=\"btn btn-success\">ACCEPT ORDER</button>\n                 \n              </>\n     }\n  \n    const columns=[\n        {\n            dataField: \"#taskId\",\n            text: \"#taskId\",\n           \n          },\n          {\n            dataField: \"username\",\n            text: \"writername\",\n           \n          },\n          {\n            dataField: \"email\",\n            text: \"writer email\",\n           \n          },\n          {\n            dataField: \"taskTitle\",\n            text: \"Task Title\",\n           \n          },\n          {\n            dataField: \"sdate\",\n            text: \"submited Date\",\n           \n          },\n          {\n            dataField: \"edate\",\n            text: \"DeadLine\",\n           \n          },\n          {\n            dataField: \"action\",\n            text: \"Actions\",\n           \n          },\n    ]\n    const Products=[\n                {\n                    \"#taskId\":\"98272282\",\n                    username:\"airo\",\n                    email:\"airotony8@gmail.com\",\n                    taskTitle:\"ggdttsssjjsbsbs\",\n                    sdate:\"2020-8-9\",\n                    edate:\"2020-7-8\",\n                    action:Buttons(5,\"#55277772\")\n                }\n    ]\n\n    return <>\n          {showSingleTask && <SingeleTask id={task['taskid']} isAccept={false} closeTask={OpenSingleTaskDetails}/>}\n           <ModalCard\n            Show={Show} Close={Close}\n            showBtn={false}\n            Buttons={Btns}\n            content={Content()}\n             />\n\n             <ModalCard\n              Show={showRedoneModal}\n               ButtonName={\"SEND REVISION REQUEST\"}\n               content={RevisionContenT()}\n               Save={SubmitRevisionDetails}\n               Close={CloseRedone}\n\n             />\n        {!showSingleTask &&  <TableCard products={Products} columns={columns} title={\"NEW SUBMITED TASK\"}/>}\n     </>\n  \n\n}\n\nexport default NewTaskSubmited;"]},"metadata":{},"sourceType":"module"}