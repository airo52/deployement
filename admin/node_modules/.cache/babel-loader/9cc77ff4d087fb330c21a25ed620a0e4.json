{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/in-progress/progress.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport ChatBox from \"src/views/ChatBox/ChatBox\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TaskInProgress = function TaskInProgress() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskDetails = _useState4[0],\n      setTaskDetails = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskId = _useState6[0],\n      setTaskId = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Items = _useState8[0],\n      setItems = _useState8[1];\n\n  var GetTableData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, sortedItems;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getOrdersInProgress();\n\n            case 2:\n              result = _context.sent;\n              console.log(result);\n              sortedItems = [];\n              result.data.forEach(function (element) {\n                var data = {\n                  \"#taskId\": element.task_id,\n                  title: element.task_title,\n                  writerName: element.writer_display_name,\n                  email: element.writer_email,\n                  status: element.task_status,\n                  category: element.writer_category,\n                  Adate: element.taskl_accepted_date,\n                  ddate: element.task_deadline,\n                  Action: Buttons(element.task_id)\n                };\n                sortedItems.push(data);\n              });\n              setItems(sortedItems);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function GetTableData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    GetTableData();\n  }, []);\n\n  var Open = function Open() {\n    setOpen(!open);\n  };\n\n  var CloseTask = function CloseTask() {\n    setTaskDetails(false);\n  };\n\n  var TaskDetails = function TaskDetails(taskId) {\n    setTaskId(taskId);\n    setTaskDetails(true);\n  };\n\n  var Cancel = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(taskId) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ApiRequest.CancellOrder(taskId);\n\n            case 2:\n              result = _context2.sent;\n              console.log(result.data);\n\n              if (result.data == \"done\") {\n                GetTableData();\n                swal(\"Order Cancelled\", \"succesfully\", \"success\");\n              } else {\n                swal(\"Error\", \"Cancelletion Failed\", \"error\");\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function Cancel(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var CancelOrder = function CancelOrder(orderId) {\n    swal(\"YOU ARE ABOUT TO CANCEL ONGOING ORDER\", {\n      buttons: {\n        cancel: \"NO\",\n        yes: {\n          text: \"YES\",\n          value: \"yes\"\n        }\n      }\n    }).then(function (value) {\n      switch (value) {\n        case 'yes':\n          Cancel(orderId); ///  swal(\"Order Cancelled\",\"succesfully\",\"success\");\n\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"writerName\",\n    text: \"Writer Username\"\n  }, {\n    dataField: \"email\",\n    text: \"email\"\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"Adate\",\n    text: \"Accepted-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n\n  var Buttons = function Buttons(taskid) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return Open();\n        },\n        style: {\n          marginRight: \"3px\"\n        },\n        className: \"btn btn-primary fa fa-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return CancelOrder(taskid);\n        },\n        style: {\n          marginRight: \"3px\"\n        },\n        className: \"btn btn-warning\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 20\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return TaskDetails(taskid);\n        },\n        className: \"btn btn-info\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 20\n      }, _this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!taskDetails && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(TableCard, {\n        products: Items,\n        columns: columns,\n        title: \"ORDERS-IN-PROGRESS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }, _this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        open: open,\n        SetOpen: Open\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 14\n      }, _this)]\n    }, void 0, true), taskDetails && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: CloseTask,\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TaskInProgress, \"AcQSkoG7I6pDtqcjgaZR56Yk7xs=\");\n\n_c = TaskInProgress;\nexport default TaskInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskInProgress\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/in-progress/progress.js"],"names":["useEffect","useState","ApiRequest","ChatBox","TableCard","swal","SingeleTask","TaskInProgress","open","setOpen","taskDetails","setTaskDetails","taskId","setTaskId","Items","setItems","GetTableData","getOrdersInProgress","result","console","log","sortedItems","data","forEach","element","task_id","title","task_title","writerName","writer_display_name","email","writer_email","status","task_status","category","writer_category","Adate","taskl_accepted_date","ddate","task_deadline","Action","Buttons","push","Open","CloseTask","TaskDetails","Cancel","CancellOrder","CancelOrder","orderId","buttons","cancel","yes","text","value","then","columns","dataField","sort","taskid","marginRight"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport ChatBox from \"src/views/ChatBox/ChatBox\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\n\nconst TaskInProgress=()=>{\n      \n  const [open,setOpen]=useState(false);\n  const [taskDetails,setTaskDetails] = useState(false);\n  const [taskId,setTaskId]=useState('');\n  const [Items,setItems]= useState([]);\n\nconst GetTableData=async ()=>{\n      const result = await ApiRequest.getOrdersInProgress();\n      console.log(result);\n       \n      var sortedItems = [];\n    result.data.forEach(element => {\n          var data ={\n            \"#taskId\":element.task_id,\n            title:element.task_title,\n            writerName:element.writer_display_name,\n            email:element.writer_email,\n            status:element.task_status,\n            category:element.writer_category,\n            Adate:element.taskl_accepted_date,\n            ddate:element.task_deadline,\n            Action:Buttons(element.task_id)\n          }\n          sortedItems.push(data);\n\n    });\n\n    setItems(sortedItems);\n\n  \n}\n\n\n  useEffect(()=>{\n      GetTableData();\n  },[]);\n\n\n  const Open=()=>{\n     setOpen(!open);\n  }\n  const CloseTask=()=>{\n    setTaskDetails(false);\n  }\n\n  const TaskDetails=(taskId)=>{\n    setTaskId(taskId);\n     setTaskDetails(true);\n  }\n\n  const Cancel =async (taskId)=>{\n    const result = await ApiRequest.CancellOrder(taskId);\n     console.log(result.data)\n    if(result.data == \"done\"){\n      GetTableData();\n      swal(\"Order Cancelled\",\"succesfully\",\"success\");\n    }else{\n      swal(\"Error\",\"Cancelletion Failed\",\"error\");\n    }\n\n  }\n\n  const CancelOrder=(orderId)=>{\n    swal(\"YOU ARE ABOUT TO CANCEL ONGOING ORDER\",{\n       buttons:{\n         cancel:\"NO\",\n         yes:{\n           text:\"YES\",\n           value:\"yes\"\n         }\n       }\n    })\n    .then((value)=>{\n          switch (value) {\n            case 'yes':\n                Cancel(orderId);\n                ///  swal(\"Order Cancelled\",\"succesfully\",\"success\");\n              break;\n          \n            default:\n\n              break;\n          }\n    })\n  }\n\n     const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n        {\n          dataField: \"writerName\",\n          text: \"Writer Username\",\n       \n        },\n        {\n          dataField: \"email\",\n          text: \"email\",\n        \n        },\n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"Adate\",\n          text: \"Accepted-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n\n      const Buttons = (taskid)=>{\n             return <>\n                   <button onClick={()=>Open()} style={{marginRight:\"3px\"}} className=\"btn btn-primary fa fa-comment\"></button>\n                   <button onClick={()=>CancelOrder(taskid)}  style={{marginRight:\"3px\"}} className=\"btn btn-warning\">Cancel</button>\n                   <button onClick={()=>TaskDetails(taskid)} className=\"btn btn-info\">Details</button>\n                   </>\n      }\n     \n    return <>\n            {!taskDetails && <> <TableCard \n             products={Items}\n             columns={columns}\n              title={\"ORDERS-IN-PROGRESS\"}\n             />\n             <ChatBox open={open} SetOpen={Open}/>\n             </>\n             }\n             {taskDetails &&<SingeleTask id={taskId} closeTask={CloseTask} isAccept={false}/>}\n          </>\n          \n}\n\nexport default TaskInProgress;"]},"metadata":{},"sourceType":"module"}