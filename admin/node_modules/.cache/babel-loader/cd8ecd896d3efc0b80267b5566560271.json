{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//import { cilSortNumericDown } from \"@coreui/icons\";\nimport{useEffect,useState}from\"react\";import ModalCard from\"src/views/modal/Modal\";import TableCard from\"src/views/table/TableCard\";import swal from\"sweetalert\";import{CKEditor}from'@ckeditor/ckeditor5-react';import ClassicEditor from'@ckeditor/ckeditor5-build-classic';import SingeleTask from\"../../TaskDetails/SingleTaskDetails\";import ApiRequest from\"src/Api/Data/requestApi\";import Urls from\"src/Api/urls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NewTaskSubmited=function NewTaskSubmited(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),Show=_useState2[0],setShow=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showRedoneModal=_useState4[0],setRedoneModal=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showSingleTask=_useState6[0],setShowSingleTask=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),newSubmited=_useState8[0],setNewSubmited=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),taskId=_useState10[0],setTaskId=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),revisionContent=_useState12[0],setRevision=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),task=_useState14[0],setTask=_useState14[1];var OpenModal=function OpenModal(id,invoice){setTaskId(id);setTask({taskid:id,invoice:invoice});setShow(true);//  console.log(task);\n};var Close=function Close(){setShow(false);setTask([]);};var CloseRedone=function CloseRedone(){setRedoneModal(false);setShow(true);};var SubmitRevisionDetails=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(revisionContent===\"\")){_context.next=3;break;}swal(\"Error\",\"provide revision details\",\"error\");return _context.abrupt(\"return\");case 3:_context.next=5;return ApiRequest.sendRevisionRequest(taskId,revisionContent);case 5:result=_context.sent;if(!(result.data===\"done\")){_context.next=15;break;}swal(\"REVISION REQUEST\",\"Sent Succesfully\",\"success\");setShow(false);setRedoneModal(false);setTask([]);LoadNewSubmitedTask();return _context.abrupt(\"return\");case 15:swal(\"Error\",\"process failed\",\"error\");case 16:case\"end\":return _context.stop();}}},_callee);}));return function SubmitRevisionDetails(){return _ref.apply(this,arguments);};}();//{`/* <span style={{cursor:\"pointer\"}} className=\"badge badge-primary badge-pill\">Download</span>*/'}\nvar Content=function Content(){var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),submitedFiles=_useState16[0],setSubmitedFiles=_useState16[1];var loadFiles=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return ApiRequest.getSubmitedFiles(taskId);case 2:result=_context2.sent;setSubmitedFiles(result.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function loadFiles(){return _ref2.apply(this,arguments);};}();if(Show){loadFiles();}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"ul\",{className:\"list-group\",children:submitedFiles.map(function(item){// tbl_task_submited_url\nreturn/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item d-flex justify-content-between align-items-center\",children:[item.tbl_task_submited_url.split('uploads/')[1],/*#__PURE__*/_jsx(\"a\",{style:{cursor:\"pointer\"},href:Urls.fileDownloadUrl+item.tbl_task_submited_url.split('uploads/')[1],className:\"badge badge-primary badge-pill\",children:\"Download\"})]});})})});};var RevisionContenT=function RevisionContenT(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h6\",{children:[\"REVISION REQUEST FOR ORDER \",task['taskid']]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Revision Details\"}),/*#__PURE__*/_jsx(CKEditor,{editor:ClassicEditor// data={message}\n,onReady:function onReady(editor){// You can store the \"editor\" and use when it is needed.\n//console.log( 'Editor is ready to use!', editor );\neditor.editing.view.change(function(writer){writer.setStyle(\"height\",\"300px\",editor.editing.view.document.getRoot());});},onChange:function onChange(event,editor){var data=editor.getData();setRevision(data);}})]});};var RequestRedone=function RequestRedone(){setShow(false);setRedoneModal(true);};var OpenSingleTaskDetails=function OpenSingleTaskDetails(id,invoice){setTask({taskid:id,invoice:invoice});setTaskId(id);setShowSingleTask(!showSingleTask);};var OpenMoreModal=function OpenMoreModal(id,invoice){swal(\"INVOICE +\".concat(invoice),{buttons:{file:{text:\"SUBMITED FILES\",value:\"file\",className:\"btn btn-outline-info\"},details:{text:\"ORDER DETAILS\",value:\"details\",className:\"btn btn-info\"}}}).then(function(value){switch(value){case\"file\":OpenModal(id,invoice);break;case\"details\":OpenSingleTaskDetails(id,invoice);break;default:break;}});};var Buttons=function Buttons(id,invoice){return/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return OpenMoreModal(id,invoice);},className:\"btn btn-primary\",children:\"More\"});};var MarkTaskcomplete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return ApiRequest.markTaskCompleted(taskId);case 2:result=_context3.sent;if(!(result.data===\"done\")){_context3.next=12;break;}swal(\"Task Completed\",\" Succesfully\",\"success\");setShow(false);setRedoneModal(false);setTask([]);LoadNewSubmitedTask();return _context3.abrupt(\"return\");case 12:swal(\"Error\",result.data,\"error\");case 13:case\"end\":return _context3.stop();}}},_callee3);}));return function MarkTaskcomplete(){return _ref3.apply(this,arguments);};}();var AcceptOrder=function AcceptOrder(){swal(\"You Are About To Mark Order \".concat(task['taskid'],\" As Complete\"),{buttons:{cancel:\"Cancel !\",complete:{text:\"COMPLETED?\",value:\"complete\",className:\"btn btn-success\"}}}).then(function(value){switch(value){case'complete':MarkTaskcomplete();///swal(\"ORDER COMPLETED\",\"succesfully\",\"success\");\nsetShow(false);setRedoneModal(false);break;default:swal(\"Process Cancelled \",\"succesfully\",\"success\");break;}});};var Btns=function Btns(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return RequestRedone();},className:\"btn btn-info\",children:\"REQUEST REDONE\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return AcceptOrder();},className:\"btn btn-success\",children:\"ACCEPT ORDER\"})]});};var LoadNewSubmitedTask=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var result,organisedData;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return ApiRequest.getNewSubmitedFiles();case 2:result=_context4.sent;organisedData=[];result.data.forEach(function(element){var dat={\"#taskId\":element.task_id,username:element.writer_display_name,email:element.writer_email,taskTitle:element.task_title,status:/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-info\",children:element.task_status}),edate:element.taskl_accepted_date,action:Buttons(element.task_id,element.task_id)};organisedData.push(dat);});setNewSubmited(organisedData);case 6:case\"end\":return _context4.stop();}}},_callee4);}));return function LoadNewSubmitedTask(){return _ref4.apply(this,arguments);};}();useEffect(function(){LoadNewSubmitedTask();},[]);var columns=[{dataField:\"#taskId\",text:\"#taskId\"},{dataField:\"username\",text:\"writername\"},{dataField:\"email\",text:\"writer email\"},{dataField:\"taskTitle\",text:\"Task Title\"},{dataField:\"status\",text:\"status\"},{dataField:\"edate\",text:\"DeadLine\"},{dataField:\"action\",text:\"Actions\"}];return/*#__PURE__*/_jsxs(_Fragment,{children:[showSingleTask&&/*#__PURE__*/_jsx(SingeleTask,{id:task['taskid'],isAccept:false,closeTask:OpenSingleTaskDetails}),/*#__PURE__*/_jsx(ModalCard,{Show:Show,Close:Close,showBtn:false,Buttons:Btns,content:Content()}),/*#__PURE__*/_jsx(ModalCard,{Show:showRedoneModal,ButtonName:\"SEND REVISION REQUEST\",content:RevisionContenT(),Save:SubmitRevisionDetails,Close:CloseRedone}),!showSingleTask&&/*#__PURE__*/_jsx(TableCard,{products:newSubmited,columns:columns,title:\"NEW SUBMITED TASK\"})]});};export default NewTaskSubmited;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/submited/submited.js"],"names":["useEffect","useState","ModalCard","TableCard","swal","CKEditor","ClassicEditor","SingeleTask","ApiRequest","Urls","NewTaskSubmited","Show","setShow","showRedoneModal","setRedoneModal","showSingleTask","setShowSingleTask","newSubmited","setNewSubmited","taskId","setTaskId","revisionContent","setRevision","task","setTask","OpenModal","id","invoice","taskid","Close","CloseRedone","SubmitRevisionDetails","sendRevisionRequest","result","data","LoadNewSubmitedTask","Content","submitedFiles","setSubmitedFiles","loadFiles","getSubmitedFiles","map","item","tbl_task_submited_url","split","cursor","fileDownloadUrl","RevisionContenT","editor","editing","view","change","writer","setStyle","document","getRoot","event","getData","RequestRedone","OpenSingleTaskDetails","OpenMoreModal","buttons","file","text","value","className","details","then","Buttons","MarkTaskcomplete","markTaskCompleted","AcceptOrder","cancel","complete","Btns","getNewSubmitedFiles","organisedData","forEach","element","dat","task_id","username","writer_display_name","email","writer_email","taskTitle","task_title","status","task_status","edate","taskl_accepted_date","action","push","columns","dataField"],"mappings":"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","sourcesContent":["//import { cilSortNumericDown } from \"@coreui/icons\";\nimport { useEffect, useState } from \"react\";\nimport ModalCard from \"src/views/modal/Modal\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport Urls from \"src/Api/urls\";\n\n\nconst NewTaskSubmited = ()=>{\n\n  const [Show,setShow]=useState(false);\n  const [showRedoneModal,setRedoneModal]= useState(false);\n  const [showSingleTask,setShowSingleTask]= useState(false);\n  const [newSubmited,setNewSubmited] = useState([]);\n  const [taskId,setTaskId] = useState('');\n  const [revisionContent,setRevision]=useState('');\n \n\n  const [task,setTask]=useState([]);\n\n  const OpenModal =(id,invoice)=>{\n       setTaskId(id);\n      setTask({taskid:id,invoice:invoice});\n      setShow(true);\n\n    //  console.log(task);\n      \n      \n  }\n\n  const Close=()=>{\n      setShow(false);\n      setTask([]);\n  }\n  const CloseRedone=()=>{\n      setRedoneModal(false);\n      setShow(true)\n  }\n\n  const SubmitRevisionDetails=async ()=>{\n       \n    if(revisionContent === \"\"){\n    \n      swal(`Error`, \"provide revision details\", \"error\");\n      return;\n    }\n \n    var result = await ApiRequest.sendRevisionRequest(taskId,revisionContent);\n\n    if(result.data === \"done\"){\n      swal(`REVISION REQUEST`, \"Sent Succesfully\", \"success\")\n    \n      setShow(false);\n      setRedoneModal(false);\n      setTask([]);\n      LoadNewSubmitedTask();\n      return\n    }\n    else{\n      swal(`Error`, \"process failed\", \"error\");\n    }\n\n   \n   \n   \n  }\n  //{`/* <span style={{cursor:\"pointer\"}} className=\"badge badge-primary badge-pill\">Download</span>*/'}\n  const Content =()=>{\n\n    const [submitedFiles,setSubmitedFiles] = useState([]);\n\n      const loadFiles = async ()=>{\n            const result = await ApiRequest.getSubmitedFiles(taskId);\n            setSubmitedFiles(result.data);\n      }\n     \n      if(Show){\n        loadFiles();\n      }\n  \n      return <>\n <ul className=\"list-group\">\n    {submitedFiles.map((item)=>{\n      \n     // tbl_task_submited_url\n     return <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n           {item.tbl_task_submited_url.split('uploads/')[1]}\n           <a style={{cursor:\"pointer\"}}  href={Urls.fileDownloadUrl+item.tbl_task_submited_url.split('uploads/')[1]} className=\"badge badge-primary badge-pill\">Download</a>\n  \n          </li>\n      \n    })}\n \n</ul>\n       </>\n  }\n\n  const RevisionContenT=()=>{\n\n    \n\n      return <>\n               {<h6>REVISION REQUEST FOR ORDER {task['taskid']}</h6>}\n               <br/>\n                 <label>Revision Details</label>\n               <CKEditor\n       \n       editor={ ClassicEditor }\n      // data={message}\n    \n       onReady={ editor => {\n           // You can store the \"editor\" and use when it is needed.\n           //console.log( 'Editor is ready to use!', editor );\n           editor.editing.view.change((writer) => {\n            writer.setStyle(\n                \"height\",\n                \"300px\",\n                editor.editing.view.document.getRoot()\n            );\n            });\n       } }\n       onChange={ ( event, editor ) => {\n           const data = editor.getData();\n                 \n          setRevision(data);\n       } }\n      \n   />\n            </>\n  }\n\n  const RequestRedone=()=>{\n      setShow(false);\n      setRedoneModal(true);\n\n  }\n\n  const OpenSingleTaskDetails=(id,invoice)=>{\n    setTask({taskid:id,invoice:invoice});\n      setTaskId(id);\n      setShowSingleTask(!showSingleTask);\n     \n  }\n\n    const OpenMoreModal=(id,invoice)=>{\n      swal(`INVOICE +${invoice}`,{\n            buttons:{\n                file:{\n                    text:\"SUBMITED FILES\",\n                    value:\"file\",\n                    className:\"btn btn-outline-info\"\n                },\n               \n                details:{\n                    text:\"ORDER DETAILS\",\n                    value:\"details\",\n                    className:\"btn btn-info\"\n                },\n            }\n      })\n      .then((value)=>{\n          switch (value) {\n              case \"file\":\n                  OpenModal(id,invoice);\n                  break;\n               \n                    case \"details\":\n                          OpenSingleTaskDetails(id,invoice);\n                        break;  \n          \n              default:\n                  break;\n          }\n      })\n    }\n    const Buttons=(id,invoice)=>{\n        return <button onClick={()=>OpenMoreModal(id,invoice)} className=\"btn btn-primary\">More</button>\n     }\n\n     const MarkTaskcomplete = async ()=>{\n         const result = await ApiRequest.markTaskCompleted(taskId);\n       \n\n         if(result.data === \"done\"){\n           swal(`Task Completed`, \" Succesfully\", \"success\")\n         \n           setShow(false);\n           setRedoneModal(false);\n           setTask([]);\n           LoadNewSubmitedTask();\n           return\n         }else{\n          swal(`Error`,result.data, \"error\")\n         }\n\n     }\n\n   const AcceptOrder=()=>{\n       swal(`You Are About To Mark Order ${task['taskid']} As Complete`,{\n           buttons:{\n               cancel:\"Cancel !\",\n               complete:{\n                   text:\"COMPLETED?\",\n                    value:\"complete\",\n                    className:\"btn btn-success\"\n               }\n           }\n       })\n       .then((value)=>{\n           switch (value) {\n               case 'complete':\n                MarkTaskcomplete();\n                     ///swal(\"ORDER COMPLETED\",\"succesfully\",\"success\");\n                setShow(false);\n                setRedoneModal(false);\n                   break;\n           \n               default:\n                   swal(\"Process Cancelled \",\"succesfully\",\"success\");\n                   break;\n           }\n       })\n   }  \n\n     const Btns=()=>{\n        return <> \n                  <button onClick={()=>RequestRedone()} className=\"btn btn-info\">REQUEST REDONE</button>\n                  <button onClick={()=>AcceptOrder()}  className=\"btn btn-success\">ACCEPT ORDER</button>\n                 \n              </>\n     }\n  \n\n const LoadNewSubmitedTask =async ()=>{\n   const result = await ApiRequest.getNewSubmitedFiles();\n\n   var organisedData=[];\n       result.data.forEach(element => {\n              var dat ={\n                \"#taskId\":element.task_id,\n                username:element.writer_display_name,\n                email:element.writer_email,\n                taskTitle:element.task_title,\n                status:<span className=\"badge badge-info\">{element.task_status}</span>,\n                edate:element.taskl_accepted_date,\n                action:Buttons(element.task_id,element.task_id)\n              }\n\n              organisedData.push(dat);\n       });\n\n       setNewSubmited(organisedData);\n\n\n }   \n \n useEffect(()=>{\n   LoadNewSubmitedTask();\n },[]);\n\n\n\n\n    const columns=[\n        {\n            dataField: \"#taskId\",\n            text: \"#taskId\",\n           \n          },\n          {\n            dataField: \"username\",\n            text: \"writername\",\n           \n          },\n          {\n            dataField: \"email\",\n            text: \"writer email\",\n           \n          },\n          {\n            dataField: \"taskTitle\",\n            text: \"Task Title\",\n           \n          },\n          {\n            dataField: \"status\",\n            text: \"status\",\n           \n          },\n          {\n            dataField: \"edate\",\n            text: \"DeadLine\",\n           \n          },\n          {\n            dataField: \"action\",\n            text: \"Actions\",\n           \n          },\n    ]\n  \n\n    return <>\n          {showSingleTask && <SingeleTask id={task['taskid']} isAccept={false} closeTask={OpenSingleTaskDetails}/>}\n           <ModalCard\n            Show={Show} Close={Close}\n            showBtn={false}\n            Buttons={Btns}\n            content={Content()}\n             />\n\n             <ModalCard\n              Show={showRedoneModal}\n               ButtonName={\"SEND REVISION REQUEST\"}\n               content={RevisionContenT()}\n               Save={SubmitRevisionDetails}\n               Close={CloseRedone}\n\n             />\n        {!showSingleTask &&  <TableCard products={newSubmited} columns={columns} title={\"NEW SUBMITED TASK\"}/>}\n     </>\n  \n\n}\n\nexport default NewTaskSubmited;"]},"metadata":{},"sourceType":"module"}