{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport download from 'downloadjs';\nimport { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\n\nvar body = function body() {\n  return {\n    \"x-access-key\": Tokens().accessToken,\n    \"x-access-token\": Tokens().refreshToken\n  };\n};\n\nfunction sendUpload(_x, _x2) {\n  return _sendUpload.apply(this, arguments);\n}\n\nfunction _sendUpload() {\n  _sendUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(endPoint, formData) {\n    var result, data, Result;\n    return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            _context18.prev = 0;\n            _context18.next = 3;\n            return Axios.post(endPoint, formData);\n\n          case 3:\n            result = _context18.sent;\n\n            if (!(result.data == false)) {\n              _context18.next = 15;\n              break;\n            }\n\n            _context18.next = 7;\n            return UpdateToken(Tokens().refreshToken);\n\n          case 7:\n            data = _context18.sent;\n\n            if (!(data == true)) {\n              _context18.next = 13;\n              break;\n            }\n\n            _context18.next = 11;\n            return Axios.post(endPoint, formData);\n\n          case 11:\n            Result = _context18.sent;\n            return _context18.abrupt(\"return\", Result.data);\n\n          case 13:\n            _context18.next = 16;\n            break;\n\n          case 15:\n            return _context18.abrupt(\"return\", result.data);\n\n          case 16:\n            _context18.next = 21;\n            break;\n\n          case 18:\n            _context18.prev = 18;\n            _context18.t0 = _context18[\"catch\"](0);\n            console.log(_context18.t0);\n\n          case 21:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18, null, [[0, 18]]);\n  }));\n  return _sendUpload.apply(this, arguments);\n}\n\nvar ApiRequest = {\n  DashBoardData: function () {\n    var _DashBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              endPoint = \"dashboard\";\n              _context.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context.sent;\n\n              if (!(result.data == false)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context.sent;\n\n              if (!(data == true)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", Result);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", result);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    function DashBoardData() {\n      return _DashBoardData.apply(this, arguments);\n    }\n\n    return DashBoardData;\n  }(),\n  getOrdersInProgress: function () {\n    var _getOrdersInProgress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              endPoint = \"in-progress\";\n              _context2.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.data == false)) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context2.sent;\n\n              if (!(data == true)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return Axios.post(endPoint, body);\n\n            case 12:\n              Result = _context2.sent;\n              return _context2.abrupt(\"return\", Result);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", result);\n\n            case 17:\n              _context2.next = 22;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 19]]);\n    }));\n\n    function getOrdersInProgress() {\n      return _getOrdersInProgress.apply(this, arguments);\n    }\n\n    return getOrdersInProgress;\n  }(),\n  RegisterWriter: function () {\n    var _RegisterWriter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, username, password, ConfirmPassword, country, address, phone, category) {\n      var data, endPoint, result, _data, Result;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = 'email=' + email + '&username=' + username + '&password=' + password + '&country=' + country + '&address=' + address + '&phone=' + phone + '&category=' + category;\n              _context3.prev = 1;\n              endPoint = \"register/writer?\" + data;\n              _context3.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context3.sent;\n\n              if (!(result.data == false)) {\n                _context3.next = 17;\n                break;\n              }\n\n              _context3.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data = _context3.sent;\n\n              if (!(_data == true)) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context3.sent;\n              return _context3.abrupt(\"return\", Result);\n\n            case 15:\n              _context3.next = 18;\n              break;\n\n            case 17:\n              return _context3.abrupt(\"return\", result);\n\n            case 18:\n              _context3.next = 23;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 20]]);\n    }));\n\n    function RegisterWriter(_x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n      return _RegisterWriter.apply(this, arguments);\n    }\n\n    return RegisterWriter;\n  }(),\n  getCategories: function () {\n    var _getCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              endPoint = \"category\";\n              _context4.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context4.sent;\n\n              if (!(result.data == false)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context4.sent;\n\n              if (!(data == true)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context4.sent;\n              return _context4.abrupt(\"return\", Result);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", result);\n\n            case 17:\n              _context4.next = 22;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 19]]);\n    }));\n\n    function getCategories() {\n      return _getCategories.apply(this, arguments);\n    }\n\n    return getCategories;\n  }(),\n  getWriters: function () {\n    var _getWriters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              endPoint = \"writers\"; //+data;\n\n              _context5.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context5.sent;\n\n              if (!(result.data == false)) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context5.sent;\n\n              if (!(data == true)) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context5.sent;\n              return _context5.abrupt(\"return\", Result);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", result);\n\n            case 17:\n              _context5.next = 22;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 22:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19]]);\n    }));\n\n    function getWriters() {\n      return _getWriters.apply(this, arguments);\n    }\n\n    return getWriters;\n  }(),\n  BlockUser: function () {\n    var _BlockUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              endPoint = \"block?\" + \"user_id=\" + id; //+data;\n\n              _context6.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context6.sent;\n\n              if (!(result.data == false)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context6.sent;\n\n              if (!(data == true)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context6.sent;\n              return _context6.abrupt(\"return\", Result);\n\n            case 14:\n              _context6.next = 17;\n              break;\n\n            case 16:\n              return _context6.abrupt(\"return\", result);\n\n            case 17:\n              _context6.next = 22;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 19]]);\n    }));\n\n    function BlockUser(_x11) {\n      return _BlockUser.apply(this, arguments);\n    }\n\n    return BlockUser;\n  }(),\n  unblockUser: function () {\n    var _unblockUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              endPoint = \"unblock?\" + \"user_id=\" + id; //+data;\n\n              _context7.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context7.sent;\n              console.log(result);\n\n              if (!(result.data == false)) {\n                _context7.next = 17;\n                break;\n              }\n\n              _context7.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              data = _context7.sent;\n\n              if (!(data == true)) {\n                _context7.next = 15;\n                break;\n              }\n\n              _context7.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context7.sent;\n              return _context7.abrupt(\"return\", Result);\n\n            case 15:\n              _context7.next = 18;\n              break;\n\n            case 17:\n              return _context7.abrupt(\"return\", result);\n\n            case 18:\n              _context7.next = 23;\n              break;\n\n            case 20:\n              _context7.prev = 20;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.log(_context7.t0);\n\n            case 23:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 20]]);\n    }));\n\n    function unblockUser(_x12) {\n      return _unblockUser.apply(this, arguments);\n    }\n\n    return unblockUser;\n  }(),\n  getUserDetails: function () {\n    var _getUserDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              endPoint = \"writer/details/\".concat(id); //+data;\n\n              _context8.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context8.sent;\n\n              if (!(result.data == false)) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context8.sent;\n\n              if (!(data == true)) {\n                _context8.next = 14;\n                break;\n              }\n\n              _context8.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context8.sent;\n              return _context8.abrupt(\"return\", Result);\n\n            case 14:\n              _context8.next = 17;\n              break;\n\n            case 16:\n              return _context8.abrupt(\"return\", result.data);\n\n            case 17:\n              _context8.next = 22;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0);\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 19]]);\n    }));\n\n    function getUserDetails(_x13) {\n      return _getUserDetails.apply(this, arguments);\n    }\n\n    return getUserDetails;\n  }(),\n  getUnAssignedTask: function () {\n    var _getUnAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              endPoint = \"unAssignedTask\"; //+data;\n\n              _context9.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context9.sent;\n\n              if (!(result.data == false)) {\n                _context9.next = 16;\n                break;\n              }\n\n              _context9.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context9.sent;\n\n              if (!(data == true)) {\n                _context9.next = 14;\n                break;\n              }\n\n              _context9.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context9.sent;\n              return _context9.abrupt(\"return\", Result);\n\n            case 14:\n              _context9.next = 17;\n              break;\n\n            case 16:\n              return _context9.abrupt(\"return\", result);\n\n            case 17:\n              _context9.next = 22;\n              break;\n\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.log(_context9.t0);\n\n            case 22:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 19]]);\n    }));\n\n    function getUnAssignedTask() {\n      return _getUnAssignedTask.apply(this, arguments);\n    }\n\n    return getUnAssignedTask;\n  }(),\n  asignTaskToUser: function () {\n    var _asignTaskToUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(user_id, task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              endPoint = \"AssignTask/\".concat(user_id, \"/\").concat(task_id); //user_id,task_id\n\n              _context10.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context10.sent;\n\n              if (!(result.data == false)) {\n                _context10.next = 16;\n                break;\n              }\n\n              _context10.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context10.sent;\n\n              if (!(data == true)) {\n                _context10.next = 14;\n                break;\n              }\n\n              _context10.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context10.sent;\n              return _context10.abrupt(\"return\", Result);\n\n            case 14:\n              _context10.next = 17;\n              break;\n\n            case 16:\n              return _context10.abrupt(\"return\", result);\n\n            case 17:\n              _context10.next = 23;\n              break;\n\n            case 19:\n              _context10.prev = 19;\n              _context10.t0 = _context10[\"catch\"](0);\n              console.log(_context10.t0);\n              return _context10.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 19]]);\n    }));\n\n    function asignTaskToUser(_x14, _x15) {\n      return _asignTaskToUser.apply(this, arguments);\n    }\n\n    return asignTaskToUser;\n  }(),\n  postAllowedTaskNumber: function () {\n    var _postAllowedTaskNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(number) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              endPoint = \"allowedTask/\".concat(number); //user_id,task_id\n\n              _context11.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context11.sent;\n\n              if (!(result.data == false)) {\n                _context11.next = 16;\n                break;\n              }\n\n              _context11.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context11.sent;\n\n              if (!(data == true)) {\n                _context11.next = 14;\n                break;\n              }\n\n              _context11.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context11.sent;\n              return _context11.abrupt(\"return\", Result);\n\n            case 14:\n              _context11.next = 17;\n              break;\n\n            case 16:\n              return _context11.abrupt(\"return\", result);\n\n            case 17:\n              _context11.next = 23;\n              break;\n\n            case 19:\n              _context11.prev = 19;\n              _context11.t0 = _context11[\"catch\"](0);\n              console.log(_context11.t0);\n              return _context11.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 19]]);\n    }));\n\n    function postAllowedTaskNumber(_x16) {\n      return _postAllowedTaskNumber.apply(this, arguments);\n    }\n\n    return postAllowedTaskNumber;\n  }(),\n  postSequence: function () {\n    var _postSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(sequence) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              endPoint = \"sequence/\".concat(sequence); //user_id,task_id\n\n              _context12.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context12.sent;\n\n              if (!(result.data == false)) {\n                _context12.next = 16;\n                break;\n              }\n\n              _context12.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context12.sent;\n\n              if (!(data == true)) {\n                _context12.next = 14;\n                break;\n              }\n\n              _context12.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context12.sent;\n              return _context12.abrupt(\"return\", Result);\n\n            case 14:\n              _context12.next = 17;\n              break;\n\n            case 16:\n              return _context12.abrupt(\"return\", result);\n\n            case 17:\n              _context12.next = 23;\n              break;\n\n            case 19:\n              _context12.prev = 19;\n              _context12.t0 = _context12[\"catch\"](0);\n              console.log(_context12.t0);\n              return _context12.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 19]]);\n    }));\n\n    function postSequence(_x17) {\n      return _postSequence.apply(this, arguments);\n    }\n\n    return postSequence;\n  }(),\n  updateCategory: function () {\n    var _updateCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(category, user_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              endPoint = \"updateCategory/\".concat(category, \"/\").concat(user_id); //user_id,task_id\n\n              _context13.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context13.sent;\n\n              if (!(result.data == false)) {\n                _context13.next = 16;\n                break;\n              }\n\n              _context13.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context13.sent;\n\n              if (!(data == true)) {\n                _context13.next = 14;\n                break;\n              }\n\n              _context13.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context13.sent;\n              return _context13.abrupt(\"return\", Result);\n\n            case 14:\n              _context13.next = 17;\n              break;\n\n            case 16:\n              return _context13.abrupt(\"return\", result);\n\n            case 17:\n              _context13.next = 23;\n              break;\n\n            case 19:\n              _context13.prev = 19;\n              _context13.t0 = _context13[\"catch\"](0);\n              console.log(_context13.t0);\n              return _context13.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 19]]);\n    }));\n\n    function updateCategory(_x18, _x19) {\n      return _updateCategory.apply(this, arguments);\n    }\n\n    return updateCategory;\n  }(),\n  uploadFiles: function () {\n    var _uploadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(task_id, validFiles) {\n      var endPoint, formData, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              //try {\n              endPoint = \"FileUpload/\".concat(task_id); //user_id,task_id\n              //for (let i = 0; i < validFiles.length; i++) {\n              //   console.log(validFiles[i]);\n\n              formData = new FormData();\n              formData.append('files', validFiles);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken); //await sendUpload(endPoint,formData);\n\n              _context14.prev = 5;\n              _context14.next = 8;\n              return Axios.post(endPoint, formData);\n\n            case 8:\n              result = _context14.sent;\n              console.log(result.data);\n\n              if (!(result.data == false)) {\n                _context14.next = 22;\n                break;\n              }\n\n              _context14.next = 13;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 13:\n              data = _context14.sent;\n\n              if (!(data == true)) {\n                _context14.next = 20;\n                break;\n              }\n\n              _context14.next = 17;\n              return Axios.post(endPoint, formData);\n\n            case 17:\n              Result = _context14.sent;\n              formData = \"\";\n              return _context14.abrupt(\"return\", Result.data);\n\n            case 20:\n              _context14.next = 24;\n              break;\n\n            case 22:\n              formData = \"\";\n              return _context14.abrupt(\"return\", result.data);\n\n            case 24:\n              _context14.next = 29;\n              break;\n\n            case 26:\n              _context14.prev = 26;\n              _context14.t0 = _context14[\"catch\"](5);\n              formData = \"\"; //  console.log(error);\n\n            case 29:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[5, 26]]);\n    }));\n\n    function uploadFiles(_x20, _x21) {\n      return _uploadFiles.apply(this, arguments);\n    }\n\n    return uploadFiles;\n  }(),\n  postTask: function () {\n    var _postTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(title, category, time, expectedDate, pages, pricePerpage, totalAmountTobePaid, description, work_type, service) {\n      var data, endPoint, result, _data2, Result;\n\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              data = \"title=\" + title + \"&category=\" + category + \"&time=\" + time + \"&expectedDate=\" + expectedDate + \"&pages=\" + pages + \"&pricePerpage=\" + pricePerpage + \"&totalAmountTobePaid=\" + totalAmountTobePaid + \"&description=\" + description + \"&work_type=\" + work_type + \"&service=\" + service;\n              _context15.prev = 1;\n              endPoint = \"createTask?\" + data; ///user_id,task_id\n\n              _context15.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context15.sent;\n\n              if (!(result.data == false)) {\n                _context15.next = 17;\n                break;\n              }\n\n              _context15.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data2 = _context15.sent;\n\n              if (!(_data2 == true)) {\n                _context15.next = 15;\n                break;\n              }\n\n              _context15.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context15.sent;\n              return _context15.abrupt(\"return\", Result);\n\n            case 15:\n              _context15.next = 18;\n              break;\n\n            case 17:\n              return _context15.abrupt(\"return\", result);\n\n            case 18:\n              _context15.next = 24;\n              break;\n\n            case 20:\n              _context15.prev = 20;\n              _context15.t0 = _context15[\"catch\"](1);\n              console.log(_context15.t0);\n              return _context15.abrupt(\"return\", []);\n\n            case 24:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[1, 20]]);\n    }));\n\n    function postTask(_x22, _x23, _x24, _x25, _x26, _x27, _x28, _x29, _x30, _x31) {\n      return _postTask.apply(this, arguments);\n    }\n\n    return postTask;\n  }(),\n  getSingleTaskFullDetails: function () {\n    var _getSingleTaskFullDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              endPoint = \"getSingleTaskDetails/\".concat(task_id); //user_id,task_id\n\n              _context16.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context16.sent;\n\n              if (!(result.data == false)) {\n                _context16.next = 16;\n                break;\n              }\n\n              _context16.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context16.sent;\n\n              if (!(data == true)) {\n                _context16.next = 14;\n                break;\n              }\n\n              _context16.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context16.sent;\n              return _context16.abrupt(\"return\", Result);\n\n            case 14:\n              _context16.next = 17;\n              break;\n\n            case 16:\n              return _context16.abrupt(\"return\", result);\n\n            case 17:\n              _context16.next = 23;\n              break;\n\n            case 19:\n              _context16.prev = 19;\n              _context16.t0 = _context16[\"catch\"](0);\n              console.log(_context16.t0);\n              return _context16.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 19]]);\n    }));\n\n    function getSingleTaskFullDetails(_x32) {\n      return _getSingleTaskFullDetails.apply(this, arguments);\n    }\n\n    return getSingleTaskFullDetails;\n  }(),\n  fileDownload: function () {\n    var _fileDownload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(fileURL) {\n      var data, endPoint, result;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.prev = 0;\n              data = \"Url=\" + fileURL;\n              endPoint = \"downloadFile?\" + data; //user_id,task_id\n\n              _context17.next = 5;\n              return Axios.post(endPoint, {\n                responseType: 'blob'\n              }).then(function (resp) {\n                /*  console.log('--downloadErrors-', resp.data);\n                const element = document.createElement('a');\n                const file = new Blob([JSON.stringify(resp.data)], {\n                type: 'text/plain'\n                });\n                element.href = URL.createObjectURL(file);\n                element.download = 'bb.pdf';\n                element.click();*/\n                var element = document.createElement('a');\n                element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(new Blob([JSON.stringify(resp.data)])));\n                element.setAttribute('download', \"mm.pdf\");\n                element.style.display = 'none';\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                /*\n                const endPoint =`downloadFile?`+data;//user_id,task_id/*\n                const res = await fetch('http://localhost:4000/downloadFile');\n                const blob = await res.blob();\n                console.log(res)*/\n                /// download(resp.data, 'test.pdf');\n\n                /*  const pdfBlob = new Blob([resp.data], { type: \"application/pdf\" })\n                  const blobUrl = window.URL.createObjectURL(pdfBlob)\n                 const link = document.createElement('a')\n                link.href = blobUrl\n                link.setAttribute('download',\"blop\")\n                link.click();\n                link.remove();\n                URL.revokeObjectURL(blobUrl);\n                //download(resp.data, \"nnn\");\n                  console.log(resp)*/\n\n                /* //function download(textAreaval,FileName,path,name){\n                   var element = document.createElement('a');\n                   element.setAttribute('href','data:text/plain;charset=utf-8,'+encodeURIComponent(resp.data));\n                   element.setAttribute('download',\"kklll\");\n                   element.style.display='block';\n                   document.body.appendChild(element);\n                   //getUserDetails(element);\n                   element.click();\n                  // window.location='?page=folder&path=control&project='+path+'&name='+name+'';\n                   document.body.removeChild(element);*/\n                // }\n              });\n\n            case 5:\n              result = _context17.sent;\n              _context17.next = 10;\n              break;\n\n            case 8:\n              _context17.prev = 8;\n              _context17.t0 = _context17[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[0, 8]]);\n    }));\n\n    function fileDownload(_x33) {\n      return _fileDownload.apply(this, arguments);\n    }\n\n    return fileDownload;\n  }(),\n  getDataFromURL: function getDataFromURL(url) {\n    return new Promise(function (resolve, reject) {\n      var headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Accept', 'application/json'); //headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\n\n      headers.append('Origin', 'http://localhost:3000');\n      setTimeout(function () {\n        fetch(url, {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: headers\n        }).then(function (response) {\n          return response.text();\n        }).then(function (data) {\n          resolve(data);\n        });\n      }, 2000); //}, 2000);\n    });\n  }\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/Api/Data/requestApi.js"],"names":["axios","download","Tokens","UpdateToken","Axios","body","accessToken","refreshToken","sendUpload","endPoint","formData","post","result","data","Result","console","log","ApiRequest","DashBoardData","getOrdersInProgress","RegisterWriter","email","username","password","ConfirmPassword","country","address","phone","category","getCategories","getWriters","BlockUser","id","unblockUser","getUserDetails","getUnAssignedTask","asignTaskToUser","user_id","task_id","postAllowedTaskNumber","number","postSequence","sequence","updateCategory","uploadFiles","validFiles","FormData","append","postTask","title","time","expectedDate","pages","pricePerpage","totalAmountTobePaid","description","work_type","service","getSingleTaskFullDetails","fileDownload","fileURL","responseType","then","resp","element","document","createElement","setAttribute","encodeURIComponent","Blob","JSON","stringify","style","display","appendChild","click","removeChild","getDataFromURL","url","Promise","resolve","reject","headers","Headers","setTimeout","fetch","mode","credentials","method","response","text"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport download from 'downloadjs';\n\nimport { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\n  async function sendUpload(endPoint,formData){\n    try {\n      \n    \n      const result = await Axios.post(endPoint,formData);\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,formData);\n            return Result.data;\n          }\n      }\n      else{\n          return result.data;\n      }\n    } catch (error) {\n        console.log(error);\n    }\n    }\n\n const ApiRequest={\n       DashBoardData:async()=>{\n        try {\n            const endPoint =`dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n          console.log(error);\n     }\n       },\n       getOrdersInProgress:async ()=>{\n        try {\n            const endPoint = `in-progress`;\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false){\n             const data = await UpdateToken(Tokens().refreshToken);\n             if(data == true){\n               const Result = await Axios.post(endPoint,body);\n               return Result;\n             }\n            }else{\n                return result;\n            }\n      } catch (error) {\n           console.log(error);\n      }\n       },\n\n       RegisterWriter:async (email,username,password,ConfirmPassword,country,address,phone,category)=>{\n\n        var data = 'email='+email+'&username='+username+'&password='+password+'&country='+country+'&address='+address+'&phone='+phone+'&category='+category;\n\n        try {\n          const endPoint =`register/writer?`+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n\n       },\n       getCategories:async ()=>{\n        try {\n          const endPoint =`category`;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      getWriters:async()=>{\n        //writers\n        try {\n          const endPoint =`writers`//+data;\n\n          const result = await Axios.post(endPoint,body());\n         \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n      BlockUser:async(id)=>{\n        try {\n          const endPoint =`block?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      unblockUser:async(id)=>{\n        try {\n          const endPoint =`unblock?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          console.log(result)\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n      getUserDetails:async (id)=>{\n       // writer/details/2\n       \n       try {\n        const endPoint =`writer/details/${id}`//+data;\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result.data;\n        }\n     }catch(e){\n      console.log(e);\n     }\n\n       \n      },\n      getUnAssignedTask:async ()=>{\n         \n        try {\n          const endPoint =`unAssignedTask`//+data;\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n        \n\n\n      },\n\n      asignTaskToUser:async(user_id,task_id)=>{\n        \n        try {\n          const endPoint =`AssignTask/${user_id}/${task_id}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n\n      },\n\n      postAllowedTaskNumber:async (number)=>{\n        //allowedTask\n        try {\n          const endPoint =`allowedTask/${number}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n      postSequence:async (sequence)=>{\n       // sequence\n       try {\n        const endPoint =`sequence/${sequence}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n      },\n\n      updateCategory:async (category,user_id)=>{\n        try {\n          const endPoint =`updateCategory/${category}/${user_id}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n     \n\n\n     uploadFiles:async (task_id,validFiles) => {\n      //try {\n        const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n        //for (let i = 0; i < validFiles.length; i++) {\n       //   console.log(validFiles[i]);\n          var formData = new FormData();\n          formData.append('files', validFiles);\n          formData.append( \"x-access-key\", Tokens().accessToken)\n          formData.append(\"x-access-token\",Tokens().refreshToken)\n             //await sendUpload(endPoint,formData);\n             try {\n      \n    \n              const result = await Axios.post(endPoint,formData);\n              console.log(result.data)\n              \n              if(result.data == false)\n              {\n                  const data = await UpdateToken(Tokens().refreshToken);\n\n                  if(data == true)\n                  {\n                    const Result = await Axios.post(endPoint,formData);\n                    \n                    formData=\"\";\n                    return Result.data;\n                  }\n              }\n              else{\n                formData=\"\";\n                  return result.data;\n                  \n              }\n            } catch (error) {\n              formData=\"\";\n              //  console.log(error);\n            }\n       \n         \n       // }\n\n       \n    // }catch(e){\n       \n    //  console.log(e);\n    //  return [];\n   //  }\n      \n       \n        },\n\n     postTask:async(title,category,time,expectedDate,pages,pricePerpage,totalAmountTobePaid,description,work_type,service)=>{\n\n      var data = \"title=\"+title+\"&category=\"+category+\"&time=\"+time+\"&expectedDate=\"+expectedDate+\"&pages=\"+pages+\"&pricePerpage=\"+pricePerpage+\"&totalAmountTobePaid=\"+totalAmountTobePaid+\"&description=\"+description+\"&work_type=\"+work_type+\"&service=\"+service;\n      try {\n        const endPoint =`createTask?`+data;///user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n\n      },\n\n      getSingleTaskFullDetails:async(task_id)=>{\n      //  getSingleTaskDetails\n      \n      try {\n        const endPoint =`getSingleTaskDetails/${task_id}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n\n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n\n      fileDownload:async (fileURL)=>{\n         /* fetch(fileURL, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/pdf',\n          },\n        })\n        .then((response) => response.blob())\n        .then((blob) => {\n          // Create blob link to download\n          const url = window.URL.createObjectURL(\n            new Blob([blob]),\n          );\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute(\n            'download',\n            `FileName.pdf`,\n          );\n      \n          // Append to html link element page\n          document.body.appendChild(link);\n      \n          // Start download\n          link.click();\n      \n          // Clean up and remove the link\n          link.parentNode.removeChild(link);\n        });\n*/\n   /*     axios({\n          url:fileURL,\n          method:'GET',\n          responseType:'blob'\n        })\n        .then((resp)=>{\n         const url = window.URL.createObjectURL(new Blob([resp.data]));\n         const link = document.createElement(\"a\");\n         link.href = url;\n         link.setAttribute(\n             \"download\",\n            \"name.pdf\"\n         );\n         document.body.appendChild(link);\n         link.click();\n        })\n        .catch((e)=>{\n          console.log(e);\n        })*/\n\n      try {\n         var data = \"Url=\"+fileURL;\n          const endPoint =`downloadFile?`+data;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,{ responseType: 'blob'})\n\n          .then(resp => {\n          /*  console.log('--downloadErrors-', resp.data);\n  const element = document.createElement('a');\n  const file = new Blob([JSON.stringify(resp.data)], {\n    type: 'text/plain'\n  });\n  element.href = URL.createObjectURL(file);\n  element.download = 'bb.pdf';\n  element.click();*/\n\n\n  var element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(\n    new Blob([JSON.stringify(resp.data)])\n\n  ));\n  element.setAttribute('download', \"mm.pdf\");\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n            /*\n            const endPoint =`downloadFile?`+data;//user_id,task_id/*\n            const res = await fetch('http://localhost:4000/downloadFile');\n            const blob = await res.blob();\n            console.log(res)*/\n           /// download(resp.data, 'test.pdf');\n          /*  const pdfBlob = new Blob([resp.data], { type: \"application/pdf\" })\n\n           const blobUrl = window.URL.createObjectURL(pdfBlob)\n           const link = document.createElement('a')\n      link.href = blobUrl\n      link.setAttribute('download',\"blop\")\n      link.click();\n      link.remove();\nURL.revokeObjectURL(blobUrl);\n          //download(resp.data, \"nnn\");\n            console.log(resp)*/\n\n           /* //function download(textAreaval,FileName,path,name){\n              var element = document.createElement('a');\n              element.setAttribute('href','data:text/plain;charset=utf-8,'+encodeURIComponent(resp.data));\n              element.setAttribute('download',\"kklll\");\n              element.style.display='block';\n              document.body.appendChild(element);\n              //getUserDetails(element);\n              element.click();\n             // window.location='?page=folder&path=control&project='+path+'&name='+name+'';\n              document.body.removeChild(element);*/\n             // }\n         });\n       }catch(e){\n\n       }\n\n      /*  var element = document.createElement('a');\n        element.setAttribute('href', fileURL);\n      \n        element.style.display = 'none';\n        document.body.appendChild(element);\n      \n        element.click();\n      \n        document.body.removeChild(element);\n        */\n       /*fetch(fileURL, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/pdf',\n          },\n        })\n        .then((response) => response.blob())\n        .then((blob) => {\n          // Create blob link to download\n          const url = window.URL.createObjectURL(\n            new Blob([blob]),\n          );\n          const link = document.createElement('a');\n          link.href = url;\n          link.setAttribute(\n            'download',\n            `FileName.pdf`,\n          );\n      \n          // Append to html link element page\n          document.body.appendChild(link);\n      \n          // Start download\n          link.click();\n      \n          // Clean up and remove the link\n          link.parentNode.removeChild(link);\n        });*/\n      },\n      getDataFromURL:(url) => new Promise((resolve, reject) => {\n        let headers = new Headers();\n\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        //headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\n        headers.append('Origin','http://localhost:3000');\n        setTimeout(() => {\n            fetch(url, {\n              mode: 'cors',\n              credentials: 'include',\n              method: 'GET',\n              headers: headers\n          })\n                .then(response => response.text())\n                .then(data => {\n                    resolve(data)\n                });\n        },2000);\n    //}, 2000);\n      })\n }   \n    \n\nexport  default ApiRequest;"]},"metadata":{},"sourceType":"module"}