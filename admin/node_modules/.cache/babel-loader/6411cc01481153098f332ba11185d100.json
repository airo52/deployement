{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/Redones/redones.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport ChatBox from \"src/views/ChatBox/ChatBox\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TaskBeingRedone = function TaskBeingRedone(_ref) {\n  _s();\n\n  var socket = _ref.socket;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskDetails = _useState4[0],\n      setTaskDetails = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskId = _useState6[0],\n      setTaskId = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      Redone = _useState8[0],\n      setRedone = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      show = _useState10[0],\n      setShow = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      taskid = _useState14[0],\n      setTaskid = _useState14[1];\n\n  var Open = function Open(mail, taskid) {\n    setEmail(mail);\n    setTaskid(taskid);\n    setOpen(!open);\n  };\n\n  var CloseTask = function CloseTask() {\n    setTaskDetails(false);\n  };\n\n  var getOrdersBeingRevised = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, organisedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getOrdersBeingRevised();\n\n            case 2:\n              result = _context.sent;\n              organisedData = [];\n              result.data.forEach(function (element) {\n                var dat = {\n                  \"#taskId\": element.task_id,\n                  title: element.task_title,\n                  writerName: element.writer_display_name,\n                  email: element.writer_email,\n                  status: element.task_status,\n                  category: element.writer_category,\n                  sdate: element.taskl_accepted_date,\n                  ddate: element.task_deadline,\n                  Action: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: function onClick() {\n                        return TaskDetails(element.task_id);\n                      },\n                      className: \"btn btn-info\",\n                      children: \"Task Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 40,\n                      columnNumber: 11\n                    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: function onClick() {\n                        return Open(element.writer_email, element.task_id);\n                      },\n                      style: {\n                        marginLeft: \"2px\"\n                      },\n                      className: \"btn btn-success fa fa-comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 12\n                    }, _this)]\n                  }, void 0, true)\n                };\n                setShow(true);\n                organisedData.push(dat);\n              });\n              setRedone(organisedData); // console.log(result.data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOrdersBeingRevised() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getOrdersBeingRevised();\n  }, []);\n\n  var TaskDetails = function TaskDetails(taskId) {\n    setTaskId(taskId);\n    setTaskDetails(true);\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"writerName\",\n    text: \"Writer Username\"\n  }, {\n    dataField: \"email\",\n    text: \"email\"\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"sdate\",\n    text: \"Submited-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    \"#taskId\": \"7888888\",\n    title: \"Lorem ipsume\",\n    writerName: \"John \",\n    email: \"airotony8@gmail.com\",\n    status: \"Revision\",\n    category: \"Lorem\",\n    sdate: \"2018-9-10\",\n    ddate: \"2019-10-10\",\n    Action: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return TaskDetails(2);\n        },\n        className: \"btn btn-info\",\n        children: \"Task Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 22\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return Open();\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-success fa fa-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }, _this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!taskDetails && show && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(TableCard, {\n        products: Redone,\n        columns: columns,\n        title: \"TASK BEING REVISED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }, _this), open && /*#__PURE__*/_jsxDEV(ChatBox, {\n        open: open,\n        SetOpen: Open,\n        email: email,\n        socket: socket,\n        taskid: taskid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 23\n      }, _this)]\n    }, void 0, true), taskDetails && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: CloseTask,\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 28\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TaskBeingRedone, \"MkqlaJ6GXscbaMljZklnjU3bo4Q=\");\n\n_c = TaskBeingRedone;\nexport default TaskBeingRedone;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskBeingRedone\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/Redones/redones.js"],"names":["useEffect","useState","ApiRequest","ChatBox","TableCard","SingeleTask","TaskBeingRedone","socket","open","setOpen","taskDetails","setTaskDetails","taskId","setTaskId","Redone","setRedone","show","setShow","email","setEmail","taskid","setTaskid","Open","mail","CloseTask","getOrdersBeingRevised","result","organisedData","data","forEach","element","dat","task_id","title","task_title","writerName","writer_display_name","writer_email","status","task_status","category","writer_category","sdate","taskl_accepted_date","ddate","task_deadline","Action","TaskDetails","marginLeft","push","columns","dataField","text","sort","products"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport ChatBox from \"src/views/ChatBox/ChatBox\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\n\nconst TaskBeingRedone = ({socket})=>{\n  const [open,setOpen]=useState(false);\n  const [taskDetails,setTaskDetails] = useState(false);\n  const [taskId,setTaskId]=useState('');\n  const [Redone,setRedone]=useState([]);\n  const [show,setShow] = useState(false);\n  const [email,setEmail] = useState('');\n  const [taskid,setTaskid] =useState('');\n\n  const Open=(mail,taskid)=>{\n    setEmail(mail);\n    setTaskid(taskid);\n    setOpen(!open);\n }\n\n const CloseTask=()=>{\n  setTaskDetails(false);\n}\n\nconst getOrdersBeingRevised = async ()=>{\n  const result = await ApiRequest.getOrdersBeingRevised();\n   const organisedData=[];\n   result.data.forEach(element => {\n         var dat={\n          \"#taskId\":element.task_id,\n          title:element.task_title,\n          writerName:element.writer_display_name,\n          email:element.writer_email,\n          status:element.task_status,\n          category:element.writer_category,\n          sdate:element.taskl_accepted_date,\n          ddate:element.task_deadline,\n          Action:<>\n          <button onClick={()=>TaskDetails(element.task_id)} className=\"btn btn-info\">Task Details</button>\n           <button onClick={()=>Open(element.writer_email,element.task_id)} style={{marginLeft:\"2px\"}}  className=\"btn btn-success fa fa-comment\"></button>\n            </>\n         }\n        setShow(true);\n         organisedData.push(dat);\n   });\n\nsetRedone(organisedData);\n // console.log(result.data);\n}\n\nuseEffect(()=>{\n   getOrdersBeingRevised();\n},[])\n\nconst TaskDetails=(taskId)=>{\n  setTaskId(taskId);\n   setTaskDetails(true);\n}\n \n    const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n        {\n          dataField: \"writerName\",\n          text: \"Writer Username\",\n       \n        },\n        {\n          dataField: \"email\",\n          text: \"email\",\n        \n        },\n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"sdate\",\n          text: \"Submited-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n      const products=[\n          {\n            \"#taskId\":\"7888888\",\n            title:\"Lorem ipsume\",\n            writerName:\"John \",\n            email:\"airotony8@gmail.com\",\n            status:\"Revision\",\n            category:\"Lorem\",\n            sdate:\"2018-9-10\",\n            ddate:\"2019-10-10\",\n            Action:<><button onClick={()=>TaskDetails(2)} className=\"btn btn-info\">Task Details</button>\n                      <button onClick={()=>Open()} style={{marginLeft:\"2px\"}}  className=\"btn btn-success fa fa-comment\"></button>\n              </>\n\n          }\n      ]\n    return <>\n            {!taskDetails && show && <> <TableCard \n             products={Redone}\n             columns={columns}\n              title={\"TASK BEING REVISED\"}\n             />\n             \n             {open && <ChatBox\n    open={open}\n    SetOpen={Open}\n    email={email}\n    socket={socket}\n    taskid={taskid}\n   />}\n             </>\n            }\n            \n            {taskDetails &&<SingeleTask id={taskId} closeTask={CloseTask} isAccept={false}/>}\n          </>\n          \n}\n\nexport default TaskBeingRedone;"]},"metadata":{},"sourceType":"module"}