{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/post/dropzone/Dropzone.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Dropzone.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Dropzone = function Dropzone(_ref) {\n  _s();\n\n  var validFiles = _ref.validFiles,\n      setValidFiles = _ref.setValidFiles;\n  var fileInputRef = useRef();\n  var modalImageRef = useRef();\n  var modalRef = useRef();\n  var progressRef = useRef();\n  var uploadRef = useRef();\n  var uploadModalRef = useRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedFiles = _useState2[0],\n      setSelectedFiles = _useState2[1]; //const [validFiles, setValidFiles] = useState([]);\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      unsupportedFiles = _useState4[0],\n      setUnsupportedFiles = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  useEffect(function () {\n    var filteredArr = selectedFiles.reduce(function (acc, current) {\n      var x = acc.find(function (item) {\n        return item.name === current.name;\n      });\n\n      if (!x) {\n        return acc.concat([current]);\n      } else {\n        return acc;\n      }\n    }, []);\n    setValidFiles(_toConsumableArray(filteredArr));\n  }, [selectedFiles]);\n\n  var preventDefault = function preventDefault(e) {\n    e.preventDefault(); // e.stopPropagation();\n  };\n\n  var dragOver = function dragOver(e) {\n    preventDefault(e);\n  };\n\n  var dragEnter = function dragEnter(e) {\n    preventDefault(e);\n  };\n\n  var dragLeave = function dragLeave(e) {\n    preventDefault(e);\n  };\n\n  var fileDrop = function fileDrop(e) {\n    preventDefault(e);\n    var files = e.dataTransfer.files;\n\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  var filesSelected = function filesSelected() {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  var fileInputClicked = function fileInputClicked() {\n    fileInputRef.current.click();\n  };\n\n  var handleFiles = function handleFiles(files) {\n    var _loop = function _loop(i) {\n      if (validateFile(files[i])) {\n        setSelectedFiles(function (prevArray) {\n          return [].concat(_toConsumableArray(prevArray), [files[i]]);\n        });\n      } else {\n        files[i]['invalid'] = true;\n        setSelectedFiles(function (prevArray) {\n          return [].concat(_toConsumableArray(prevArray), [files[i]]);\n        });\n        setErrorMessage('File type not permitted');\n        setUnsupportedFiles(function (prevArray) {\n          return [].concat(_toConsumableArray(prevArray), [files[i]]);\n        });\n      }\n    };\n\n    for (var i = 0; i < files.length; i++) {\n      _loop(i);\n    }\n  };\n\n  var validateFile = function validateFile(file) {\n    var validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon', 'application/pdf', 'application/doc', 'application/docx', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];\n    alert(file.type);\n\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  var fileSize = function fileSize(size) {\n    if (size === 0) {\n      return '0 Bytes';\n    }\n\n    var k = 1024;\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    var i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  var fileType = function fileType(fileName) {\n    return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\n  };\n\n  var removeFile = function removeFile(name) {\n    var index = validFiles.findIndex(function (e) {\n      return e.name === name;\n    });\n    var index2 = selectedFiles.findIndex(function (e) {\n      return e.name === name;\n    });\n    var index3 = unsupportedFiles.findIndex(function (e) {\n      return e.name === name;\n    });\n    validFiles.splice(index, 1);\n    selectedFiles.splice(index2, 1);\n    setValidFiles(_toConsumableArray(validFiles));\n    setSelectedFiles(_toConsumableArray(selectedFiles));\n\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles(_toConsumableArray(unsupportedFiles));\n    }\n  };\n\n  var openImageModal = function openImageModal(file) {\n    var reader = new FileReader();\n    modalRef.current.style.display = \"block\";\n    reader.readAsDataURL(file);\n\n    reader.onload = function (e) {\n      modalImageRef.current.style.backgroundImage = \"url(\".concat(e.target.result, \")\");\n    };\n  };\n\n  var closeModal = function closeModal() {\n    modalRef.current.style.display = \"none\";\n    modalImageRef.current.style.backgroundImage = 'none';\n  };\n\n  var uploadFiles = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var i, formData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uploadModalRef.current.style.display = 'block';\n              uploadRef.current.innerHTML = 'File(s) Uploading...';\n\n              for (i = 0; i < validFiles.length; i++) {\n                formData = new FormData();\n                formData.append('image', validFiles[i]);\n                formData.append('key', '');\n                axios.post('https://api.imgbb.com/1/upload', formData, {\n                  onUploadProgress: function onUploadProgress(progressEvent) {\n                    var uploadPercentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);\n                    progressRef.current.innerHTML = \"\".concat(uploadPercentage, \"%\");\n                    progressRef.current.style.width = \"\".concat(uploadPercentage, \"%\");\n\n                    if (uploadPercentage === 100) {\n                      uploadRef.current.innerHTML = 'File(s) Uploaded';\n                      validFiles.length = 0;\n                      setValidFiles(_toConsumableArray(validFiles));\n                      setSelectedFiles(_toConsumableArray(validFiles));\n                      setUnsupportedFiles(_toConsumableArray(validFiles));\n                    }\n                  }\n                }).catch(function () {\n                  uploadRef.current.innerHTML = \"<span class=\\\"error\\\">Error Uploading File(s)</span>\";\n                  progressRef.current.style.backgroundColor = 'red';\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadFiles() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var closeUploadModal = function closeUploadModal() {\n    uploadModalRef.current.style.display = 'none';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containers\",\n      children: [unsupportedFiles.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please remove all unsupported files.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 44\n      }, _this) : '', /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-container\",\n        onDragOver: dragOver,\n        onDragEnter: dragEnter,\n        onDragLeave: dragLeave,\n        onDrop: fileDrop,\n        onClick: fileInputClicked,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, _this), \"Drag & Drop files here or click to select file(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: fileInputRef,\n          className: \"file-input\",\n          type: \"file\",\n          multiple: true,\n          onChange: filesSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-display-container\",\n        children: validFiles.map(function (data, i) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-status-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: !data.invalid ? function () {\n                return openImageModal(data);\n              } : function () {\n                return removeFile(data.name);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-type-logo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-type\",\n                children: fileType(data.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-name \".concat(data.invalid ? 'file-error' : ''),\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-size\",\n                children: [\"(\", fileSize(data.size), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, _this), \" \", data.invalid && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-error-message\",\n                children: [\"(\", errorMessage, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 113\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-remove\",\n              onClick: function onClick() {\n                return removeFile(data.name);\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, _this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 29\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      ref: modalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return closeModal();\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-image\",\n        ref: modalImageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      className: \"upload-modal\",\n      ref: uploadModalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: function onClick() {\n          return closeUploadModal();\n        },\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          ref: uploadRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            ref: progressRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Dropzone, \"QtEzB6zzIUlLfd/WHkg3EwXMNKE=\");\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/post/dropzone/Dropzone.js"],"names":["React","useRef","useState","useEffect","axios","Dropzone","validFiles","setValidFiles","fileInputRef","modalImageRef","modalRef","progressRef","uploadRef","uploadModalRef","selectedFiles","setSelectedFiles","unsupportedFiles","setUnsupportedFiles","errorMessage","setErrorMessage","filteredArr","reduce","acc","current","x","find","item","name","concat","preventDefault","e","dragOver","dragEnter","dragLeave","fileDrop","files","dataTransfer","length","handleFiles","filesSelected","fileInputClicked","click","i","validateFile","prevArray","file","validTypes","alert","type","indexOf","fileSize","size","k","sizes","Math","floor","log","parseFloat","pow","toFixed","fileType","fileName","substring","lastIndexOf","removeFile","index","findIndex","index2","index3","splice","openImageModal","reader","FileReader","style","display","readAsDataURL","onload","backgroundImage","target","result","closeModal","uploadFiles","innerHTML","formData","FormData","append","post","onUploadProgress","progressEvent","uploadPercentage","loaded","total","width","catch","backgroundColor","closeUploadModal","map","data","invalid"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './Dropzone.css';\n\nconst Dropzone = ({validFiles,setValidFiles}) => {\n    const fileInputRef = useRef();\n    const modalImageRef = useRef();\n    const modalRef = useRef();\n    const progressRef = useRef();\n    const uploadRef = useRef();\n    const uploadModalRef = useRef();\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    //const [validFiles, setValidFiles] = useState([]);\n\n    const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    useEffect(() => {\n        let filteredArr = selectedFiles.reduce((acc, current) => {\n            const x = acc.find(item => item.name === current.name);\n            if (!x) {\n              return acc.concat([current]);\n            } else {\n              return acc;\n            }\n        }, []);\n        setValidFiles([...filteredArr]);\n        \n    }, [selectedFiles]);\n\n    const preventDefault = (e) => {\n        e.preventDefault();\n        // e.stopPropagation();\n    }\n\n    const dragOver = (e) => {\n        preventDefault(e);\n    }\n\n    const dragEnter = (e) => {\n        preventDefault(e);\n    }\n\n    const dragLeave = (e) => {\n        preventDefault(e);\n    }\n\n    const fileDrop = (e) => {\n        preventDefault(e);\n        const files = e.dataTransfer.files;\n        if (files.length) {\n            handleFiles(files);\n        }\n    }\n\n    const filesSelected = () => {\n        if (fileInputRef.current.files.length) {\n            handleFiles(fileInputRef.current.files);\n        }\n    }\n\n    const fileInputClicked = () => {\n        fileInputRef.current.click();\n    }\n\n    const handleFiles = (files) => {\n        for(let i = 0; i < files.length; i++) {\n            if (validateFile(files[i])) {\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\n            } else {\n                files[i]['invalid'] = true;\n                setSelectedFiles(prevArray => [...prevArray, files[i]]);\n                setErrorMessage('File type not permitted');\n                setUnsupportedFiles(prevArray => [...prevArray, files[i]]);\n            }\n        }\n    }\n\n    const validateFile = (file) => {\n  \n        const validTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/x-icon','application/pdf','application/doc','application/docx',\n           'application/msword',\n           'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    ];\n    alert(file.type);\n        if (validTypes.indexOf(file.type) === -1) {\n            return false;\n        }\n\n        return true;\n    }\n\n    const fileSize = (size) => {\n        if (size === 0) {\n          return '0 Bytes';\n        }\n        const k = 1024;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n        const i = Math.floor(Math.log(size) / Math.log(k));\n        return parseFloat((size / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    }\n\n    const fileType = (fileName) => {\n        return fileName.substring(fileName.lastIndexOf('.') + 1, fileName.length) || fileName;\n    }\n\n    const removeFile = (name) => {\n        const index = validFiles.findIndex(e => e.name === name);\n        const index2 = selectedFiles.findIndex(e => e.name === name);\n        const index3 = unsupportedFiles.findIndex(e => e.name === name);\n        validFiles.splice(index, 1);\n        selectedFiles.splice(index2, 1);\n        setValidFiles([...validFiles]);\n        setSelectedFiles([...selectedFiles]);\n        if (index3 !== -1) {\n            unsupportedFiles.splice(index3, 1);\n            setUnsupportedFiles([...unsupportedFiles]);\n        }\n    }\n\n    const openImageModal = (file) => {\n        const reader = new FileReader();\n        modalRef.current.style.display = \"block\";\n        reader.readAsDataURL(file);\n        reader.onload = function(e) {\n            modalImageRef.current.style.backgroundImage = `url(${e.target.result})`;\n        }\n    }\n\n    const closeModal = () => {\n        modalRef.current.style.display = \"none\";\n        modalImageRef.current.style.backgroundImage = 'none';\n    }\n\n    const uploadFiles = async () => {\n        uploadModalRef.current.style.display = 'block';\n        uploadRef.current.innerHTML = 'File(s) Uploading...';\n        for (let i = 0; i < validFiles.length; i++) {\n            const formData = new FormData();\n            formData.append('image', validFiles[i]);\n            formData.append('key', '');\n\n            axios.post('https://api.imgbb.com/1/upload', formData, {\n                onUploadProgress: (progressEvent) => {\n                    const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\n                    progressRef.current.innerHTML = `${uploadPercentage}%`;\n                    progressRef.current.style.width = `${uploadPercentage}%`;\n\n                    if (uploadPercentage === 100) {\n                        uploadRef.current.innerHTML = 'File(s) Uploaded';\n                        validFiles.length = 0;\n                        setValidFiles([...validFiles]);\n                        setSelectedFiles([...validFiles]);\n                        setUnsupportedFiles([...validFiles]);\n                    }\n                },\n            })\n            .catch(() => {\n                uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n                progressRef.current.style.backgroundColor = 'red';\n            })\n        }\n    }\n\n    const closeUploadModal = () => {\n        uploadModalRef.current.style.display = 'none';\n    }\n\n\n    return (\n        <>\n            <div className=\"containers\">\n              \n                {unsupportedFiles.length ? <p>Please remove all unsupported files.</p> : ''}\n                <div className=\"drop-container\"\n                    onDragOver={dragOver}\n                    onDragEnter={dragEnter}\n                    onDragLeave={dragLeave}\n                    onDrop={fileDrop}\n                    onClick={fileInputClicked}\n                >\n                    <div className=\"drop-message\">\n                        <div className=\"upload-icon\"></div>\n                        Drag & Drop files here or click to select file(s)\n                    </div>\n                    <input\n                        ref={fileInputRef}\n                        className=\"file-input\"\n                        type=\"file\"\n                        multiple\n                        onChange={filesSelected}\n                    />\n                </div>\n                <div className=\"file-display-container\">\n                    {\n                        validFiles.map((data, i) => \n                            <div className=\"file-status-bar\" key={i}>\n                                <div onClick={!data.invalid ? () => openImageModal(data) : () => removeFile(data.name)}>\n                                    <div className=\"file-type-logo\"></div>\n                                    <div className=\"file-type\">{fileType(data.name)}</div>\n                                    <span className={`file-name ${data.invalid ? 'file-error' : ''}`}>{data.name}</span>\n                                    <span className=\"file-size\">({fileSize(data.size)})</span> {data.invalid && <span className='file-error-message'>({errorMessage})</span>}\n                                </div>\n                                <div className=\"file-remove\" onClick={() => removeFile(data.name)}>X</div>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>\n            <div className=\"modal\" ref={modalRef}>\n                <div className=\"overlay\"></div>\n                <span className=\"close\" onClick={(() => closeModal())}>X</span>\n                <div className=\"modal-image\" ref={modalImageRef}></div>\n            </div>\n\n            <div style={{display:\"none\"}} className=\"upload-modal\" ref={uploadModalRef}>\n                <div className=\"overlay\"></div>\n                <div className=\"close\" onClick={(() => closeUploadModal())}>X</div>\n                <div className=\"progress-container\">\n                    <span ref={uploadRef}></span>\n                    <div className=\"progress\">\n                        <div className=\"progress-bar\" ref={progressRef}></div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Dropzone;\n"]},"metadata":{},"sourceType":"module"}