{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\n\nvar body = function body() {\n  return {\n    \"x-access-key\": Tokens().accessToken,\n    \"x-access-token\": Tokens().refreshToken\n  };\n};\n\nvar ApiRequest = {\n  DashBoardData: function () {\n    var _DashBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              endPoint = \"dashboard\";\n              _context.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context.sent;\n\n              if (!(result.data == false)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context.sent;\n\n              if (!(data == true)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", Result);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", result);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    function DashBoardData() {\n      return _DashBoardData.apply(this, arguments);\n    }\n\n    return DashBoardData;\n  }(),\n  getOrdersInProgress: function () {\n    var _getOrdersInProgress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              endPoint = \"in-progress\";\n              _context2.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.data == false)) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context2.sent;\n\n              if (!(data == true)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return Axios.post(endPoint, body);\n\n            case 12:\n              Result = _context2.sent;\n              return _context2.abrupt(\"return\", Result);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", result);\n\n            case 17:\n              _context2.next = 22;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 19]]);\n    }));\n\n    function getOrdersInProgress() {\n      return _getOrdersInProgress.apply(this, arguments);\n    }\n\n    return getOrdersInProgress;\n  }(),\n  RegisterWriter: function () {\n    var _RegisterWriter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, username, password, ConfirmPassword, country, address, phone, category) {\n      var data, endPoint, result, _data, Result;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = 'email=' + email + '&username=' + username + '&password=' + password + '&country=' + country + '&address=' + address + '&phone=' + phone + '&category=' + category;\n              _context3.prev = 1;\n              endPoint = \"register/writer?\" + data;\n              _context3.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context3.sent;\n\n              if (!(result.data == false)) {\n                _context3.next = 17;\n                break;\n              }\n\n              _context3.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data = _context3.sent;\n\n              if (!(_data == true)) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context3.sent;\n              return _context3.abrupt(\"return\", Result);\n\n            case 15:\n              _context3.next = 18;\n              break;\n\n            case 17:\n              return _context3.abrupt(\"return\", result);\n\n            case 18:\n              _context3.next = 23;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 20]]);\n    }));\n\n    function RegisterWriter(_x, _x2, _x3, _x4, _x5, _x6, _x7, _x8) {\n      return _RegisterWriter.apply(this, arguments);\n    }\n\n    return RegisterWriter;\n  }(),\n  getCategories: function () {\n    var _getCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              endPoint = \"category\";\n              _context4.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context4.sent;\n\n              if (!(result.data == false)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context4.sent;\n\n              if (!(data == true)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context4.sent;\n              return _context4.abrupt(\"return\", Result);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", result);\n\n            case 17:\n              _context4.next = 22;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 19]]);\n    }));\n\n    function getCategories() {\n      return _getCategories.apply(this, arguments);\n    }\n\n    return getCategories;\n  }(),\n  getWriters: function () {\n    var _getWriters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              endPoint = \"writers\"; //+data;\n\n              _context5.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context5.sent;\n\n              if (!(result.data == false)) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context5.sent;\n\n              if (!(data == true)) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context5.sent;\n              return _context5.abrupt(\"return\", Result);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", result);\n\n            case 17:\n              _context5.next = 22;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 22:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19]]);\n    }));\n\n    function getWriters() {\n      return _getWriters.apply(this, arguments);\n    }\n\n    return getWriters;\n  }(),\n  BlockUser: function () {\n    var _BlockUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              endPoint = \"block?\" + \"user_id=\" + id; //+data;\n\n              _context6.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context6.sent;\n\n              if (!(result.data == false)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context6.sent;\n\n              if (!(data == true)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context6.sent;\n              return _context6.abrupt(\"return\", Result);\n\n            case 14:\n              _context6.next = 17;\n              break;\n\n            case 16:\n              return _context6.abrupt(\"return\", result);\n\n            case 17:\n              _context6.next = 22;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 19]]);\n    }));\n\n    function BlockUser(_x9) {\n      return _BlockUser.apply(this, arguments);\n    }\n\n    return BlockUser;\n  }(),\n  unblockUser: function () {\n    var _unblockUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              endPoint = \"unblock?\" + \"user_id=\" + id; //+data;\n\n              _context7.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context7.sent;\n              console.log(result);\n\n              if (!(result.data == false)) {\n                _context7.next = 17;\n                break;\n              }\n\n              _context7.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              data = _context7.sent;\n\n              if (!(data == true)) {\n                _context7.next = 15;\n                break;\n              }\n\n              _context7.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context7.sent;\n              return _context7.abrupt(\"return\", Result);\n\n            case 15:\n              _context7.next = 18;\n              break;\n\n            case 17:\n              return _context7.abrupt(\"return\", result);\n\n            case 18:\n              _context7.next = 23;\n              break;\n\n            case 20:\n              _context7.prev = 20;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.log(_context7.t0);\n\n            case 23:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 20]]);\n    }));\n\n    function unblockUser(_x10) {\n      return _unblockUser.apply(this, arguments);\n    }\n\n    return unblockUser;\n  }(),\n  getUserDetails: function () {\n    var _getUserDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              endPoint = \"writer/details/\".concat(id); //+data;\n\n              _context8.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context8.sent;\n\n              if (!(result.data == false)) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context8.sent;\n\n              if (!(data == true)) {\n                _context8.next = 14;\n                break;\n              }\n\n              _context8.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context8.sent;\n              return _context8.abrupt(\"return\", Result);\n\n            case 14:\n              _context8.next = 17;\n              break;\n\n            case 16:\n              return _context8.abrupt(\"return\", result);\n\n            case 17:\n              _context8.next = 22;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0);\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 19]]);\n    }));\n\n    function getUserDetails(_x11) {\n      return _getUserDetails.apply(this, arguments);\n    }\n\n    return getUserDetails;\n  }(),\n  getUnAssignedTask: function () {\n    var _getUnAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              endPoint = \"unAssignedTask\"; //+data;\n\n              _context9.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context9.sent;\n\n              if (!(result.data == false)) {\n                _context9.next = 16;\n                break;\n              }\n\n              _context9.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context9.sent;\n\n              if (!(data == true)) {\n                _context9.next = 14;\n                break;\n              }\n\n              _context9.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context9.sent;\n              return _context9.abrupt(\"return\", Result);\n\n            case 14:\n              _context9.next = 17;\n              break;\n\n            case 16:\n              return _context9.abrupt(\"return\", result);\n\n            case 17:\n              _context9.next = 22;\n              break;\n\n            case 19:\n              _context9.prev = 19;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.log(_context9.t0);\n\n            case 22:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 19]]);\n    }));\n\n    function getUnAssignedTask() {\n      return _getUnAssignedTask.apply(this, arguments);\n    }\n\n    return getUnAssignedTask;\n  }(),\n  asignTaskToUser: function () {\n    var _asignTaskToUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(user_id, task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              endPoint = \"AssignTask/\".concat(user_id, \"/\").concat(task_id); //user_id,task_id\n\n              _context10.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context10.sent;\n\n              if (!(result.data == false)) {\n                _context10.next = 16;\n                break;\n              }\n\n              _context10.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context10.sent;\n\n              if (!(data == true)) {\n                _context10.next = 14;\n                break;\n              }\n\n              _context10.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context10.sent;\n              return _context10.abrupt(\"return\", Result);\n\n            case 14:\n              _context10.next = 17;\n              break;\n\n            case 16:\n              return _context10.abrupt(\"return\", result);\n\n            case 17:\n              _context10.next = 23;\n              break;\n\n            case 19:\n              _context10.prev = 19;\n              _context10.t0 = _context10[\"catch\"](0);\n              console.log(_context10.t0);\n              return _context10.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 19]]);\n    }));\n\n    function asignTaskToUser(_x12, _x13) {\n      return _asignTaskToUser.apply(this, arguments);\n    }\n\n    return asignTaskToUser;\n  }(),\n  postAllowedTaskNumber: function () {\n    var _postAllowedTaskNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(number) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              endPoint = \"allowedTask/\".concat(number); //user_id,task_id\n\n              _context11.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context11.sent;\n\n              if (!(result.data == false)) {\n                _context11.next = 16;\n                break;\n              }\n\n              _context11.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context11.sent;\n\n              if (!(data == true)) {\n                _context11.next = 14;\n                break;\n              }\n\n              _context11.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context11.sent;\n              return _context11.abrupt(\"return\", Result);\n\n            case 14:\n              _context11.next = 17;\n              break;\n\n            case 16:\n              return _context11.abrupt(\"return\", result);\n\n            case 17:\n              _context11.next = 23;\n              break;\n\n            case 19:\n              _context11.prev = 19;\n              _context11.t0 = _context11[\"catch\"](0);\n              console.log(_context11.t0);\n              return _context11.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 19]]);\n    }));\n\n    function postAllowedTaskNumber(_x14) {\n      return _postAllowedTaskNumber.apply(this, arguments);\n    }\n\n    return postAllowedTaskNumber;\n  }(),\n  postSequence: function () {\n    var _postSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(sequence) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              endPoint = \"sequence/\".concat(sequence); //user_id,task_id\n\n              _context12.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context12.sent;\n\n              if (!(result.data == false)) {\n                _context12.next = 16;\n                break;\n              }\n\n              _context12.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context12.sent;\n\n              if (!(data == true)) {\n                _context12.next = 14;\n                break;\n              }\n\n              _context12.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context12.sent;\n              return _context12.abrupt(\"return\", Result);\n\n            case 14:\n              _context12.next = 17;\n              break;\n\n            case 16:\n              return _context12.abrupt(\"return\", result);\n\n            case 17:\n              _context12.next = 23;\n              break;\n\n            case 19:\n              _context12.prev = 19;\n              _context12.t0 = _context12[\"catch\"](0);\n              console.log(_context12.t0);\n              return _context12.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 19]]);\n    }));\n\n    function postSequence(_x15) {\n      return _postSequence.apply(this, arguments);\n    }\n\n    return postSequence;\n  }(),\n  updateCategory: function () {\n    var _updateCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(category, user_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              endPoint = \"updateCategory/\".concat(category, \"/\").concat(user_id); //user_id,task_id\n\n              _context13.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context13.sent;\n\n              if (!(result.data == false)) {\n                _context13.next = 16;\n                break;\n              }\n\n              _context13.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context13.sent;\n\n              if (!(data == true)) {\n                _context13.next = 14;\n                break;\n              }\n\n              _context13.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context13.sent;\n              return _context13.abrupt(\"return\", Result);\n\n            case 14:\n              _context13.next = 17;\n              break;\n\n            case 16:\n              return _context13.abrupt(\"return\", result);\n\n            case 17:\n              _context13.next = 23;\n              break;\n\n            case 19:\n              _context13.prev = 19;\n              _context13.t0 = _context13[\"catch\"](0);\n              console.log(_context13.t0);\n              return _context13.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 19]]);\n    }));\n\n    function updateCategory(_x16, _x17) {\n      return _updateCategory.apply(this, arguments);\n    }\n\n    return updateCategory;\n  }(),\n  uploadFiles: function () {\n    var _uploadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(task_id, validFiles) {\n      var endPoint, i, formData, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              endPoint = \"FileUpload/\".concat(task_id); //user_id,task_id\n\n              i = 0;\n\n            case 3:\n              if (!(i < validFiles.length)) {\n                _context14.next = 27;\n                break;\n              }\n\n              console.log(i);\n              formData = new FormData();\n              formData.append('files', validFiles[i]);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken);\n              _context14.next = 11;\n              return Axios.post(endPoint, formData);\n\n            case 11:\n              result = _context14.sent;\n\n              if (!(result.data == false)) {\n                _context14.next = 23;\n                break;\n              }\n\n              _context14.next = 15;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 15:\n              data = _context14.sent;\n\n              if (!(data == true)) {\n                _context14.next = 21;\n                break;\n              }\n\n              _context14.next = 19;\n              return Axios.post(endPoint, formData);\n\n            case 19:\n              Result = _context14.sent;\n              return _context14.abrupt(\"return\", Result);\n\n            case 21:\n              _context14.next = 24;\n              break;\n\n            case 23:\n              return _context14.abrupt(\"return\", result);\n\n            case 24:\n              i++;\n              _context14.next = 3;\n              break;\n\n            case 27:\n              _context14.next = 33;\n              break;\n\n            case 29:\n              _context14.prev = 29;\n              _context14.t0 = _context14[\"catch\"](0);\n              console.log(_context14.t0);\n              return _context14.abrupt(\"return\", []);\n\n            case 33:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 29]]);\n    }));\n\n    function uploadFiles(_x18, _x19) {\n      return _uploadFiles.apply(this, arguments);\n    }\n\n    return uploadFiles;\n  }()\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/Api/Data/requestApi.js"],"names":["Tokens","UpdateToken","Axios","body","accessToken","refreshToken","ApiRequest","DashBoardData","endPoint","post","result","data","Result","console","log","getOrdersInProgress","RegisterWriter","email","username","password","ConfirmPassword","country","address","phone","category","getCategories","getWriters","BlockUser","id","unblockUser","getUserDetails","getUnAssignedTask","asignTaskToUser","user_id","task_id","postAllowedTaskNumber","number","postSequence","sequence","updateCategory","uploadFiles","validFiles","i","length","formData","FormData","append"],"mappings":"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","sourcesContent":["import { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\n const ApiRequest={\n       DashBoardData:async()=>{\n        try {\n            const endPoint =`dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n          console.log(error);\n     }\n       },\n       getOrdersInProgress:async ()=>{\n        try {\n            const endPoint = `in-progress`;\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false){\n             const data = await UpdateToken(Tokens().refreshToken);\n             if(data == true){\n               const Result = await Axios.post(endPoint,body);\n               return Result;\n             }\n            }else{\n                return result;\n            }\n      } catch (error) {\n           console.log(error);\n      }\n       },\n\n       RegisterWriter:async (email,username,password,ConfirmPassword,country,address,phone,category)=>{\n\n        var data = 'email='+email+'&username='+username+'&password='+password+'&country='+country+'&address='+address+'&phone='+phone+'&category='+category;\n\n        try {\n          const endPoint =`register/writer?`+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n\n       },\n       getCategories:async ()=>{\n        try {\n          const endPoint =`category`;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      getWriters:async()=>{\n        //writers\n        try {\n          const endPoint =`writers`//+data;\n\n          const result = await Axios.post(endPoint,body());\n         \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n      BlockUser:async(id)=>{\n        try {\n          const endPoint =`block?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      unblockUser:async(id)=>{\n        try {\n          const endPoint =`unblock?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          console.log(result)\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n      getUserDetails:async (id)=>{\n       // writer/details/2\n       \n       try {\n        const endPoint =`writer/details/${id}`//+data;\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n      console.log(e);\n     }\n\n       \n      },\n      getUnAssignedTask:async ()=>{\n         \n        try {\n          const endPoint =`unAssignedTask`//+data;\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n        \n\n\n      },\n\n      asignTaskToUser:async(user_id,task_id)=>{\n        \n        try {\n          const endPoint =`AssignTask/${user_id}/${task_id}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n\n      },\n\n      postAllowedTaskNumber:async (number)=>{\n        //allowedTask\n        try {\n          const endPoint =`allowedTask/${number}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n      postSequence:async (sequence)=>{\n       // sequence\n       try {\n        const endPoint =`sequence/${sequence}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n      },\n\n      updateCategory:async (category,user_id)=>{\n        try {\n          const endPoint =`updateCategory/${category}/${user_id}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n\n     uploadFiles:async (task_id,validFiles) => {\n      try {\n        const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n        for (let i = 0; i < validFiles.length; i++) {\n          console.log(i);\n          const formData = new FormData();\n          formData.append('files', validFiles[i]);\n          formData.append( \"x-access-key\", Tokens().accessToken)\n          formData.append(\"x-access-token\",Tokens().refreshToken)\n\n          const result = await Axios.post(endPoint,formData);\n        \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,formData);\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n        }\n\n       \n     }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n      /*uploadModalRef.current.style.display = 'block';\n        uploadRef.current.innerHTML = 'File(s) Uploading...';\n        for (let i = 0; i < validFiles.length; i++) {\n            const formData = new FormData();\n            formData.append('files', validFiles[i]);\n            formData.append( \"x-access-key\", Tokens().accessToken)\n            formData.append(\"x-access-token\",Tokens().refreshToken)\n           \n            \n\n\n           /* axios.post('https://api.imgbb.com/1/upload', formData, {\n                onUploadProgress: (progressEvent) => {\n                    const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\n                    progressRef.current.innerHTML = `${uploadPercentage}%`;\n                    progressRef.current.style.width = `${uploadPercentage}%`;\n\n                    if (uploadPercentage === 100) {\n                        uploadRef.current.innerHTML = 'File(s) Uploaded';\n                        validFiles.length = 0;\n                        setValidFiles([...validFiles]);\n                        setSelectedFiles([...validFiles]);\n                        setUnsupportedFiles([...validFiles]);\n                    }\n                },\n            })\n            .catch(() => {\n                uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n                progressRef.current.style.backgroundColor = 'red';\n            })*/\n       \n        }\n    \n }   \n    \n\nexport  default ApiRequest;"]},"metadata":{},"sourceType":"module"}