{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/assign/assign.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport SingeleTask from \"../TaskDetails/SingleTaskDetails\";\nimport AsignUser from \"./Asigne/Asign\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AssignTask = function AssignTask() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskDetails = _useState2[0],\n      setTaskDetails = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskId = _useState4[0],\n      setTaskId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      assign = _useState6[0],\n      setAssign = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bck = _useState8[0],\n      setBck = _useState8[1];\n\n  var AssignTasks = function AssignTasks(TaskId) {\n    setAssign(true);\n  };\n\n  var getUnAssignedTask = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getUnAssignedTask();\n\n            case 2:\n              result = _context.sent;\n              console.log(result.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUnAssignedTask() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getUnAssignedTask();\n  }, []);\n\n  var DeleteTask = function DeleteTask(TaskId) {\n    swal(\"Are you sure To Delete This Task\", \"\", \"warning\", {\n      buttons: {\n        cancel: 'Cancel !',\n        procceed: {\n          text: \"Delete !\",\n          value: \"delete\"\n        }\n      }\n    }).then(function (value) {\n      switch (value) {\n        case 'delete':\n          swal(\"Deleted\", \"succefully\", \"success\");\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  var CloseTask = function CloseTask() {\n    setTaskDetails(false);\n  };\n\n  var TaskDetails = function TaskDetails(taskId) {\n    setTaskId(taskId);\n    setTaskDetails(true);\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"sdate\",\n    text: \"Submited-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    \"#taskId\": \"7888888\",\n    title: \"Lorem ipsume\",\n    writerName: \"John \",\n    email: \"airotony8@gmail.com\",\n    status: \"Revision\",\n    category: \"Lorem\",\n    sdate: \"2018-9-10\",\n    ddate: \"2019-10-10\",\n    Action: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return TaskDetails(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-primary\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return AssignTasks(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-info\",\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return DeleteTask(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-success fa fa-trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!taskDetails && !assign && /*#__PURE__*/_jsxDEV(TableCard, {\n      products: products,\n      columns: columns,\n      title: \"NEW TASK NOT ASSIGNED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 38\n    }, _this), taskDetails && !assign && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: CloseTask,\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }, _this), assign && /*#__PURE__*/_jsxDEV(AsignUser, {\n      isBck: bck,\n      setAssign: setAssign,\n      setBack: setBck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AssignTask, \"3UGnzxyggleAnP7jdSrrxE/WkZ8=\");\n\n_c = AssignTask;\nexport default AssignTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/assign/assign.js"],"names":["useEffect","useState","ApiRequest","TableCard","swal","SingeleTask","AsignUser","AssignTask","taskDetails","setTaskDetails","taskId","setTaskId","assign","setAssign","bck","setBck","AssignTasks","TaskId","getUnAssignedTask","result","console","log","data","DeleteTask","buttons","cancel","procceed","text","value","then","CloseTask","TaskDetails","columns","dataField","sort","products","title","writerName","email","status","category","sdate","ddate","Action","marginLeft"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport SingeleTask from \"../TaskDetails/SingleTaskDetails\";\nimport AsignUser from \"./Asigne/Asign\";\n\nconst AssignTask = ()=>{\n  const [taskDetails,setTaskDetails] = useState(false);\n  const [taskId,setTaskId]=useState('');\n  const [assign,setAssign] = useState(false);\n  const [bck,setBck] = useState(true);\n  \n  const AssignTasks=TaskId=>{\n\n    setAssign(true);\n      \n  }\n\n  const getUnAssignedTask = async ()=>{\n       const result = await ApiRequest.getUnAssignedTask();\n\n       console.log(result.data);\n  }\n\n  useEffect(()=>{\n      getUnAssignedTask();\n  },[])\n\n  const DeleteTask=TaskId=>{\n     swal(\"Are you sure To Delete This Task\",\"\",\"warning\",{\n           buttons:{\n             cancel:'Cancel !',\n             procceed:{\n                 text:\"Delete !\",\n                 value:\"delete\"\n             }\n           }\n     })\n     .then((value)=>{\n         switch (value) {\n           case 'delete':\n                swal(\"Deleted\",\"succefully\",\"success\");\n             break;\n         \n           default:\n             break;\n         }\n     })\n  }\n\n  const CloseTask=()=>{\n    setTaskDetails(false);\n  }\n\n  const TaskDetails=(taskId)=>{\n    setTaskId(taskId);\n     setTaskDetails(true);\n  }\n\n \n    const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n      \n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"sdate\",\n          text: \"Submited-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n      const products=[\n       { \n         \"#taskId\":\"7888888\",\n            title:\"Lorem ipsume\",\n            writerName:\"John \",\n            email:\"airotony8@gmail.com\",\n            status:\"Revision\",\n            category:\"Lorem\",\n            sdate:\"2018-9-10\",\n            ddate:\"2019-10-10\",\n            Action:<>\n             <button onClick={()=>TaskDetails(1)} style={{marginLeft:\"2px\"}} className=\"btn btn-primary\">Details</button>\n            <button onClick={()=>AssignTasks(1)}  style={{marginLeft:\"2px\"}} className=\"btn btn-info\">Assign Task</button>\n            <button  onClick={()=>DeleteTask(1)} style={{marginLeft:\"2px\"}}  className=\"btn btn-success fa fa-trash\"></button>\n              </>\n       }\n      ]\n    return <>\n         {!taskDetails && !assign && <TableCard \n             products={products}\n             columns={columns}\n              title={\"NEW TASK NOT ASSIGNED\"}\n             />\n         }\n         {taskDetails && !assign && <SingeleTask id={taskId} closeTask={CloseTask} isAccept={false}/>}\n         {assign && <AsignUser isBck={bck} setAssign={setAssign} setBack={setBck}/>}\n          </>\n\n          \n}\n\nexport default AssignTask;"]},"metadata":{},"sourceType":"module"}