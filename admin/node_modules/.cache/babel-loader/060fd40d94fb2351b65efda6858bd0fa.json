{"ast":null,"code":"import _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/assign/assign.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../TaskDetails/SingleTaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AssignTask = function AssignTask() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskDetails = _useState2[0],\n      setTaskDetails = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskId = _useState4[0],\n      setTaskId = _useState4[1];\n\n  var AssignTasks = function AssignTasks(TaskId) {};\n\n  var DeleteTask = function DeleteTask(TaskId) {};\n\n  var CloseTask = function CloseTask() {\n    setTaskDetails(false);\n  };\n\n  var TaskDetails = function TaskDetails(taskId) {\n    setTaskId(taskId);\n    setTaskDetails(true);\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"sdate\",\n    text: \"Submited-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    \"#taskId\": \"7888888\",\n    title: \"Lorem ipsume\",\n    writerName: \"John \",\n    email: \"airotony8@gmail.com\",\n    status: \"Revision\",\n    category: \"Lorem\",\n    sdate: \"2018-9-10\",\n    ddate: \"2019-10-10\",\n    Action: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return TaskDetails(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-primary\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return AssignTasks(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-info\",\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return DeleteTask(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-success fa fa-trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!taskDetails && /*#__PURE__*/_jsxDEV(TableCard, {\n      products: products,\n      columns: columns,\n      title: \"NEW TASK NOT ASSIGNED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 30\n    }, _this), taskDetails && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: CloseTask,\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AssignTask, \"WCDwkepZxQYaaQInbEWmAck3sLQ=\");\n\n_c = AssignTask;\nexport default AssignTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/assign/assign.js"],"names":["useState","TableCard","SingeleTask","AssignTask","taskDetails","setTaskDetails","taskId","setTaskId","AssignTasks","TaskId","DeleteTask","CloseTask","TaskDetails","columns","dataField","text","sort","products","title","writerName","email","status","category","sdate","ddate","Action","marginLeft"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../TaskDetails/SingleTaskDetails\";\n\nconst AssignTask = ()=>{\n  const [taskDetails,setTaskDetails] = useState(false);\n  const [taskId,setTaskId]=useState('');\n  \n  const AssignTasks=TaskId=>{\n      \n  }\n\n  const DeleteTask=TaskId=>{\n   \n  }\n\n  const CloseTask=()=>{\n    setTaskDetails(false);\n  }\n\n  const TaskDetails=(taskId)=>{\n    setTaskId(taskId);\n     setTaskDetails(true);\n  }\n\n \n    const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n      \n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"sdate\",\n          text: \"Submited-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n      const products=[\n       { \n         \"#taskId\":\"7888888\",\n            title:\"Lorem ipsume\",\n            writerName:\"John \",\n            email:\"airotony8@gmail.com\",\n            status:\"Revision\",\n            category:\"Lorem\",\n            sdate:\"2018-9-10\",\n            ddate:\"2019-10-10\",\n            Action:<>\n             <button onClick={()=>TaskDetails(1)} style={{marginLeft:\"2px\"}} className=\"btn btn-primary\">Details</button>\n            <button onClick={()=>AssignTasks(1)}  style={{marginLeft:\"2px\"}} className=\"btn btn-info\">Assign Task</button>\n            <button  onClick={()=>DeleteTask(1)} style={{marginLeft:\"2px\"}}  className=\"btn btn-success fa fa-trash\"></button>\n              </>\n       }\n      ]\n    return <>\n         {!taskDetails &&    <TableCard \n             products={products}\n             columns={columns}\n              title={\"NEW TASK NOT ASSIGNED\"}\n             />\n         }\n         {taskDetails && <SingeleTask id={taskId} closeTask={CloseTask} isAccept={false}/>}\n          </>\n\n          \n}\n\nexport default AssignTask;"]},"metadata":{},"sourceType":"module"}