{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/assign/assign.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport download from \"downloadjs\";\nimport { useEffect, useState } from \"react\"; //import { Alert } from \"react-bootstrap\";\n\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport SingeleTask from \"../TaskDetails/SingleTaskDetails\";\nimport AsignUser from \"./Asigne/Asign\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar AssignTask = function AssignTask(_ref) {\n  _s();\n\n  var socket = _ref.socket;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskDetails = _useState2[0],\n      setTaskDetails = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskId = _useState4[0],\n      setTaskId = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      assign = _useState6[0],\n      setAssign = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bck = _useState8[0],\n      setBck = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      unAssignedTask = _useState10[0],\n      setUnassignedTask = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      taskID = _useState12[0],\n      setTaskID = _useState12[1];\n\n  var AssignTasks = function AssignTasks(TaskId) {\n    setTaskID(TaskId);\n    setAssign(true);\n  };\n\n  var Button = function Button(task_id) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return TaskDetails(task_id);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-primary\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return AssignTasks(task_id);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-info\",\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return DeleteTask(task_id);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-success fa fa-trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var getUnAssignedTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, filteredData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getUnAssignedTask();\n\n            case 2:\n              result = _context.sent;\n              filteredData = [];\n              result.data.forEach(function (element) {\n                var dat = {\n                  \"#taskId\": element.task_id,\n                  title: element.task_title,\n                  writerName: \"\",\n                  email: \"\",\n                  status: State(element.task_status),\n                  category: element.task_Descipline,\n                  sdate: element.task_created_date,\n                  ddate: element.task_deadline,\n                  Action: Button(element.task_id)\n                };\n                filteredData.push(dat);\n              });\n              setUnassignedTask(filteredData);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUnAssignedTask() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var name = 'Airohhj';\n    var room = 'Airoff';\n    socket.emit('joins', {\n      name: name,\n      room: room\n    }, function () {});\n    getUnAssignedTask();\n  }, []);\n\n  var State = function State(state) {\n    if (state === \"new\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-info\",\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }, _this);\n    }\n\n    if (state === \"cancelled\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge badge-warning\",\n        children: state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, _this);\n    }\n  };\n\n  var Delete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ApiRequest.deleteTask(id);\n\n            case 2:\n              data = _context2.sent;\n\n              if (data.data === \"done\") {\n                getUnAssignedTask();\n                swal(\"Deleted\", \"succefully\", \"success\");\n              } else {\n                swal(\"Failed\", data.data, \"error\");\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function Delete(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var DeleteTask = function DeleteTask(TaskId) {\n    swal(\"Are you sure To Delete This Task\", \"\", \"warning\", {\n      buttons: {\n        cancel: 'Cancel !',\n        procceed: {\n          text: \"Delete !\",\n          value: \"delete\"\n        }\n      }\n    }).then(function (value) {\n      switch (value) {\n        case 'delete':\n          Delete(TaskId); // swal(\"Deleted\",\"succefully\"+TaskId,\"success\");\n\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  var CloseTask = function CloseTask() {\n    setTaskDetails(false);\n  };\n\n  var TaskDetails = function TaskDetails(taskId) {\n    setTaskId(taskId);\n    setTaskDetails(true);\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"sdate\",\n    text: \"Submited-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    \"#taskId\": \"7888888\",\n    title: \"Lorem ipsume\",\n    writerName: \"John \",\n    email: \"airotony8@gmail.com\",\n    status: \"Revision\",\n    category: \"Lorem\",\n    sdate: \"2018-9-10\",\n    ddate: \"2019-10-10\",\n    Action: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return TaskDetails(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-primary\",\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 14\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return AssignTasks(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-info\",\n        children: \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return DeleteTask(1);\n        },\n        style: {\n          marginLeft: \"2px\"\n        },\n        className: \"btn btn-success fa fa-trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!taskDetails && !assign && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container card\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(TableCard, {\n        products: unAssignedTask,\n        columns: columns,\n        title: \"NEW TASK NOT ASSIGNED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 70\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }, _this), taskDetails && !assign && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: CloseTask,\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }, _this), assign && /*#__PURE__*/_jsxDEV(AsignUser, {\n      taskId: taskID,\n      isBck: bck,\n      setAssign: setAssign,\n      setBack: setBck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(AssignTask, \"8FC1A3xlUXbFG7c8FYjMiiTuP5c=\");\n\n_c = AssignTask;\nexport default AssignTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignTask\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/assign/assign.js"],"names":["download","useEffect","useState","ApiRequest","TableCard","swal","SingeleTask","AsignUser","AssignTask","socket","taskDetails","setTaskDetails","taskId","setTaskId","assign","setAssign","bck","setBck","unAssignedTask","setUnassignedTask","taskID","setTaskID","AssignTasks","TaskId","Button","task_id","TaskDetails","marginLeft","DeleteTask","getUnAssignedTask","result","filteredData","data","forEach","element","dat","title","task_title","writerName","email","status","State","task_status","category","task_Descipline","sdate","task_created_date","ddate","task_deadline","Action","push","name","room","emit","state","Delete","id","deleteTask","buttons","cancel","procceed","text","value","then","CloseTask","columns","dataField","sort","products"],"mappings":"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","sourcesContent":["import download from \"downloadjs\";\nimport { useEffect, useState } from \"react\";\n//import { Alert } from \"react-bootstrap\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport SingeleTask from \"../TaskDetails/SingleTaskDetails\";\nimport AsignUser from \"./Asigne/Asign\";\n\nconst AssignTask = ({socket})=>{\n  const [taskDetails,setTaskDetails] = useState(false);\n  const [taskId,setTaskId]=useState('');\n  const [assign,setAssign] = useState(false);\n  const [bck,setBck] = useState(true);\n  const [unAssignedTask,setUnassignedTask] = useState([]);\n  const [taskID,setTaskID]= useState('');\n  \n  const AssignTasks=TaskId=>{\n      setTaskID(TaskId);\n    setAssign(true);\n      \n  }\n  const Button=(task_id)=>{\n    return <>\n    \n    \n             <button onClick={()=>TaskDetails(task_id)} style={{marginLeft:\"2px\"}} className=\"btn btn-primary\">Details</button>\n            <button onClick={()=>AssignTasks(task_id)}  style={{marginLeft:\"2px\"}} className=\"btn btn-info\">Assign Task</button>\n            <button  onClick={()=>DeleteTask(task_id)} style={{marginLeft:\"2px\"}}  className=\"btn btn-success fa fa-trash\"></button>\n              </>\n     \n  }\n\n  const getUnAssignedTask = async ()=>{\n       const result = await ApiRequest.getUnAssignedTask();\n       const filteredData=[];\n  \n       result.data.forEach(element => {\n       var dat =  {\n           \"#taskId\":element.task_id,\n            title:element.task_title,\n            writerName:\"\",\n            email:\"\",\n            status:State(element.task_status),\n            category:element.task_Descipline,\n            sdate:element.task_created_date,\n            ddate:element.task_deadline,\n            Action:Button(element.task_id)\n         }\n \n         filteredData.push(dat);\n       });\n       \n        \n       setUnassignedTask(filteredData);\n  }\n\n  useEffect(()=>{\n    let name='Airohhj';\n    let room ='Airoff';\n\n    socket.emit('joins',{name,room}, () =>{\n     });\n      getUnAssignedTask();\n  },[])\n\nconst State=(state)=>{\n    if(state === \"new\"){\n      return <div className=\"badge badge-info\">{state}</div>\n    }\n    if(state === \"cancelled\"){\n      return <div className=\"badge badge-warning\">{state}</div>\n    }\n}\n\n  const Delete=async (id)=>{\n       var data = await ApiRequest.deleteTask(id);\n       \n       if(data.data ===\"done\"){\n        getUnAssignedTask();\n        swal(\"Deleted\",\"succefully\",\"success\");\n        \n       }else{\n        swal(\"Failed\",data.data,\"error\");\n       }\n  }\n\n  const DeleteTask=TaskId=>{\n     swal(\"Are you sure To Delete This Task\",\"\",\"warning\",{\n           buttons:{\n             cancel:'Cancel !',\n             procceed:{\n                 text:\"Delete !\",\n                 value:\"delete\"\n             }\n           }\n     })\n     .then((value)=>{\n         switch (value) {\n           case 'delete':\n\n              Delete(TaskId);\n               // swal(\"Deleted\",\"succefully\"+TaskId,\"success\");\n             break;\n         \n           default:\n             break;\n         }\n     })\n  }\n\n  const CloseTask=()=>{\n    setTaskDetails(false);\n  }\n\n  const TaskDetails=(taskId)=>{\n    setTaskId(taskId);\n     setTaskDetails(true);\n  }\n\n \n    const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n      \n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"sdate\",\n          text: \"Submited-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n      const products=[\n       { \n         \"#taskId\":\"7888888\",\n            title:\"Lorem ipsume\",\n            writerName:\"John \",\n            email:\"airotony8@gmail.com\",\n            status:\"Revision\",\n            category:\"Lorem\",\n            sdate:\"2018-9-10\",\n            ddate:\"2019-10-10\",\n            Action:<>\n             <button onClick={()=>TaskDetails(1)} style={{marginLeft:\"2px\"}} className=\"btn btn-primary\">Details</button>\n            <button onClick={()=>AssignTasks(1)}  style={{marginLeft:\"2px\"}} className=\"btn btn-info\">Assign Task</button>\n            <button  onClick={()=>DeleteTask(1)} style={{marginLeft:\"2px\"}}  className=\"btn btn-success fa fa-trash\"></button>\n              </>\n       }\n      ]\n    return <>\n         {!taskDetails && !assign &&<div className=\"container card\"> <TableCard \n             products={unAssignedTask}\n             columns={columns}\n              title={\"NEW TASK NOT ASSIGNED\"}\n             />\n             </div>\n         }\n         {taskDetails && !assign && <SingeleTask id={taskId} closeTask={CloseTask} isAccept={false}/>}\n         {assign && <AsignUser taskId={taskID} isBck={bck} setAssign={setAssign} setBack={setBck}/>}\n          </>\n\n          \n}\n\nexport default AssignTask;"]},"metadata":{},"sourceType":"module"}