{"ast":null,"code":"import _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/sound.js\",\n    _s = $RefreshSig$(),\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar url = \"http://streaming.tdiradio.com:8000/house.mp3\";\n\nvar useAudio = function useAudio() {\n  _s();\n\n  var _useState = useState(new Audio(url)),\n      _useState2 = _slicedToArray(_useState, 1),\n      audio = _useState2[0];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      playing = _useState4[0],\n      setPlaying = _useState4[1];\n\n  var toggle = function toggle() {\n    return setPlaying(!playing);\n  };\n\n  useEffect(function () {\n    audio.play(); //playing ? audio.play() : audio.pause();\n  }, [playing]);\n  useEffect(function () {\n    audio.addEventListener('ended', function () {\n      return setPlaying(false);\n    });\n    return function () {\n      audio.removeEventListener('ended', function () {\n        return setPlaying(false);\n      });\n    };\n  }, []);\n  return [playing, toggle];\n};\n\n_s(useAudio, \"GtM9ncdyEaTcm0NdOFCfRvb7ZtI=\");\n\nvar Player = function Player() {\n  _s2();\n\n  var _useAudio = useAudio(url),\n      _useAudio2 = _slicedToArray(_useAudio, 2),\n      playing = _useAudio2[0],\n      toggle = _useAudio2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggle,\n      children: playing ? \"Pause\" : \"Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(Player, \"NLLP/wJ33utgrYAxTxhFIM48/kk=\", false, function () {\n  return [useAudio];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/sound.js"],"names":["React","useState","useEffect","url","useAudio","Audio","audio","playing","setPlaying","toggle","play","addEventListener","removeEventListener","Player"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AACA,IAAMC,GAAG,GAAG,8CAAZ;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAAA;;AAEpB,kBAAgBH,QAAQ,CAAC,IAAII,KAAJ,CAAUF,GAAV,CAAD,CAAxB;AAAA;AAAA,MAAOG,KAAP;;AACA,mBAA8BL,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,WAAMD,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,GAAf;;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,KAAK,CAACI,IAAN,GADY,CAEZ;AACD,GAHM,EAIP,CAACH,OAAD,CAJO,CAAT;AAOAL,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,KAAK,CAACK,gBAAN,CAAuB,OAAvB,EAAgC;AAAA,aAAMH,UAAU,CAAC,KAAD,CAAhB;AAAA,KAAhC;AACA,WAAO,YAAM;AACXF,MAAAA,KAAK,CAACM,mBAAN,CAA0B,OAA1B,EAAmC;AAAA,eAAMJ,UAAU,CAAC,KAAD,CAAhB;AAAA,OAAnC;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,SAAO,CAACD,OAAD,EAAUE,MAAV,CAAP;AACD,CAtBD;;GAAML,Q;;AAwBN,IAAMS,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AACnB,kBAA0BT,QAAQ,CAACD,GAAD,CAAlC;AAAA;AAAA,MAAOI,OAAP;AAAA,MAAgBE,MAAhB;;AAEA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEA,MAAjB;AAAA,gBAA0BF,OAAO,GAAG,OAAH,GAAa;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CARD;;IAAMM,M;UACsBT,Q;;;KADtBS,M;AAUN,eAAeA,MAAf","sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nconst url = \"http://streaming.tdiradio.com:8000/house.mp3\";\nconst useAudio = ()=> {\n   \n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n      audio.play();\n      //playing ? audio.play() : audio.pause();\n    },\n    [playing]\n  );\n\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle];\n};\n\nconst Player = () => {\n  const [playing, toggle] = useAudio(url);\n\n  return (\n    <div>\n      <button onClick={toggle}>{playing ? \"Pause\" : \"Play\"}</button>\n    </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}