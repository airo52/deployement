{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport download from 'js-file-download';\nimport { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\nimport Urls from '../urls';\n\nvar body = function body() {\n  return {\n    \"x-access-key\": Tokens().accessToken,\n    \"x-access-token\": Tokens().refreshToken\n  };\n};\n\nfunction sendUpload(_x, _x2) {\n  return _sendUpload.apply(this, arguments);\n}\n/*  unblockAdmin\n  blockAdmin\n  user_id*/\n\n\nfunction _sendUpload() {\n  _sendUpload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46(endPoint, formData) {\n    var result, data, Result;\n    return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n      while (1) {\n        switch (_context46.prev = _context46.next) {\n          case 0:\n            _context46.prev = 0;\n            _context46.next = 3;\n            return Axios.post(endPoint, formData);\n\n          case 3:\n            result = _context46.sent;\n\n            if (!(result.data == false)) {\n              _context46.next = 15;\n              break;\n            }\n\n            _context46.next = 7;\n            return UpdateToken(Tokens().refreshToken);\n\n          case 7:\n            data = _context46.sent;\n\n            if (!(data == true)) {\n              _context46.next = 13;\n              break;\n            }\n\n            _context46.next = 11;\n            return Axios.post(endPoint, formData);\n\n          case 11:\n            Result = _context46.sent;\n            return _context46.abrupt(\"return\", Result.data);\n\n          case 13:\n            _context46.next = 16;\n            break;\n\n          case 15:\n            return _context46.abrupt(\"return\", result.data);\n\n          case 16:\n            _context46.next = 21;\n            break;\n\n          case 18:\n            _context46.prev = 18;\n            _context46.t0 = _context46[\"catch\"](0);\n            console.log(_context46.t0);\n\n          case 21:\n          case \"end\":\n            return _context46.stop();\n        }\n      }\n    }, _callee46, null, [[0, 18]]);\n  }));\n  return _sendUpload.apply(this, arguments);\n}\n\nvar ApiRequest = {\n  DashBoardData: function () {\n    var _DashBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              endPoint = \"dashboard\";\n              _context.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context.sent;\n\n              if (!(result.data == false)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context.sent;\n\n              if (!(data == true)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", Result);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", result);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    function DashBoardData() {\n      return _DashBoardData.apply(this, arguments);\n    }\n\n    return DashBoardData;\n  }(),\n  getOrdersInProgress: function () {\n    var _getOrdersInProgress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              endPoint = \"in-progress\";\n              _context2.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.data == false)) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context2.sent;\n\n              if (!(data == true)) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context2.sent;\n              console.log(Result);\n              return _context2.abrupt(\"return\", Result);\n\n            case 15:\n              _context2.next = 18;\n              break;\n\n            case 17:\n              return _context2.abrupt(\"return\", result);\n\n            case 18:\n              _context2.next = 24;\n              break;\n\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", []);\n\n            case 24:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 20]]);\n    }));\n\n    function getOrdersInProgress() {\n      return _getOrdersInProgress.apply(this, arguments);\n    }\n\n    return getOrdersInProgress;\n  }(),\n  RegisterWriter: function () {\n    var _RegisterWriter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(email, username, password, ConfirmPassword, country, address, phone, category) {\n      var data, endPoint, result, _data, Result;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              data = 'email=' + email + '&username=' + username + '&password=' + password + '&country=' + country + '&address=' + address + '&phone=' + phone + '&category=' + category;\n              _context3.prev = 1;\n              endPoint = \"register/writer?\" + data;\n              _context3.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context3.sent;\n\n              if (!(result.data == false)) {\n                _context3.next = 17;\n                break;\n              }\n\n              _context3.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data = _context3.sent;\n\n              if (!(_data == true)) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context3.sent;\n              return _context3.abrupt(\"return\", Result);\n\n            case 15:\n              _context3.next = 18;\n              break;\n\n            case 17:\n              return _context3.abrupt(\"return\", result);\n\n            case 18:\n              _context3.next = 23;\n              break;\n\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 20]]);\n    }));\n\n    function RegisterWriter(_x3, _x4, _x5, _x6, _x7, _x8, _x9, _x10) {\n      return _RegisterWriter.apply(this, arguments);\n    }\n\n    return RegisterWriter;\n  }(),\n  getCategories: function () {\n    var _getCategories = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              endPoint = \"category\";\n              _context4.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context4.sent;\n\n              if (!(result.data == false)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context4.sent;\n\n              if (!(data == true)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context4.sent;\n              return _context4.abrupt(\"return\", Result);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", result);\n\n            case 17:\n              _context4.next = 22;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n\n            case 22:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 19]]);\n    }));\n\n    function getCategories() {\n      return _getCategories.apply(this, arguments);\n    }\n\n    return getCategories;\n  }(),\n  getWriters: function () {\n    var _getWriters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              endPoint = \"writers\"; //+data;\n\n              _context5.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context5.sent;\n\n              if (!(result.data == false)) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context5.sent;\n\n              if (!(data == true)) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context5.sent;\n              return _context5.abrupt(\"return\", Result);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", result);\n\n            case 17:\n              _context5.next = 22;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n\n            case 22:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19]]);\n    }));\n\n    function getWriters() {\n      return _getWriters.apply(this, arguments);\n    }\n\n    return getWriters;\n  }(),\n  BlockAdmin: function () {\n    var _BlockAdmin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              endPoint = \"blockAdmin?\" + \"user_id=\" + id; //+data;\n\n              _context6.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context6.sent;\n\n              if (!(result.data == false)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context6.sent;\n\n              if (!(data == true)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context6.sent;\n              return _context6.abrupt(\"return\", Result);\n\n            case 14:\n              _context6.next = 17;\n              break;\n\n            case 16:\n              return _context6.abrupt(\"return\", result);\n\n            case 17:\n              _context6.next = 22;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 19]]);\n    }));\n\n    function BlockAdmin(_x11) {\n      return _BlockAdmin.apply(this, arguments);\n    }\n\n    return BlockAdmin;\n  }(),\n  unblockAdmin: function () {\n    var _unblockAdmin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              endPoint = \"unblockAdmin?\" + \"user_id=\" + id; //+data;\n\n              _context7.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context7.sent;\n              console.log(result);\n\n              if (!(result.data == false)) {\n                _context7.next = 17;\n                break;\n              }\n\n              _context7.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              data = _context7.sent;\n\n              if (!(data == true)) {\n                _context7.next = 15;\n                break;\n              }\n\n              _context7.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context7.sent;\n              return _context7.abrupt(\"return\", Result);\n\n            case 15:\n              _context7.next = 18;\n              break;\n\n            case 17:\n              return _context7.abrupt(\"return\", result);\n\n            case 18:\n              _context7.next = 23;\n              break;\n\n            case 20:\n              _context7.prev = 20;\n              _context7.t0 = _context7[\"catch\"](0);\n              console.log(_context7.t0);\n\n            case 23:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 20]]);\n    }));\n\n    function unblockAdmin(_x12) {\n      return _unblockAdmin.apply(this, arguments);\n    }\n\n    return unblockAdmin;\n  }(),\n  BlockUser: function () {\n    var _BlockUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              endPoint = \"block?\" + \"user_id=\" + id; //+data;\n\n              _context8.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context8.sent;\n\n              if (!(result.data == false)) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context8.sent;\n\n              if (!(data == true)) {\n                _context8.next = 14;\n                break;\n              }\n\n              _context8.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context8.sent;\n              return _context8.abrupt(\"return\", Result);\n\n            case 14:\n              _context8.next = 17;\n              break;\n\n            case 16:\n              return _context8.abrupt(\"return\", result);\n\n            case 17:\n              _context8.next = 22;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0);\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 19]]);\n    }));\n\n    function BlockUser(_x13) {\n      return _BlockUser.apply(this, arguments);\n    }\n\n    return BlockUser;\n  }(),\n  unblockUser: function () {\n    var _unblockUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              endPoint = \"unblock?\" + \"user_id=\" + id; //+data;\n\n              _context9.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context9.sent;\n              console.log(result);\n\n              if (!(result.data == false)) {\n                _context9.next = 17;\n                break;\n              }\n\n              _context9.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              data = _context9.sent;\n\n              if (!(data == true)) {\n                _context9.next = 15;\n                break;\n              }\n\n              _context9.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context9.sent;\n              return _context9.abrupt(\"return\", Result);\n\n            case 15:\n              _context9.next = 18;\n              break;\n\n            case 17:\n              return _context9.abrupt(\"return\", result);\n\n            case 18:\n              _context9.next = 23;\n              break;\n\n            case 20:\n              _context9.prev = 20;\n              _context9.t0 = _context9[\"catch\"](0);\n              console.log(_context9.t0);\n\n            case 23:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[0, 20]]);\n    }));\n\n    function unblockUser(_x14) {\n      return _unblockUser.apply(this, arguments);\n    }\n\n    return unblockUser;\n  }(),\n  getUserDetails: function () {\n    var _getUserDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              endPoint = \"writer/details/\".concat(id); //+data;\n\n              _context10.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context10.sent;\n\n              if (!(result.data == false)) {\n                _context10.next = 16;\n                break;\n              }\n\n              _context10.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context10.sent;\n\n              if (!(data == true)) {\n                _context10.next = 14;\n                break;\n              }\n\n              _context10.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context10.sent;\n              return _context10.abrupt(\"return\", Result);\n\n            case 14:\n              _context10.next = 17;\n              break;\n\n            case 16:\n              return _context10.abrupt(\"return\", result.data);\n\n            case 17:\n              _context10.next = 22;\n              break;\n\n            case 19:\n              _context10.prev = 19;\n              _context10.t0 = _context10[\"catch\"](0);\n              console.log(_context10.t0);\n\n            case 22:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 19]]);\n    }));\n\n    function getUserDetails(_x15) {\n      return _getUserDetails.apply(this, arguments);\n    }\n\n    return getUserDetails;\n  }(),\n  getUnAssignedTask: function () {\n    var _getUnAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              endPoint = \"unAssignedTask\"; //+data;\n\n              _context11.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context11.sent;\n\n              if (!(result.data == false)) {\n                _context11.next = 16;\n                break;\n              }\n\n              _context11.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context11.sent;\n\n              if (!(data == true)) {\n                _context11.next = 14;\n                break;\n              }\n\n              _context11.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context11.sent;\n              return _context11.abrupt(\"return\", Result);\n\n            case 14:\n              _context11.next = 17;\n              break;\n\n            case 16:\n              return _context11.abrupt(\"return\", result);\n\n            case 17:\n              _context11.next = 22;\n              break;\n\n            case 19:\n              _context11.prev = 19;\n              _context11.t0 = _context11[\"catch\"](0);\n              console.log(_context11.t0);\n\n            case 22:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 19]]);\n    }));\n\n    function getUnAssignedTask() {\n      return _getUnAssignedTask.apply(this, arguments);\n    }\n\n    return getUnAssignedTask;\n  }(),\n  asignTaskToUser: function () {\n    var _asignTaskToUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(user_id, task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              endPoint = \"AssignTask/\".concat(user_id, \"/\").concat(task_id); //user_id,task_id\n\n              _context12.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context12.sent;\n\n              if (!(result.data == false)) {\n                _context12.next = 16;\n                break;\n              }\n\n              _context12.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context12.sent;\n\n              if (!(data == true)) {\n                _context12.next = 14;\n                break;\n              }\n\n              _context12.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context12.sent;\n              return _context12.abrupt(\"return\", Result);\n\n            case 14:\n              _context12.next = 17;\n              break;\n\n            case 16:\n              return _context12.abrupt(\"return\", result);\n\n            case 17:\n              _context12.next = 23;\n              break;\n\n            case 19:\n              _context12.prev = 19;\n              _context12.t0 = _context12[\"catch\"](0);\n              console.log(_context12.t0);\n              return _context12.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 19]]);\n    }));\n\n    function asignTaskToUser(_x16, _x17) {\n      return _asignTaskToUser.apply(this, arguments);\n    }\n\n    return asignTaskToUser;\n  }(),\n  postAllowedTaskNumber: function () {\n    var _postAllowedTaskNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(number) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              endPoint = \"allowedTask/\".concat(number); //user_id,task_id\n\n              _context13.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context13.sent;\n\n              if (!(result.data == false)) {\n                _context13.next = 16;\n                break;\n              }\n\n              _context13.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context13.sent;\n\n              if (!(data == true)) {\n                _context13.next = 14;\n                break;\n              }\n\n              _context13.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context13.sent;\n              return _context13.abrupt(\"return\", Result);\n\n            case 14:\n              _context13.next = 17;\n              break;\n\n            case 16:\n              return _context13.abrupt(\"return\", result);\n\n            case 17:\n              _context13.next = 23;\n              break;\n\n            case 19:\n              _context13.prev = 19;\n              _context13.t0 = _context13[\"catch\"](0);\n              console.log(_context13.t0);\n              return _context13.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 19]]);\n    }));\n\n    function postAllowedTaskNumber(_x18) {\n      return _postAllowedTaskNumber.apply(this, arguments);\n    }\n\n    return postAllowedTaskNumber;\n  }(),\n  postSequence: function () {\n    var _postSequence = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(sequence) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              endPoint = \"sequence/\".concat(sequence); //user_id,task_id\n\n              _context14.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context14.sent;\n\n              if (!(result.data == false)) {\n                _context14.next = 16;\n                break;\n              }\n\n              _context14.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context14.sent;\n\n              if (!(data == true)) {\n                _context14.next = 14;\n                break;\n              }\n\n              _context14.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context14.sent;\n              return _context14.abrupt(\"return\", Result);\n\n            case 14:\n              _context14.next = 17;\n              break;\n\n            case 16:\n              return _context14.abrupt(\"return\", result);\n\n            case 17:\n              _context14.next = 23;\n              break;\n\n            case 19:\n              _context14.prev = 19;\n              _context14.t0 = _context14[\"catch\"](0);\n              console.log(_context14.t0);\n              return _context14.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 19]]);\n    }));\n\n    function postSequence(_x19) {\n      return _postSequence.apply(this, arguments);\n    }\n\n    return postSequence;\n  }(),\n  updateCategory: function () {\n    var _updateCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(category, user_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              endPoint = \"updateCategory/\".concat(category, \"/\").concat(user_id); //user_id,task_id\n\n              _context15.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context15.sent;\n\n              if (!(result.data == false)) {\n                _context15.next = 16;\n                break;\n              }\n\n              _context15.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context15.sent;\n\n              if (!(data == true)) {\n                _context15.next = 14;\n                break;\n              }\n\n              _context15.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context15.sent;\n              return _context15.abrupt(\"return\", Result);\n\n            case 14:\n              _context15.next = 17;\n              break;\n\n            case 16:\n              return _context15.abrupt(\"return\", result);\n\n            case 17:\n              _context15.next = 23;\n              break;\n\n            case 19:\n              _context15.prev = 19;\n              _context15.t0 = _context15[\"catch\"](0);\n              console.log(_context15.t0);\n              return _context15.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[0, 19]]);\n    }));\n\n    function updateCategory(_x20, _x21) {\n      return _updateCategory.apply(this, arguments);\n    }\n\n    return updateCategory;\n  }(),\n  uploadFiles: function () {\n    var _uploadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(task_id, validFiles) {\n      var endPoint, formData, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              //try {\n              endPoint = \"FileUpload/\".concat(task_id); //user_id,task_id\n              //for (let i = 0; i < validFiles.length; i++) {\n              //   console.log(validFiles[i]);\n\n              formData = new FormData();\n              formData.append('files', validFiles);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken); //await sendUpload(endPoint,formData);\n\n              _context16.prev = 5;\n              _context16.next = 8;\n              return Axios.post(endPoint, formData);\n\n            case 8:\n              result = _context16.sent;\n              console.log(result.data);\n\n              if (!(result.data == false)) {\n                _context16.next = 22;\n                break;\n              }\n\n              _context16.next = 13;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 13:\n              data = _context16.sent;\n\n              if (!(data == true)) {\n                _context16.next = 20;\n                break;\n              }\n\n              _context16.next = 17;\n              return Axios.post(endPoint, formData);\n\n            case 17:\n              Result = _context16.sent;\n              formData = \"\";\n              return _context16.abrupt(\"return\", Result.data);\n\n            case 20:\n              _context16.next = 24;\n              break;\n\n            case 22:\n              formData = \"\";\n              return _context16.abrupt(\"return\", result.data);\n\n            case 24:\n              _context16.next = 29;\n              break;\n\n            case 26:\n              _context16.prev = 26;\n              _context16.t0 = _context16[\"catch\"](5);\n              formData = \"\"; //  console.log(error);\n\n            case 29:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[5, 26]]);\n    }));\n\n    function uploadFiles(_x22, _x23) {\n      return _uploadFiles.apply(this, arguments);\n    }\n\n    return uploadFiles;\n  }(),\n  postTask: function () {\n    var _postTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(title, category, time, expectedDate, pages, pricePerpage, totalAmountTobePaid, description, work_type, service) {\n      var data, endPoint, result, _data2, Result;\n\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              data = \"title=\" + title + \"&category=\" + category + \"&time=\" + time + \"&expectedDate=\" + expectedDate + \"&pages=\" + pages + \"&pricePerpage=\" + pricePerpage + \"&totalAmountTobePaid=\" + totalAmountTobePaid + \"&description=\" + description + \"&work_type=\" + work_type + \"&service=\" + service;\n              _context17.prev = 1;\n              endPoint = \"createTask?\" + data; ///user_id,task_id\n\n              _context17.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context17.sent;\n\n              if (!(result.data == false)) {\n                _context17.next = 17;\n                break;\n              }\n\n              _context17.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data2 = _context17.sent;\n\n              if (!(_data2 == true)) {\n                _context17.next = 15;\n                break;\n              }\n\n              _context17.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context17.sent;\n              return _context17.abrupt(\"return\", Result);\n\n            case 15:\n              _context17.next = 18;\n              break;\n\n            case 17:\n              return _context17.abrupt(\"return\", result);\n\n            case 18:\n              _context17.next = 24;\n              break;\n\n            case 20:\n              _context17.prev = 20;\n              _context17.t0 = _context17[\"catch\"](1);\n              console.log(_context17.t0);\n              return _context17.abrupt(\"return\", []);\n\n            case 24:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[1, 20]]);\n    }));\n\n    function postTask(_x24, _x25, _x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33) {\n      return _postTask.apply(this, arguments);\n    }\n\n    return postTask;\n  }(),\n  getSingleTaskFullDetails: function () {\n    var _getSingleTaskFullDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.prev = 0;\n              endPoint = \"getSingleTaskDetails/\".concat(task_id); //user_id,task_id\n\n              _context18.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context18.sent;\n\n              if (!(result.data == false)) {\n                _context18.next = 16;\n                break;\n              }\n\n              _context18.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context18.sent;\n\n              if (!(data == true)) {\n                _context18.next = 14;\n                break;\n              }\n\n              _context18.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context18.sent;\n              return _context18.abrupt(\"return\", Result);\n\n            case 14:\n              _context18.next = 17;\n              break;\n\n            case 16:\n              return _context18.abrupt(\"return\", result);\n\n            case 17:\n              _context18.next = 23;\n              break;\n\n            case 19:\n              _context18.prev = 19;\n              _context18.t0 = _context18[\"catch\"](0);\n              console.log(_context18.t0);\n              return _context18.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[0, 19]]);\n    }));\n\n    function getSingleTaskFullDetails(_x34) {\n      return _getSingleTaskFullDetails.apply(this, arguments);\n    }\n\n    return getSingleTaskFullDetails;\n  }(),\n  getDataFromURL: function getDataFromURL(url) {\n    return new Promise(function (resolve, reject) {\n      var headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Accept', 'application/json'); //headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\n\n      headers.append('Origin', 'http://localhost:3000');\n      setTimeout(function () {\n        fetch(url, {\n          mode: 'cors',\n          credentials: 'include',\n          method: 'GET',\n          headers: headers\n        }).then(function (response) {\n          return response.text();\n        }).then(function (data) {\n          resolve(data);\n        });\n      }, 2000); //}, 2000);\n    });\n  },\n  apihelperdownload: function () {\n    var _apihelperdownload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return axios.post(\"http://localhost:4000/peakwriter/api/c1/admin/\" + \"downloadFile\", {\n                responseType: 'blob'\n              }).then(function (response) {\n                return response;\n              });\n\n            case 2:\n              return _context19.abrupt(\"return\", _context19.sent);\n\n            case 3:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19);\n    }));\n\n    function apihelperdownload() {\n      return _apihelperdownload.apply(this, arguments);\n    }\n\n    return apihelperdownload;\n  }(),\n  deleteTask: function () {\n    var _deleteTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(taskId) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.prev = 0;\n              endPoint = \"removeTask?id=\".concat(taskId); //user_id,task_id\n\n              _context20.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context20.sent;\n\n              if (!(result.data == false)) {\n                _context20.next = 16;\n                break;\n              }\n\n              _context20.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context20.sent;\n\n              if (!(data == true)) {\n                _context20.next = 14;\n                break;\n              }\n\n              _context20.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context20.sent;\n              return _context20.abrupt(\"return\", Result);\n\n            case 14:\n              _context20.next = 17;\n              break;\n\n            case 16:\n              return _context20.abrupt(\"return\", result);\n\n            case 17:\n              _context20.next = 22;\n              break;\n\n            case 19:\n              _context20.prev = 19;\n              _context20.t0 = _context20[\"catch\"](0);\n              return _context20.abrupt(\"return\", []);\n\n            case 22:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20, null, [[0, 19]]);\n    }));\n\n    function deleteTask(_x35) {\n      return _deleteTask.apply(this, arguments);\n    }\n\n    return deleteTask;\n  }(),\n  getAssignedTask: function () {\n    var _getAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.prev = 0;\n              endPoint = \"getAssignedTask\"; //user_id,task_id\n\n              _context21.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context21.sent;\n\n              if (!(result.data == false)) {\n                _context21.next = 16;\n                break;\n              }\n\n              _context21.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context21.sent;\n\n              if (!(data == true)) {\n                _context21.next = 14;\n                break;\n              }\n\n              _context21.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context21.sent;\n              return _context21.abrupt(\"return\", Result);\n\n            case 14:\n              _context21.next = 17;\n              break;\n\n            case 16:\n              return _context21.abrupt(\"return\", result);\n\n            case 17:\n              _context21.next = 23;\n              break;\n\n            case 19:\n              _context21.prev = 19;\n              _context21.t0 = _context21[\"catch\"](0);\n              console.log(_context21.t0);\n              return _context21.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, null, [[0, 19]]);\n    }));\n\n    function getAssignedTask() {\n      return _getAssignedTask.apply(this, arguments);\n    }\n\n    return getAssignedTask;\n  }(),\n  CancellOrder: function () {\n    var _CancellOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(taskId) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.prev = 0;\n              endPoint = \"CancellTask?task_id=\".concat(taskId); //user_id,task_id\n\n              _context22.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context22.sent;\n\n              if (!(result.data == false)) {\n                _context22.next = 16;\n                break;\n              }\n\n              _context22.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context22.sent;\n\n              if (!(data == true)) {\n                _context22.next = 14;\n                break;\n              }\n\n              _context22.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context22.sent;\n              return _context22.abrupt(\"return\", Result);\n\n            case 14:\n              _context22.next = 17;\n              break;\n\n            case 16:\n              return _context22.abrupt(\"return\", result);\n\n            case 17:\n              _context22.next = 23;\n              break;\n\n            case 19:\n              _context22.prev = 19;\n              _context22.t0 = _context22[\"catch\"](0);\n              console.log(_context22.t0);\n              return _context22.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, null, [[0, 19]]);\n    }));\n\n    function CancellOrder(_x36) {\n      return _CancellOrder.apply(this, arguments);\n    }\n\n    return CancellOrder;\n  }(),\n  getCancelledOrders: function () {\n    var _getCancelledOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.prev = 0;\n              endPoint = \"CancelledOrders\"; //user_id,task_id\n\n              _context23.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context23.sent;\n\n              if (!(result.data == false)) {\n                _context23.next = 16;\n                break;\n              }\n\n              _context23.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context23.sent;\n\n              if (!(data == true)) {\n                _context23.next = 14;\n                break;\n              }\n\n              _context23.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context23.sent;\n              return _context23.abrupt(\"return\", Result);\n\n            case 14:\n              _context23.next = 17;\n              break;\n\n            case 16:\n              return _context23.abrupt(\"return\", result);\n\n            case 17:\n              _context23.next = 23;\n              break;\n\n            case 19:\n              _context23.prev = 19;\n              _context23.t0 = _context23[\"catch\"](0);\n              console.log(_context23.t0);\n              return _context23.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[0, 19]]);\n    }));\n\n    function getCancelledOrders() {\n      return _getCancelledOrders.apply(this, arguments);\n    }\n\n    return getCancelledOrders;\n  }(),\n  getOrdersBeingRevised: function () {\n    var _getOrdersBeingRevised = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.prev = 0;\n              endPoint = \"Revisions\"; //user_id,task_id\n\n              _context24.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context24.sent;\n\n              if (!(result.data == false)) {\n                _context24.next = 16;\n                break;\n              }\n\n              _context24.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context24.sent;\n\n              if (!(data == true)) {\n                _context24.next = 14;\n                break;\n              }\n\n              _context24.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context24.sent;\n              return _context24.abrupt(\"return\", Result);\n\n            case 14:\n              _context24.next = 17;\n              break;\n\n            case 16:\n              return _context24.abrupt(\"return\", result);\n\n            case 17:\n              _context24.next = 23;\n              break;\n\n            case 19:\n              _context24.prev = 19;\n              _context24.t0 = _context24[\"catch\"](0);\n              console.log(_context24.t0);\n              return _context24.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, null, [[0, 19]]);\n    }));\n\n    function getOrdersBeingRevised() {\n      return _getOrdersBeingRevised.apply(this, arguments);\n    }\n\n    return getOrdersBeingRevised;\n  }(),\n  getCompletedOrders: function () {\n    var _getCompletedOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.prev = 0;\n              endPoint = \"CompletedOrders\"; //user_id,task_id\n\n              _context25.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context25.sent;\n\n              if (!(result.data == false)) {\n                _context25.next = 16;\n                break;\n              }\n\n              _context25.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context25.sent;\n\n              if (!(data == true)) {\n                _context25.next = 14;\n                break;\n              }\n\n              _context25.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context25.sent;\n              return _context25.abrupt(\"return\", Result);\n\n            case 14:\n              _context25.next = 17;\n              break;\n\n            case 16:\n              return _context25.abrupt(\"return\", result);\n\n            case 17:\n              _context25.next = 23;\n              break;\n\n            case 19:\n              _context25.prev = 19;\n              _context25.t0 = _context25[\"catch\"](0);\n              console.log(_context25.t0);\n              return _context25.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[0, 19]]);\n    }));\n\n    function getCompletedOrders() {\n      return _getCompletedOrders.apply(this, arguments);\n    }\n\n    return getCompletedOrders;\n  }(),\n  getPendingPayments: function () {\n    var _getPendingPayments = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.prev = 0;\n              endPoint = \"pendingPayments\"; //user_id,task_id\n\n              _context26.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context26.sent;\n\n              if (!(result.data == false)) {\n                _context26.next = 16;\n                break;\n              }\n\n              _context26.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context26.sent;\n\n              if (!(data == true)) {\n                _context26.next = 14;\n                break;\n              }\n\n              _context26.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context26.sent;\n              return _context26.abrupt(\"return\", Result);\n\n            case 14:\n              _context26.next = 17;\n              break;\n\n            case 16:\n              return _context26.abrupt(\"return\", result);\n\n            case 17:\n              _context26.next = 23;\n              break;\n\n            case 19:\n              _context26.prev = 19;\n              _context26.t0 = _context26[\"catch\"](0);\n              console.log(_context26.t0);\n              return _context26.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, null, [[0, 19]]);\n    }));\n\n    function getPendingPayments() {\n      return _getPendingPayments.apply(this, arguments);\n    }\n\n    return getPendingPayments;\n  }(),\n  markTaskPaid: function () {\n    var _markTaskPaid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(invoice, task_id) {\n      var data, endPoint, result, _data3, Result;\n\n      return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.prev = 0;\n              data = '?invoice=' + invoice.replace('#', '') + '&task_id=' + task_id;\n              endPoint = \"conFirmPayment\" + data; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context27.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context27.sent;\n\n              if (!(result.data == false)) {\n                _context27.next = 17;\n                break;\n              }\n\n              _context27.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data3 = _context27.sent;\n\n              if (!(_data3 == true)) {\n                _context27.next = 15;\n                break;\n              }\n\n              _context27.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context27.sent;\n              return _context27.abrupt(\"return\", Result);\n\n            case 15:\n              _context27.next = 18;\n              break;\n\n            case 17:\n              return _context27.abrupt(\"return\", result);\n\n            case 18:\n              _context27.next = 24;\n              break;\n\n            case 20:\n              _context27.prev = 20;\n              _context27.t0 = _context27[\"catch\"](0);\n              console.log(_context27.t0);\n              return _context27.abrupt(\"return\", []);\n\n            case 24:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27, null, [[0, 20]]);\n    }));\n\n    function markTaskPaid(_x37, _x38) {\n      return _markTaskPaid.apply(this, arguments);\n    }\n\n    return markTaskPaid;\n  }(),\n  LoadInvoices: function () {\n    var _LoadInvoices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n        while (1) {\n          switch (_context28.prev = _context28.next) {\n            case 0:\n              endPoint = \"LoadInvoices\"; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context28.prev = 1;\n              _context28.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context28.sent;\n\n              if (!(result.data == false)) {\n                _context28.next = 16;\n                break;\n              }\n\n              _context28.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context28.sent;\n\n              if (!(data == true)) {\n                _context28.next = 14;\n                break;\n              }\n\n              _context28.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context28.sent;\n              return _context28.abrupt(\"return\", Result);\n\n            case 14:\n              _context28.next = 17;\n              break;\n\n            case 16:\n              return _context28.abrupt(\"return\", result);\n\n            case 17:\n              _context28.next = 23;\n              break;\n\n            case 19:\n              _context28.prev = 19;\n              _context28.t0 = _context28[\"catch\"](1);\n              console.log(_context28.t0);\n              return _context28.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context28.stop();\n          }\n        }\n      }, _callee28, null, [[1, 19]]);\n    }));\n\n    function LoadInvoices() {\n      return _LoadInvoices.apply(this, arguments);\n    }\n\n    return LoadInvoices;\n  }(),\n  LoadInvoiceDetails: function () {\n    var _LoadInvoiceDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(invoiceId) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n        while (1) {\n          switch (_context29.prev = _context29.next) {\n            case 0:\n              endPoint = \"LoadInvoicesDetails?invoiceId=\".concat(invoiceId); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context29.prev = 1;\n              _context29.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context29.sent;\n\n              if (!(result.data == false)) {\n                _context29.next = 16;\n                break;\n              }\n\n              _context29.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context29.sent;\n\n              if (!(data == true)) {\n                _context29.next = 14;\n                break;\n              }\n\n              _context29.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context29.sent;\n              return _context29.abrupt(\"return\", Result);\n\n            case 14:\n              _context29.next = 17;\n              break;\n\n            case 16:\n              return _context29.abrupt(\"return\", result);\n\n            case 17:\n              _context29.next = 23;\n              break;\n\n            case 19:\n              _context29.prev = 19;\n              _context29.t0 = _context29[\"catch\"](1);\n              console.log(_context29.t0);\n              return _context29.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context29.stop();\n          }\n        }\n      }, _callee29, null, [[1, 19]]);\n    }));\n\n    function LoadInvoiceDetails(_x39) {\n      return _LoadInvoiceDetails.apply(this, arguments);\n    }\n\n    return LoadInvoiceDetails;\n  }(),\n  getAdminData: function () {\n    var _getAdminData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n        while (1) {\n          switch (_context30.prev = _context30.next) {\n            case 0:\n              //getAdminData\n              endPoint = \"getAdminData\"; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context30.prev = 1;\n              _context30.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context30.sent;\n\n              if (!(result.data == false)) {\n                _context30.next = 16;\n                break;\n              }\n\n              _context30.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context30.sent;\n\n              if (!(data == true)) {\n                _context30.next = 14;\n                break;\n              }\n\n              _context30.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context30.sent;\n              return _context30.abrupt(\"return\", Result);\n\n            case 14:\n              _context30.next = 17;\n              break;\n\n            case 16:\n              return _context30.abrupt(\"return\", result);\n\n            case 17:\n              _context30.next = 23;\n              break;\n\n            case 19:\n              _context30.prev = 19;\n              _context30.t0 = _context30[\"catch\"](1);\n              console.log(_context30.t0);\n              return _context30.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context30.stop();\n          }\n        }\n      }, _callee30, null, [[1, 19]]);\n    }));\n\n    function getAdminData() {\n      return _getAdminData.apply(this, arguments);\n    }\n\n    return getAdminData;\n  }(),\n  getRegAdminData: function () {\n    var _getRegAdminData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n        while (1) {\n          switch (_context31.prev = _context31.next) {\n            case 0:\n              endPoint = \"getRegAdminData/\".concat(id); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context31.prev = 1;\n              _context31.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context31.sent;\n\n              if (!(result.data == false)) {\n                _context31.next = 16;\n                break;\n              }\n\n              _context31.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context31.sent;\n\n              if (!(data == true)) {\n                _context31.next = 14;\n                break;\n              }\n\n              _context31.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context31.sent;\n              return _context31.abrupt(\"return\", Result);\n\n            case 14:\n              _context31.next = 17;\n              break;\n\n            case 16:\n              return _context31.abrupt(\"return\", result);\n\n            case 17:\n              _context31.next = 23;\n              break;\n\n            case 19:\n              _context31.prev = 19;\n              _context31.t0 = _context31[\"catch\"](1);\n              console.log(_context31.t0);\n              return _context31.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context31.stop();\n          }\n        }\n      }, _callee31, null, [[1, 19]]);\n    }));\n\n    function getRegAdminData(_x40) {\n      return _getRegAdminData.apply(this, arguments);\n    }\n\n    return getRegAdminData;\n  }(),\n  UpdateProfile: function () {\n    var _UpdateProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(profile) {\n      var endPoint, formData, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n        while (1) {\n          switch (_context32.prev = _context32.next) {\n            case 0:\n              endPoint = \"updateProfile\"; //user_id,task_id\n\n              formData = new FormData();\n              formData.append('files', profile);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken); //await sendUpload(endPoint,formData);\n\n              _context32.prev = 5;\n              _context32.next = 8;\n              return Axios.post(endPoint, formData);\n\n            case 8:\n              result = _context32.sent;\n\n              if (!(result.data == false)) {\n                _context32.next = 21;\n                break;\n              }\n\n              _context32.next = 12;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 12:\n              data = _context32.sent;\n\n              if (!(data == true)) {\n                _context32.next = 19;\n                break;\n              }\n\n              _context32.next = 16;\n              return Axios.post(endPoint, formData);\n\n            case 16:\n              Result = _context32.sent;\n              formData = \"\";\n              return _context32.abrupt(\"return\", Result.data);\n\n            case 19:\n              _context32.next = 23;\n              break;\n\n            case 21:\n              formData = \"\";\n              return _context32.abrupt(\"return\", result.data);\n\n            case 23:\n              _context32.next = 28;\n              break;\n\n            case 25:\n              _context32.prev = 25;\n              _context32.t0 = _context32[\"catch\"](5);\n              formData = \"\"; //  console.log(error);\n\n            case 28:\n            case \"end\":\n              return _context32.stop();\n          }\n        }\n      }, _callee32, null, [[5, 25]]);\n    }));\n\n    function UpdateProfile(_x41) {\n      return _UpdateProfile.apply(this, arguments);\n    }\n\n    return UpdateProfile;\n  }(),\n  UpdateData: function () {\n    var _UpdateData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(data) {\n      var endPoint, result, _data4, Result;\n\n      return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n        while (1) {\n          switch (_context33.prev = _context33.next) {\n            case 0:\n              endPoint = \"UpdateProfileData?\" + data; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context33.prev = 1;\n              _context33.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context33.sent;\n\n              if (!(result.data == false)) {\n                _context33.next = 16;\n                break;\n              }\n\n              _context33.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              _data4 = _context33.sent;\n\n              if (!(_data4 == true)) {\n                _context33.next = 14;\n                break;\n              }\n\n              _context33.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context33.sent;\n              return _context33.abrupt(\"return\", Result);\n\n            case 14:\n              _context33.next = 17;\n              break;\n\n            case 16:\n              return _context33.abrupt(\"return\", result);\n\n            case 17:\n              _context33.next = 23;\n              break;\n\n            case 19:\n              _context33.prev = 19;\n              _context33.t0 = _context33[\"catch\"](1);\n              console.log(_context33.t0);\n              return _context33.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context33.stop();\n          }\n        }\n      }, _callee33, null, [[1, 19]]);\n    }));\n\n    function UpdateData(_x42) {\n      return _UpdateData.apply(this, arguments);\n    }\n\n    return UpdateData;\n  }(),\n  getAllAdministrators: function () {\n    var _getAllAdministrators = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n        while (1) {\n          switch (_context34.prev = _context34.next) {\n            case 0:\n              endPoint = \"getAdministrators\"; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context34.prev = 1;\n              _context34.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context34.sent;\n\n              if (!(result.data == false)) {\n                _context34.next = 16;\n                break;\n              }\n\n              _context34.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context34.sent;\n\n              if (!(data == true)) {\n                _context34.next = 14;\n                break;\n              }\n\n              _context34.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context34.sent;\n              return _context34.abrupt(\"return\", Result);\n\n            case 14:\n              _context34.next = 17;\n              break;\n\n            case 16:\n              return _context34.abrupt(\"return\", result);\n\n            case 17:\n              _context34.next = 23;\n              break;\n\n            case 19:\n              _context34.prev = 19;\n              _context34.t0 = _context34[\"catch\"](1);\n              console.log(_context34.t0);\n              return _context34.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context34.stop();\n          }\n        }\n      }, _callee34, null, [[1, 19]]);\n    }));\n\n    function getAllAdministrators() {\n      return _getAllAdministrators.apply(this, arguments);\n    }\n\n    return getAllAdministrators;\n  }(),\n  RegisterAdmins: function () {\n    var _RegisterAdmins = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(email, username, password, ConfirmPassword, country, address, phone, category) {\n      var data, endPoint, result, _data5, Result;\n\n      return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n        while (1) {\n          switch (_context35.prev = _context35.next) {\n            case 0:\n              data = 'email=' + email + '&username=' + username + '&password=' + password + '&country=' + country + '&address=' + address + '&phone=' + phone + '&adminLevel=' + category;\n              _context35.prev = 1;\n              endPoint = \"register/admin?\" + data;\n              _context35.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context35.sent;\n\n              if (!(result.data == false)) {\n                _context35.next = 17;\n                break;\n              }\n\n              _context35.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data5 = _context35.sent;\n\n              if (!(_data5 == true)) {\n                _context35.next = 15;\n                break;\n              }\n\n              _context35.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context35.sent;\n              return _context35.abrupt(\"return\", Result);\n\n            case 15:\n              _context35.next = 18;\n              break;\n\n            case 17:\n              return _context35.abrupt(\"return\", result);\n\n            case 18:\n              _context35.next = 23;\n              break;\n\n            case 20:\n              _context35.prev = 20;\n              _context35.t0 = _context35[\"catch\"](1);\n              console.log(_context35.t0);\n\n            case 23:\n            case \"end\":\n              return _context35.stop();\n          }\n        }\n      }, _callee35, null, [[1, 20]]);\n    }));\n\n    function RegisterAdmins(_x43, _x44, _x45, _x46, _x47, _x48, _x49, _x50) {\n      return _RegisterAdmins.apply(this, arguments);\n    }\n\n    return RegisterAdmins;\n  }(),\n  getNewSubmitedFiles: function () {\n    var _getNewSubmitedFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n        while (1) {\n          switch (_context36.prev = _context36.next) {\n            case 0:\n              endPoint = \"NewSubmitedTask\"; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context36.prev = 1;\n              _context36.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context36.sent;\n\n              if (!(result.data == false)) {\n                _context36.next = 16;\n                break;\n              }\n\n              _context36.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context36.sent;\n\n              if (!(data == true)) {\n                _context36.next = 14;\n                break;\n              }\n\n              _context36.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context36.sent;\n              return _context36.abrupt(\"return\", Result);\n\n            case 14:\n              _context36.next = 17;\n              break;\n\n            case 16:\n              return _context36.abrupt(\"return\", result);\n\n            case 17:\n              _context36.next = 23;\n              break;\n\n            case 19:\n              _context36.prev = 19;\n              _context36.t0 = _context36[\"catch\"](1);\n              console.log(_context36.t0);\n              return _context36.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context36.stop();\n          }\n        }\n      }, _callee36, null, [[1, 19]]);\n    }));\n\n    function getNewSubmitedFiles() {\n      return _getNewSubmitedFiles.apply(this, arguments);\n    }\n\n    return getNewSubmitedFiles;\n  }(),\n  getSubmitedFiles: function () {\n    var _getSubmitedFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(taskId) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n        while (1) {\n          switch (_context37.prev = _context37.next) {\n            case 0:\n              if (!(taskId === \"\" || taskId == undefined)) {\n                _context37.next = 2;\n                break;\n              }\n\n              return _context37.abrupt(\"return\", []);\n\n            case 2:\n              endPoint = \"NewSubmitedFiles/\".concat(taskId); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context37.prev = 3;\n              _context37.next = 6;\n              return Axios.post(endPoint, body());\n\n            case 6:\n              result = _context37.sent;\n\n              if (!(result.data == false)) {\n                _context37.next = 18;\n                break;\n              }\n\n              _context37.next = 10;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 10:\n              data = _context37.sent;\n\n              if (!(data == true)) {\n                _context37.next = 16;\n                break;\n              }\n\n              _context37.next = 14;\n              return Axios.post(endPoint, body());\n\n            case 14:\n              Result = _context37.sent;\n              return _context37.abrupt(\"return\", Result);\n\n            case 16:\n              _context37.next = 19;\n              break;\n\n            case 18:\n              return _context37.abrupt(\"return\", result);\n\n            case 19:\n              _context37.next = 25;\n              break;\n\n            case 21:\n              _context37.prev = 21;\n              _context37.t0 = _context37[\"catch\"](3);\n              console.log(_context37.t0);\n              return _context37.abrupt(\"return\", []);\n\n            case 25:\n            case \"end\":\n              return _context37.stop();\n          }\n        }\n      }, _callee37, null, [[3, 21]]);\n    }));\n\n    function getSubmitedFiles(_x51) {\n      return _getSubmitedFiles.apply(this, arguments);\n    }\n\n    return getSubmitedFiles;\n  }(),\n  sendRevisionRequest: function () {\n    var _sendRevisionRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38(taskId, message) {\n      var data, endPoint, result, _data6, Result;\n\n      return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n        while (1) {\n          switch (_context38.prev = _context38.next) {\n            case 0:\n              data = 'task_id=' + taskId + '&message=' + message;\n              endPoint = \"requestRevision?\" + data; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context38.prev = 2;\n              _context38.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context38.sent;\n\n              if (!(result.data == false)) {\n                _context38.next = 17;\n                break;\n              }\n\n              _context38.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data6 = _context38.sent;\n\n              if (!(_data6 == true)) {\n                _context38.next = 15;\n                break;\n              }\n\n              _context38.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context38.sent;\n              return _context38.abrupt(\"return\", Result);\n\n            case 15:\n              _context38.next = 18;\n              break;\n\n            case 17:\n              return _context38.abrupt(\"return\", result);\n\n            case 18:\n              _context38.next = 24;\n              break;\n\n            case 20:\n              _context38.prev = 20;\n              _context38.t0 = _context38[\"catch\"](2);\n              console.log(_context38.t0);\n              return _context38.abrupt(\"return\", []);\n\n            case 24:\n            case \"end\":\n              return _context38.stop();\n          }\n        }\n      }, _callee38, null, [[2, 20]]);\n    }));\n\n    function sendRevisionRequest(_x52, _x53) {\n      return _sendRevisionRequest.apply(this, arguments);\n    }\n\n    return sendRevisionRequest;\n  }(),\n  markTaskCompleted: function () {\n    var _markTaskCompleted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n        while (1) {\n          switch (_context39.prev = _context39.next) {\n            case 0:\n              endPoint = \"markComplete/\".concat(task_id); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context39.prev = 1;\n              _context39.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context39.sent;\n\n              if (!(result.data == false)) {\n                _context39.next = 16;\n                break;\n              }\n\n              _context39.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context39.sent;\n\n              if (!(data == true)) {\n                _context39.next = 14;\n                break;\n              }\n\n              _context39.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context39.sent;\n              return _context39.abrupt(\"return\", Result);\n\n            case 14:\n              _context39.next = 17;\n              break;\n\n            case 16:\n              return _context39.abrupt(\"return\", result);\n\n            case 17:\n              _context39.next = 23;\n              break;\n\n            case 19:\n              _context39.prev = 19;\n              _context39.t0 = _context39[\"catch\"](1);\n              console.log(_context39.t0);\n              return _context39.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context39.stop();\n          }\n        }\n      }, _callee39, null, [[1, 19]]);\n    }));\n\n    function markTaskCompleted(_x54) {\n      return _markTaskCompleted.apply(this, arguments);\n    }\n\n    return markTaskCompleted;\n  }(),\n  clearReadNotification: function () {\n    var _clearReadNotification = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(notification_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n        while (1) {\n          switch (_context40.prev = _context40.next) {\n            case 0:\n              endPoint = \"clearReadNotification/\".concat(notification_id); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context40.prev = 1;\n              _context40.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context40.sent;\n\n              if (!(result.data == false)) {\n                _context40.next = 16;\n                break;\n              }\n\n              _context40.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context40.sent;\n\n              if (!(data == true)) {\n                _context40.next = 14;\n                break;\n              }\n\n              _context40.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context40.sent;\n              return _context40.abrupt(\"return\", Result);\n\n            case 14:\n              _context40.next = 17;\n              break;\n\n            case 16:\n              return _context40.abrupt(\"return\", result);\n\n            case 17:\n              _context40.next = 22;\n              break;\n\n            case 19:\n              _context40.prev = 19;\n              _context40.t0 = _context40[\"catch\"](1);\n              return _context40.abrupt(\"return\", []);\n\n            case 22:\n            case \"end\":\n              return _context40.stop();\n          }\n        }\n      }, _callee40, null, [[1, 19]]);\n    }));\n\n    function clearReadNotification(_x55) {\n      return _clearReadNotification.apply(this, arguments);\n    }\n\n    return clearReadNotification;\n  }(),\n  loadChatUsers: function () {\n    var _loadChatUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(sender, receiver, taskid) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n        while (1) {\n          switch (_context41.prev = _context41.next) {\n            case 0:\n              endPoint = \"chatUsers/\".concat(sender, \"/\").concat(receiver, \"/\").concat(taskid); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context41.prev = 1;\n              _context41.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context41.sent;\n\n              if (!(result.data == false)) {\n                _context41.next = 16;\n                break;\n              }\n\n              _context41.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context41.sent;\n\n              if (!(data == true)) {\n                _context41.next = 14;\n                break;\n              }\n\n              _context41.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context41.sent;\n              return _context41.abrupt(\"return\", Result);\n\n            case 14:\n              _context41.next = 17;\n              break;\n\n            case 16:\n              return _context41.abrupt(\"return\", result);\n\n            case 17:\n              _context41.next = 22;\n              break;\n\n            case 19:\n              _context41.prev = 19;\n              _context41.t0 = _context41[\"catch\"](1);\n              return _context41.abrupt(\"return\", []);\n\n            case 22:\n            case \"end\":\n              return _context41.stop();\n          }\n        }\n      }, _callee41, null, [[1, 19]]);\n    }));\n\n    function loadChatUsers(_x56, _x57, _x58) {\n      return _loadChatUsers.apply(this, arguments);\n    }\n\n    return loadChatUsers;\n  }(),\n  getOpenTickets: function () {\n    var _getOpenTickets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n        while (1) {\n          switch (_context42.prev = _context42.next) {\n            case 0:\n              _context42.prev = 0;\n              endPoint = \"Tickets\";\n              _context42.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context42.sent;\n\n              if (!(result.data == false)) {\n                _context42.next = 17;\n                break;\n              }\n\n              _context42.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context42.sent;\n\n              if (!(data == true)) {\n                _context42.next = 15;\n                break;\n              }\n\n              _context42.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context42.sent;\n              console.log(Result);\n              return _context42.abrupt(\"return\", Result);\n\n            case 15:\n              _context42.next = 18;\n              break;\n\n            case 17:\n              return _context42.abrupt(\"return\", result);\n\n            case 18:\n              _context42.next = 24;\n              break;\n\n            case 20:\n              _context42.prev = 20;\n              _context42.t0 = _context42[\"catch\"](0);\n              return _context42.abrupt(\"return\", []);\n\n            case 24:\n            case \"end\":\n              return _context42.stop();\n          }\n        }\n      }, _callee42, null, [[0, 20]]);\n    }));\n\n    function getOpenTickets() {\n      return _getOpenTickets.apply(this, arguments);\n    }\n\n    return getOpenTickets;\n  }(),\n  ActivateAcount: function () {\n    var _ActivateAcount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(Key) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n        while (1) {\n          switch (_context43.prev = _context43.next) {\n            case 0:\n              _context43.prev = 0;\n              // alert(Key)\n              endPoint = \"activate/\".concat(Key);\n              _context43.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context43.sent;\n\n              if (!(result.data == false)) {\n                _context43.next = 16;\n                break;\n              }\n\n              _context43.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context43.sent;\n\n              if (!(data == true)) {\n                _context43.next = 14;\n                break;\n              }\n\n              _context43.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context43.sent;\n              return _context43.abrupt(\"return\", Result);\n\n            case 14:\n              _context43.next = 17;\n              break;\n\n            case 16:\n              return _context43.abrupt(\"return\", result);\n\n            case 17:\n              _context43.next = 22;\n              break;\n\n            case 19:\n              _context43.prev = 19;\n              _context43.t0 = _context43[\"catch\"](0);\n              //return[];\n              console.log(_context43.t0);\n\n            case 22:\n            case \"end\":\n              return _context43.stop();\n          }\n        }\n      }, _callee43, null, [[0, 19]]);\n    }));\n\n    function ActivateAcount(_x59) {\n      return _ActivateAcount.apply(this, arguments);\n    }\n\n    return ActivateAcount;\n  }(),\n  ForgotPassword: function () {\n    var _ForgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(email) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n        while (1) {\n          switch (_context44.prev = _context44.next) {\n            case 0:\n              _context44.prev = 0;\n              endPoint = \"Forgot/\".concat(email);\n              _context44.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context44.sent;\n\n              if (!(result.data == false)) {\n                _context44.next = 16;\n                break;\n              }\n\n              _context44.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context44.sent;\n\n              if (!(data == true)) {\n                _context44.next = 14;\n                break;\n              }\n\n              _context44.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context44.sent;\n              return _context44.abrupt(\"return\", Result);\n\n            case 14:\n              _context44.next = 17;\n              break;\n\n            case 16:\n              return _context44.abrupt(\"return\", result);\n\n            case 17:\n              _context44.next = 23;\n              break;\n\n            case 19:\n              _context44.prev = 19;\n              _context44.t0 = _context44[\"catch\"](0);\n              return _context44.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context44.stop();\n          }\n        }\n      }, _callee44, null, [[0, 19]]);\n    }));\n\n    function ForgotPassword(_x60) {\n      return _ForgotPassword.apply(this, arguments);\n    }\n\n    return ForgotPassword;\n  }(),\n  fileDownload: function () {\n    var _fileDownload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45() {\n      var endPoint;\n      return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n        while (1) {\n          switch (_context45.prev = _context45.next) {\n            case 0:\n              try {\n                endPoint = 'downloadFile';\n                axios.get('http://localhost/~tony/Download/').then(function (resp) {\n                  download(resp.data, fileName);\n                });\n                Axios.get(endPoint).then(function (resp) {\n                  download(resp.data, 'File.pdf');\n                });\n              } catch (error) {}\n\n            case 1:\n            case \"end\":\n              return _context45.stop();\n          }\n        }\n      }, _callee45);\n    }));\n\n    function fileDownload() {\n      return _fileDownload.apply(this, arguments);\n    }\n\n    return fileDownload;\n  }()\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/Api/Data/requestApi.js"],"names":["axios","download","Tokens","UpdateToken","Axios","Urls","body","accessToken","refreshToken","sendUpload","endPoint","formData","post","result","data","Result","console","log","ApiRequest","DashBoardData","getOrdersInProgress","RegisterWriter","email","username","password","ConfirmPassword","country","address","phone","category","getCategories","getWriters","BlockAdmin","id","unblockAdmin","BlockUser","unblockUser","getUserDetails","getUnAssignedTask","asignTaskToUser","user_id","task_id","postAllowedTaskNumber","number","postSequence","sequence","updateCategory","uploadFiles","validFiles","FormData","append","postTask","title","time","expectedDate","pages","pricePerpage","totalAmountTobePaid","description","work_type","service","getSingleTaskFullDetails","getDataFromURL","url","Promise","resolve","reject","headers","Headers","setTimeout","fetch","mode","credentials","method","then","response","text","apihelperdownload","responseType","deleteTask","taskId","getAssignedTask","CancellOrder","getCancelledOrders","getOrdersBeingRevised","getCompletedOrders","getPendingPayments","markTaskPaid","invoice","replace","LoadInvoices","LoadInvoiceDetails","invoiceId","getAdminData","getRegAdminData","UpdateProfile","profile","UpdateData","getAllAdministrators","RegisterAdmins","getNewSubmitedFiles","getSubmitedFiles","undefined","sendRevisionRequest","message","markTaskCompleted","clearReadNotification","notification_id","loadChatUsers","sender","receiver","taskid","getOpenTickets","ActivateAcount","Key","ForgotPassword","fileDownload","get","resp","fileName","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport download from 'js-file-download';\n\nimport { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\nimport Urls from '../urls';\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\n  async function sendUpload(endPoint,formData){\n    try {\n      \n    \n      const result = await Axios.post(endPoint,formData);\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,formData);\n            return Result.data;\n          }\n      }\n      else{\n          return result.data;\n      }\n    } catch (error) {\n        console.log(error);\n    }\n    }\n  /*  unblockAdmin\n    blockAdmin\n    user_id*/\n const ApiRequest={\n       DashBoardData:async()=>{\n        try {\n            const endPoint =`dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n          console.log(error);\n     }\n       },\n       getOrdersInProgress:async ()=>{\n        try {\n            const endPoint = `in-progress`;\n            const result = await Axios.post(endPoint,body());\n           \n            if(result.data == false){\n             const data = await UpdateToken(Tokens().refreshToken);\n             if(data == true){\n               const Result = await Axios.post(endPoint,body());\n                 console.log(Result)\n               return Result;\n             }\n            }else{\n             \n                return result;\n            }\n      } catch (error) {\n            return[];\n           console.log(error);\n      }\n       },\n\n       RegisterWriter:async (email,username,password,ConfirmPassword,country,address,phone,category)=>{\n\n        var data = 'email='+email+'&username='+username+'&password='+password+'&country='+country+'&address='+address+'&phone='+phone+'&category='+category;\n\n        try {\n          const endPoint =`register/writer?`+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n\n       },\n       getCategories:async ()=>{\n        try {\n          const endPoint =`category`;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      getWriters:async()=>{\n        //writers\n        try {\n          const endPoint =`writers`//+data;\n\n          const result = await Axios.post(endPoint,body());\n         \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n\n      BlockAdmin:async(id)=>{\n        try {\n          const endPoint =`blockAdmin?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      unblockAdmin:async(id)=>{\n        try {\n          const endPoint =`unblockAdmin?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          console.log(result)\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n\n\n      BlockUser:async(id)=>{\n        try {\n          const endPoint =`block?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n      unblockUser:async(id)=>{\n        try {\n          const endPoint =`unblock?`+\"user_id=\"+id//+data;\n\n          const result = await Axios.post(endPoint,body());\n          console.log(result)\n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n      },\n\n      getUserDetails:async (id)=>{\n       // writer/details/2\n       \n       try {\n        const endPoint =`writer/details/${id}`//+data;\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result.data;\n        }\n     }catch(e){\n      console.log(e);\n     }\n\n       \n      },\n      getUnAssignedTask:async ()=>{\n         \n        try {\n          const endPoint =`unAssignedTask`//+data;\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n        console.log(e);\n       }\n        \n\n\n      },\n\n      asignTaskToUser:async(user_id,task_id)=>{\n       \n        try {\n          const endPoint =`AssignTask/${user_id}/${task_id}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n\n      },\n\n      postAllowedTaskNumber:async (number)=>{\n        //allowedTask\n        try {\n          const endPoint =`allowedTask/${number}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n      postSequence:async (sequence)=>{\n       // sequence\n       try {\n        const endPoint =`sequence/${sequence}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n      },\n\n      updateCategory:async (category,user_id)=>{\n        try {\n          const endPoint =`updateCategory/${category}/${user_id}`;//user_id,task_id\n  \n          const result = await Axios.post(endPoint,body());\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                return Result;\n              }\n          }\n          else{\n              return result;\n          }\n       }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n     uploadFiles:async (task_id,validFiles) => {\n      //try {\n        const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n        //for (let i = 0; i < validFiles.length; i++) {\n       //   console.log(validFiles[i]);\n          var formData = new FormData();\n          formData.append('files', validFiles);\n          formData.append( \"x-access-key\", Tokens().accessToken)\n          formData.append(\"x-access-token\",Tokens().refreshToken)\n             //await sendUpload(endPoint,formData);\n             try {\n      \n    \n              const result = await Axios.post(endPoint,formData);\n              console.log(result.data)\n              \n              if(result.data == false)\n              {\n                  const data = await UpdateToken(Tokens().refreshToken);\n\n                  if(data == true)\n                  {\n                    const Result = await Axios.post(endPoint,formData);\n                    \n                    formData=\"\";\n                    return Result.data;\n                  }\n              }\n              else{\n                formData=\"\";\n                  return result.data;\n                  \n              }\n            } catch (error) {\n              formData=\"\";\n              //  console.log(error);\n            }\n       \n         \n       // }\n\n       \n    // }catch(e){\n       \n    //  console.log(e);\n    //  return [];\n   //  }\n      \n       \n        },\n\n     postTask:async(title,category,time,expectedDate,pages,pricePerpage,totalAmountTobePaid,description,work_type,service)=>{\n\n      var data = \"title=\"+title+\"&category=\"+category+\"&time=\"+time+\"&expectedDate=\"+expectedDate+\"&pages=\"+pages+\"&pricePerpage=\"+pricePerpage+\"&totalAmountTobePaid=\"+totalAmountTobePaid+\"&description=\"+description+\"&work_type=\"+work_type+\"&service=\"+service;\n      try {\n        const endPoint =`createTask?`+data;///user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n\n      },\n\n      getSingleTaskFullDetails:async(task_id)=>{\n      //  getSingleTaskDetails\n      \n      try {\n        const endPoint =`getSingleTaskDetails/${task_id}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n\n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n      },\n\n\n   \n      getDataFromURL:(url) => new Promise((resolve, reject) => {\n        let headers = new Headers();\n\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n        //headers.append('Authorization', 'Basic ' + base64.encode(username + \":\" +  password));\n        headers.append('Origin','http://localhost:3000');\n        setTimeout(() => {\n            fetch(url, {\n              mode: 'cors',\n              credentials: 'include',\n              method: 'GET',\n              headers: headers\n          })\n                .then(response => response.text())\n                .then(data => {\n                    resolve(data)\n                });\n        },2000);\n    //}, 2000);\n      }),\n\n      apihelperdownload:async ()=> {\n        return await axios.post(\"http://localhost:4000/peakwriter/api/c1/admin/\"+\"downloadFile\",{responseType: 'blob' }).then(function (response) {\n            return response;\n        })\n    },\n\n    deleteTask:async (taskId)=>{\n      try {\n        const endPoint =`removeTask?id=${taskId}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n\n      }catch(e){\n         \n        //console.log(e);\n        return [];\n       }\n    },\n\n\n    getAssignedTask:async ()=>{\n      try {\n        const endPoint =`getAssignedTask`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n\n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n    },\n\n    CancellOrder:async (taskId)=>{\n      try {\n        const endPoint =`CancellTask?task_id=${taskId}`;//user_id,task_id\n\n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n\n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n    },\n\n    getCancelledOrders:async ()=>{\n    //  CancelledOrders\n    try {\n      const endPoint =`CancelledOrders`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    getOrdersBeingRevised:async ()=>{\n      //Revisions\n      try {\n        const endPoint =`Revisions`;//user_id,task_id\n  \n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n  \n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n    },\n    getCompletedOrders:async ()=>{\n      try {\n        const endPoint =`CompletedOrders`;//user_id,task_id\n  \n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n  \n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n    },\n\n    getPendingPayments:async ()=>{\n      try {\n        const endPoint =`pendingPayments`;//user_id,task_id\n  \n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n  \n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n    },\n\n    markTaskPaid:async (invoice,task_id)=>{\n      \n      try {\n      \n        var data = '?invoice='+invoice.replace('#','')+'&task_id='+task_id;\n        const endPoint =`conFirmPayment`+data;//user_id,task_id\n        //?invoice=${invoice}&task_id=${task_id}\n  \n        const result = await Axios.post(endPoint,body());\n        \n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n  \n      }catch(e){\n         \n        console.log(e);\n        return [];\n       }\n    },\n\n    LoadInvoices:async ()=>{\n      \n      \n      const endPoint =`LoadInvoices`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n\n    },\n\n    LoadInvoiceDetails:async (invoiceId)=>{\n      const endPoint =`LoadInvoicesDetails?invoiceId=${invoiceId}`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    getAdminData:async ()=>{\n      //getAdminData\n\n      const endPoint =`getAdminData`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n\n    },\n\n    getRegAdminData:async(id)=>{\n      const endPoint =`getRegAdminData/${id}`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    UpdateProfile:async (profile)=>{\n      const endPoint =`updateProfile`;//user_id,task_id\n     \n        var formData = new FormData();\n        formData.append('files', profile);\n        formData.append( \"x-access-key\", Tokens().accessToken)\n        formData.append(\"x-access-token\",Tokens().refreshToken)\n           //await sendUpload(endPoint,formData);\n           try {\n    \n  \n            const result = await Axios.post(endPoint,formData);\n           // console.log(result.data)\n            \n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,formData);\n                  \n                  formData=\"\";\n                  return Result.data;\n                }\n            }\n            else{\n              formData=\"\";\n                return result.data;\n                \n            }\n          } catch (error) {\n            formData=\"\";\n            //  console.log(error);\n          }\n    },\n\n    UpdateData:async (data)=>{\n        \n      const endPoint =`UpdateProfileData?`+data;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    getAllAdministrators:async ()=>{\n      const endPoint =`getAdministrators`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    RegisterAdmins:async (email,username,password,ConfirmPassword,country,address,phone,category)=>{\n\n      var data = 'email='+email+'&username='+username+'&password='+password+'&country='+country+'&address='+address+'&phone='+phone+'&adminLevel='+category;\n\n      try {\n        const endPoint =`register/admin?`+data;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n     }catch(e){\n      console.log(e);\n     }\n\n     },\n\n     getNewSubmitedFiles:async ()=>{\n      const endPoint =`NewSubmitedTask`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n     },\n\n     getSubmitedFiles:async (taskId)=>{\n     if(taskId === \"\" || taskId == undefined){\n       return[];\n     }\n      const endPoint =`NewSubmitedFiles/${taskId}`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n     },\n\n     sendRevisionRequest:async(taskId,message)=>{\n        var data = 'task_id='+taskId+'&message='+message;\n       const endPoint =`requestRevision?`+data;//user_id,task_id\n       //?invoice=${invoice}&task_id=${task_id}\n      try{\n       const result = await Axios.post(endPoint,body());\n       \n       if(result.data == false)\n       {\n           const data = await UpdateToken(Tokens().refreshToken);\n           if(data == true)\n           {\n             const Result = await Axios.post(endPoint,body());\n             return Result;\n           }\n       }\n       else{\n           return result;\n       }\n \n     }catch(e){\n        \n       console.log(e);\n       return [];\n      }\n     },\n\n     markTaskCompleted:async(task_id)=>{\n      const endPoint =`markComplete/${task_id}`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n     },\n\n     clearReadNotification:async (notification_id)=>{\n      const endPoint =`clearReadNotification/${notification_id}`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      //console.log(e);\n      return [];\n     }\n     },\n     loadChatUsers:async (sender,receiver,taskid)=>{\n      const endPoint =`chatUsers/${sender}/${receiver}/${taskid}`;//user_id,task_id\n      //?invoice=${invoice}&task_id=${task_id}\n     try{\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      //console.log(e);\n      return [];\n     }\n     },\n\n     getOpenTickets:async()=>{\n      try {\n        const endPoint = `Tickets`;\n        const result = await Axios.post(endPoint,body());\n       \n        if(result.data == false){\n         const data = await UpdateToken(Tokens().refreshToken);\n         if(data == true){\n           const Result = await Axios.post(endPoint,body());\n             console.log(Result)\n           return Result;\n         }\n        }else{\n         \n            return result;\n        }\n  } catch (error) {\n        return[];\n       console.log(error);\n  }\n     },\n     ActivateAcount:async(Key)=>{\n      try {\n       // alert(Key)\n        const endPoint = `activate/${Key}`;\n        const result = await Axios.post(endPoint,body());\n       \n        if(result.data == false){\n         const data = await UpdateToken(Tokens().refreshToken);\n         if(data == true){\n           const Result = await Axios.post(endPoint,body());\n             //console.log(Result)\n           return Result;\n         }\n        }else{\n         \n            return result;\n        }\n  } catch (error) {\n        //return[];\n       console.log(error);\n  }\n     },\n     ForgotPassword:async(email)=>{\n      try {\n        const endPoint = `Forgot/${email}`;\n        const result = await Axios.post(endPoint,body());\n        //console.log(result)\n       \n        if(result.data == false){\n         const data = await UpdateToken(Tokens().refreshToken);\n         if(data == true){\n           const Result = await Axios.post(endPoint,body());\n             //console.log(Result)\n           return Result;\n         }\n        }else{\n         \n            return result;\n        }\n  } catch (error) {\n        return[];\n       console.log(error);\n  }\n     },\n\n     fileDownload:async ()=>{\n        \n      try {\n             const endPoint = 'downloadFile';\n            axios.get('http://localhost/~tony/Download/')\n             .then(resp => {\n                    download(resp.data, fileName);\n             });\n             \n             Axios.get(endPoint)\n             .then(resp => {\n              download(resp.data, 'File.pdf');\n       });\n      } catch (error) {\n        \n      }\n    \n\n\n\n  \n    },\n    \n\n\n }   \n    \n\nexport  default ApiRequest;"]},"metadata":{},"sourceType":"module"}