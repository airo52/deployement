{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/post/postTask.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Dropzone from './dropzone/Dropzone';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { useEffect, useState } from 'react';\nimport swal from 'sweetalert';\nimport { Modal, Button } from 'react-bootstrap';\nimport ApiRequest from 'src/Api/Data/requestApi';\nimport FormValidation from '../../Users/writers/formValidate';\nimport ModalCard from 'src/views/modal/Modal';\nimport TableCard from 'src/views/table/TableCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostTask = function PostTask() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      validFiles = _useState2[0],\n      setValidFiles = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      Show = _useState4[0],\n      setShow = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      prog = _useState6[0],\n      setProg = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      categories = _useState8[0],\n      setCategories = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      title = _useState10[0],\n      setTitle = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      category = _useState12[0],\n      setCategory = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      time = _useState14[0],\n      setTime = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      expectedDate = _useState16[0],\n      setExpectedDate = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pages = _useState18[0],\n      setPage = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      pricePerpage = _useState20[0],\n      setPricePerPag = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      totalAmountTobePaid = _useState22[0],\n      setAmountToBePaid = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      description = _useState24[0],\n      setDescription = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      workType = _useState26[0],\n      setWorktype = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      service = _useState28[0],\n      setService = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      selectedInvoice = _useState30[0],\n      setSelectedInvoice = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      selectedInvoiceEndDate = _useState32[0],\n      setSelectedInvoiceEndate = _useState32[1];\n\n  var _useState33 = useState([]),\n      _useState34 = _slicedToArray(_useState33, 2),\n      openInvoices = _useState34[0],\n      setOpenInvoices = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      show = _useState36[0],\n      setShows = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      isShowLoader = _useState38[0],\n      setShowLoader = _useState38[1];\n\n  var LoadOpenInvoices = function LoadOpenInvoices() {};\n\n  var Btns = function Btns(task_id) {\n    return; //<button onClick={()=>assignTask(id,task_id)} className=\"btn btn-primary\">assign task</button>;\n  };\n\n  var AssignContent = function AssignContent() {\n    var columns = [{\n      dataField: \"taskid\",\n      text: \"#id\"\n    }, {\n      dataField: \"status\",\n      text: \"Invoice status\",\n      sort: true\n    }, {\n      dataField: \"start\",\n      text: \"start date\",\n      sort: true\n    }, {\n      dataField: \"deadline\",\n      text: \"Deadline\",\n      sort: true\n    }, {\n      dataField: \"Action\",\n      text: \"Action\"\n    }];\n    return /*#__PURE__*/_jsxDEV(TableCard, {\n      columns: columns,\n      products: [],\n      title: \"Existing Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 14\n    }, _this);\n  };\n\n  var Contents = function Contents() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"start date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"end date\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, _this), /*#__PURE__*/_jsxDEV(AssignContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var handleClose = function handleClose() {\n    setShows(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShows(true);\n  };\n\n  var createInvoice = function createInvoice() {};\n\n  var LoadCategories = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getCategories();\n\n            case 2:\n              result = _context.sent;\n              setCategories(result.data); //  setSelected(result.data)\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function LoadCategories() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    LoadCategories();\n  }, []);\n\n  var HandleClose = function HandleClose() {\n    setShow(false);\n  };\n\n  var setPages = function setPages(page) {\n    var total = pricePerpage * page;\n    setAmountToBePaid(total);\n    setPage(page);\n  };\n\n  var setPricePerPage = function setPricePerPage(price) {\n    var total = price * pages;\n    setAmountToBePaid(total);\n    setPricePerPag(price);\n  };\n\n  var Update = function Update() {\n    var number = prog;\n    var progs = parseInt(prog);\n\n    if (progs >= 100) {\n      clearInterval(progress);\n      setTimeout(function () {\n        setShow(false);\n        swal(\"Upload Success\", \"file uploaded succesfully\", \"success\");\n      }, 1500);\n    }\n\n    ;\n    number = number + 10;\n    setProg(number);\n  };\n\n  var progress = function progress() {\n    setInterval(function () {\n      Update();\n    }, 1500);\n  };\n\n  var HandlePostTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var check, result, _result$data, success, lastId, number, total, index, newValue, element, results, resultst;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              check = FormValidation.postTaskForm(title, category, time, expectedDate, pages, pricePerpage, totalAmountTobePaid, description, service, workType);\n\n              if (!(check == true)) {\n                _context2.next = 40;\n                break;\n              }\n\n              if (!(validFiles.length !== 0)) {\n                _context2.next = 37;\n                break;\n              }\n\n              _context2.next = 5;\n              return ApiRequest.postTask(title, category, time, expectedDate, pages, pricePerpage, totalAmountTobePaid, description, service, workType);\n\n            case 5:\n              result = _context2.sent;\n              _result$data = result.data, success = _result$data.success, lastId = _result$data.lastId;\n\n              if (!(success == true)) {\n                _context2.next = 35;\n                break;\n              }\n\n              number = 1;\n              total = validFiles.length; //setShow(true);\n\n              if (!(validFiles.length !== 0)) {\n                _context2.next = 34;\n                break;\n              }\n\n              setShow(true);\n              index = 0;\n\n            case 13:\n              if (!(index < validFiles.length)) {\n                _context2.next = 31;\n                break;\n              }\n\n              newValue = Math.floor(number / total * 100);\n              element = validFiles[index]; // const result = await ApiRequest.uploadFiles(lastId,element);\n\n              _context2.next = 18;\n              return ApiRequest.uploadFiles2(element);\n\n            case 18:\n              results = _context2.sent;\n\n              if (!(results !== false)) {\n                _context2.next = 24;\n                break;\n              }\n\n              _context2.next = 22;\n              return ApiRequest.uploadFiles(lastId, results);\n\n            case 22:\n              resultst = _context2.sent;\n\n              if (resultst == true) {// swal('success','Task submited succesfully','success');\n                //getTaskInprogress();\n              } else {\n                swal('Error', 'Proccess Failed', 'error');\n              }\n\n            case 24:\n              if (!(result == true)) {\n                _context2.next = 28;\n                break;\n              }\n\n              setProg(newValue);\n              number = number + 1;\n              return _context2.abrupt(\"continue\", 28);\n\n            case 28:\n              index++;\n              _context2.next = 13;\n              break;\n\n            case 31:\n              setTimeout(function () {\n                setValidFiles([]);\n                setTitle('');\n                setCategory('');\n                setTime('');\n                setExpectedDate('');\n                setPage('');\n                setPricePerPag('');\n                setAmountToBePaid('');\n                setDescription('');\n                setWorktype('');\n                setService('');\n                setShow(false);\n                setProg(0);\n                swal(\"success\", \"upload succesfull\", \"success\");\n              }, 1000); //progress();\n\n              _context2.next = 35;\n              break;\n\n            case 34:\n              swal(\"Provide Files\", \"file uploaded Failed\", \"error\");\n\n            case 35:\n              _context2.next = 38;\n              break;\n\n            case 37:\n              swal(\"Provide Files\", \"file uploaded Failed\", \"error\");\n\n            case 38:\n              _context2.next = 41;\n              break;\n\n            case 40:\n              swal(\"Submision Error\", check, \"error\");\n\n            case 41:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function HandlePostTask() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container card\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          height: '50px',\n          outline: \"none\"\n        },\n        onClick: function onClick() {\n          return handleShow();\n        },\n        className: \"btn-primary shadow-none\",\n        children: \"SELECT INVOICE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputEmail4\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: title,\n              type: \"text\",\n              onChange: function onChange(e) {\n                return setTitle(e.target.value);\n              },\n              className: \"form-control\",\n              id: \"inputEmail4\",\n              placeholder: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputPassword4\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: function onChange(e) {\n                return setCategory(e.target.value);\n              },\n              className: \"form-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"0\",\n                selected: true,\n                children: \"chose Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 12\n              }, _this), categories.map(function (item) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: item.category_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 8\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 5\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 3\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputCity\",\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"time\",\n              value: time,\n              onChange: function onChange(e) {\n                return setTime(e.target.value);\n              },\n              className: \"form-control\",\n              id: \"inputCity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputState\",\n              children: \"Expected date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: expectedDate,\n              onChange: function onChange(e) {\n                return setExpectedDate(e.target.value);\n              },\n              className: \"form-control\",\n              type: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 9\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Pages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pages,\n              onChange: function onChange(e) {\n                return setPages(e.target.value);\n              },\n              className: \"form-control\",\n              min: \"0.00\",\n              max: \"10000.00\",\n              step: \"0.01\",\n              placeholder: \"pages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Price (Ksh per page)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: pricePerpage,\n              onChange: function onChange(e) {\n                return setPricePerPage(e.target.value);\n              },\n              className: \"form-control\",\n              min: \"0.00\",\n              max: \"10000.00\",\n              step: \"0.01\",\n              placeholder: \"price Ksh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Total Ksh to Be Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: totalAmountTobePaid,\n              disabled: true,\n              className: \"form-control\",\n              min: \"0.00\",\n              max: \"10000.00\",\n              step: \"0.01\",\n              placeholder: \"price in dollars\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Work type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: workType,\n              onChange: function onChange(e) {\n                return setWorktype(e.target.value);\n              },\n              className: \"form-control\",\n              min: \"0.00\",\n              max: \"10000.00\",\n              step: \"0.01\",\n              placeholder: \"Work type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: service,\n              onChange: function onChange(e) {\n                return setService(e.target.value);\n              },\n              className: \"form-control\",\n              min: \"0.00\",\n              max: \"10000.00\",\n              step: \"0.01\",\n              placeholder: \"service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Selected Invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              disabled: true,\n              value: selectedInvoice,\n              className: \"form-control\",\n              placeholder: \"seleted invoice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 5\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Selected Invoice end date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 7\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              disabled: true,\n              value: selectedInvoiceEndDate,\n              className: \"form-control\",\n              placeholder: \"seleted invoice end date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 7\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 5\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 3\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"block\"\n            },\n            class: \"form-group col-md-12\",\n            children: /*#__PURE__*/_jsxDEV(Dropzone, {\n              validFiles: validFiles,\n              setValidFiles: setValidFiles\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 7\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 3\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 3\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-md-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"inputZip\",\n              children: \"Descripe task Here(..Task Details)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 6\n            }, _this), /*#__PURE__*/_jsxDEV(CKEditor, {\n              editor: ClassicEditor // data={message}\n              ,\n              onReady: function onReady(editor) {\n                // You can store the \"editor\" and use when it is needed.\n                //console.log( 'Editor is ready to use!', editor );\n                editor.editing.view.change(function (writer) {\n                  writer.setStyle(\"height\", \"300px\", editor.editing.view.document.getRoot());\n                });\n              },\n              onChange: function onChange(event, editor) {\n                var data = editor.getData();\n                setDescription(data); //setMessage(data);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 4\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 6\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 3\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return HandlePostTask();\n          },\n          type: \"button\",\n          className: \"btn btn-primary\",\n          children: \"Post New Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 3\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 14\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }, _this), /*#__PURE__*/_jsxDEV(ModalCard, {\n      content: Contents(),\n      Show: show,\n      Close: handleClose,\n      Save: createInvoice,\n      ButtonName: \"Create New Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 1\n    }, _this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: Show,\n      onHide: HandleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Uploading Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 3\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 1\n      }, _this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Upload Progress \", prog, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 1\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress mb-3\",\n          style: {\n            height: \"15px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar bg-primary\",\n            role: \"progressbar\",\n            style: {\n              width: prog + \"%\"\n            },\n            \"aria-valuenow\": \"72\",\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 23\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 1\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 1\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(PostTask, \"2u4NnHHPCGEBYrtPCAUTs6eeakc=\");\n\n_c = PostTask;\nexport default PostTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostTask\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/post/postTask.js"],"names":["Dropzone","CKEditor","ClassicEditor","useEffect","useState","swal","Modal","Button","ApiRequest","FormValidation","ModalCard","TableCard","PostTask","validFiles","setValidFiles","Show","setShow","prog","setProg","categories","setCategories","title","setTitle","category","setCategory","time","setTime","expectedDate","setExpectedDate","pages","setPage","pricePerpage","setPricePerPag","totalAmountTobePaid","setAmountToBePaid","description","setDescription","workType","setWorktype","service","setService","selectedInvoice","setSelectedInvoice","selectedInvoiceEndDate","setSelectedInvoiceEndate","openInvoices","setOpenInvoices","show","setShows","isShowLoader","setShowLoader","LoadOpenInvoices","Btns","task_id","AssignContent","columns","dataField","text","sort","Contents","handleClose","handleShow","createInvoice","LoadCategories","getCategories","result","data","HandleClose","setPages","page","total","setPricePerPage","price","Update","number","progs","parseInt","clearInterval","progress","setTimeout","setInterval","HandlePostTask","check","postTaskForm","length","postTask","success","lastId","index","newValue","Math","floor","element","uploadFiles2","results","uploadFiles","resultst","height","outline","marginTop","marginBottom","e","target","value","map","item","category_name","display","editor","editing","view","change","writer","setStyle","document","getRoot","event","getData","width"],"mappings":"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","sourcesContent":["import Dropzone from './dropzone/Dropzone';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { useEffect, useState } from 'react';\nimport swal from 'sweetalert';\nimport { Modal ,Button} from 'react-bootstrap';\nimport ApiRequest from 'src/Api/Data/requestApi';\nimport FormValidation from '../../Users/writers/formValidate';\nimport ModalCard from 'src/views/modal/Modal';\nimport TableCard from 'src/views/table/TableCard';\n\nconst PostTask=()=>{\n\n  const [validFiles, setValidFiles] = useState([]);\n  const [Show,setShow]= useState(false);\n  const [prog,setProg]= useState(0);\n  const [categories,setCategories]=useState([]);\n\n  const [title,setTitle]= useState('');\n  const [category,setCategory] = useState('');\n  const [time,setTime] = useState('');\n  const [expectedDate,setExpectedDate]=useState('');\n  const [pages,setPage]= useState('');\n  const [pricePerpage,setPricePerPag]= useState('');\n  const [totalAmountTobePaid,setAmountToBePaid]=useState('');\n  const [description,setDescription]=useState('');\n  const [workType,setWorktype] = useState('');\n  const [service,setService] = useState('');\n\n  const [selectedInvoice,setSelectedInvoice] = useState('');\n  const [selectedInvoiceEndDate,setSelectedInvoiceEndate] = useState('');\n  const [openInvoices,setOpenInvoices] = useState([]);\n\n  const [show, setShows] = useState(false);\n  const [isShowLoader,setShowLoader] = useState(false);\n\n\n  const LoadOpenInvoices = ()=>{\n\n  }\n  \n  const  Btns =(task_id)=>{\n    return //<button onClick={()=>assignTask(id,task_id)} className=\"btn btn-primary\">assign task</button>;\n}\n   const AssignContent=()=>{\n     \n     const columns = [\n       {\n         dataField: \"taskid\",\n         text: \"#id\",\n        \n       },\n       {\n         dataField: \"status\",\n         text: \"Invoice status\",\n       \n         sort: true\n       },\n       {\n         dataField: \"start\",\n         text: \"start date\",\n       \n         sort: true\n       },\n       {\n         dataField: \"deadline\",\n         text: \"Deadline\",\n       \n         sort: true\n       },\n      \n       {\n           dataField: \"Action\",\n           text: \"Action\",\n        \n         }\n     ];\n\n    \n      return <TableCard\n                columns={columns}\n                products={[]}\n                title={\"Existing Invoice\"}\n             />\n   }\n  const Contents =()=>{\n      return <>\n               <form className=\"form\">\n                     <label>start date</label>\n                     <input type=\"date\" placeholder=\"end date\" className=\"form-control\"/>\n               </form>\n                <AssignContent/>\n          </>\n  }\n  const handleClose = () => {setShows(false)};\n  const handleShow = () => setShows(true);\n\n  const createInvoice =()=>{\n\n  }\n\n\n  const LoadCategories =async ()=>{\n    \n    const result = await ApiRequest.getCategories();\n  \n     setCategories(result.data);\n  //  setSelected(result.data)\n  }\n\n  useEffect(()=>{\n    LoadCategories();\n  },[]);\n\n  const HandleClose = () =>{\n    setShow(false);\n  }\n\n  const setPages=(page)=>{\n     var total = pricePerpage * page;\n     setAmountToBePaid(total);\n     setPage(page);\n\n  }\n  const setPricePerPage=(price)=>{\n     var total = price * pages;\n     setAmountToBePaid(total);\n     setPricePerPag(price);\n  }\n\n  const Update =()=>{\n    var number = prog;\n    var progs = parseInt(prog);\n    if(progs >= 100){\n      clearInterval(progress);\n      setTimeout(() => {\n        setShow(false);\n        swal(\"Upload Success\",\"file uploaded succesfully\",\"success\");\n      }, 1500);\n    };\n  \n    \n  \n  \n  \n  \n  number = number +10;\n    \n   setProg(number);\n  }\n\n  var progress = function(){ \n    setInterval(() => {\n    Update();\n}, 1500);\n  }\n const HandlePostTask=async ()=>{\n   \n   var check= FormValidation.postTaskForm(title,category,time,expectedDate,pages,pricePerpage,totalAmountTobePaid,description,service,workType);\n    \n   if(check == true){\n    if(validFiles.length !==0){\n        const result = await ApiRequest.postTask(title,category,time,expectedDate,pages,pricePerpage,totalAmountTobePaid,description,service,workType);\n\n        const {success,lastId}= result.data;\n         if(success == true){\n               \n  var number = 1;\n  var total = validFiles.length;\n\n \n//setShow(true);\nif(validFiles.length !==0){\n  setShow(true);\n  for (let index = 0; index <validFiles.length; index++) {\n    var newValue = Math.floor((number/total) * 100);\n    const element =validFiles[index];\n   // const result = await ApiRequest.uploadFiles(lastId,element);\n\n   const results = await ApiRequest.uploadFiles2(element);\n\n   \n\n    if(results !==false){\n      const resultst = await ApiRequest.uploadFiles(lastId,results)\n     \n      if(resultst == true){\n         // swal('success','Task submited succesfully','success');\n          //getTaskInprogress();\n      }else{\n          swal('Error','Proccess Failed','error');\n      }\n  }\n    if(result == true){\n      setProg(newValue);\n      number = number + 1;\n     continue;\n   }\n    \n  }\n  setTimeout(()=>{\n     setValidFiles([]);\n     setTitle('');\n     setCategory('');\n     setTime('');\n    setExpectedDate('');\n    setPage('');\n    setPricePerPag('');\n    setAmountToBePaid('');\n    setDescription('');\n    setWorktype('');\n    setService('');\n    setShow(false);\n    setProg(0);\n    swal(\"success\",\"upload succesfull\",\"success\");\n  },1000);\n\n//progress();\n }else{\n  swal(\"Provide Files\",\"file uploaded Failed\",\"error\");\n }\n\n         }\n          }else{\n            swal(\"Provide Files\",\"file uploaded Failed\",\"error\");\n           }  //\n\n   }else{\n    swal(\"Submision Error\",check,\"error\");\n   }\n\n  \n    \n   \n  }\n\n\n\n\n    return <>\n    <div  className=\"container card\">\n      <br/>\n    <button style={{height:'50px',outline:\"none\"}} onClick={()=>handleShow()} className=\"btn-primary shadow-none\">SELECT INVOICE</button>\n             <form style={{\n                    marginTop:\"30px\",\n                    marginBottom:\"30px\"\n             }}>\n\n  <div className=\"form-row\">\n    \n    <div className=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Title</label>\n      <input value={title} type=\"text\" onChange={(e)=>setTitle(e.target.value)} className=\"form-control\" id=\"inputEmail4\" placeholder=\"Title\"/>\n    </div>\n    <div className=\"form-group col-md-6\">\n      <label for=\"inputPassword4\">Category</label>\n       <select onChange={(e)=>setCategory(e.target.value)} className=\"form-control\">\n           <option value=\"0\" selected>chose Category</option>\n           {categories.map((item)=>{\n           return <option>{item.category_name}</option>\n         })}\n       </select>\n    </div>\n  </div>\n \n  <div className=\"form-row\">\n    <div className=\"form-group col-md-6\">\n      <label for=\"inputCity\">Time</label>\n      <input type=\"time\" value={time} onChange={(e)=>setTime(e.target.value)} className=\"form-control\" id=\"inputCity\"/>\n    </div>\n    <div className=\"form-group col-md-4\">\n      <label for=\"inputState\">Expected date</label>\n        <input value={expectedDate} onChange={(e)=>setExpectedDate(e.target.value)} className=\"form-control\" type=\"date\"/>\n    </div>\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Pages</label>\n      <input type=\"number\" value={pages} onChange={(e)=>setPages(e.target.value)} className=\"form-control\" min=\"0.00\" max=\"10000.00\" step=\"0.01\" placeholder=\"pages\" />\n      \n    </div>\n\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Price (Ksh per page)</label>\n      <input type=\"number\" value={pricePerpage} onChange={(e)=>setPricePerPage(e.target.value)} className=\"form-control\" min=\"0.00\" max=\"10000.00\" step=\"0.01\" placeholder=\"price Ksh\" />\n      \n    </div>\n\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Total Ksh to Be Paid</label>\n      <input type=\"number\" value={totalAmountTobePaid} disabled className=\"form-control\" min=\"0.00\" max=\"10000.00\" step=\"0.01\" placeholder=\"price in dollars\" />\n      \n    </div>\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Work type</label>\n      <input type=\"text\" value={workType} onChange={(e)=>setWorktype(e.target.value)}  className=\"form-control\" min=\"0.00\" max=\"10000.00\" step=\"0.01\" placeholder=\"Work type\" />\n      \n    </div>\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Service</label>\n      <input type=\"text\" value={service} onChange={(e)=>setService(e.target.value)}  className=\"form-control\" min=\"0.00\" max=\"10000.00\" step=\"0.01\" placeholder=\"service\" />\n      \n    </div>\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Selected Invoice</label>\n      <input type=\"text\" disabled value={selectedInvoice}   className=\"form-control\" placeholder=\"seleted invoice\" />\n      \n    </div>\n\n    <div className=\"form-group col-md-2\">\n      <label for=\"inputZip\">Selected Invoice end date</label>\n      <input type=\"text\" disabled value={selectedInvoiceEndDate}   className=\"form-control\" placeholder=\"seleted invoice end date\" />\n      \n    </div>\n  </div>\n\n  <div className=\"form-row\">\n  <div style={{display:\"block\"}} class=\"form-group col-md-12\">\n      <Dropzone validFiles={validFiles} setValidFiles={setValidFiles}/>\n</div>\n  </div>\n\n  <div className=\"form-row\">\n     <div className=\"form-group col-md-12\">\n     <label for=\"inputZip\">Descripe task Here(..Task Details)</label>\n   <CKEditor\n       \n       editor={ ClassicEditor }\n      // data={message}\n    \n       onReady={ editor => {\n           // You can store the \"editor\" and use when it is needed.\n           //console.log( 'Editor is ready to use!', editor );\n           editor.editing.view.change((writer) => {\n            writer.setStyle(\n                \"height\",\n                \"300px\",\n                editor.editing.view.document.getRoot()\n            );\n            });\n       } }\n       onChange={ ( event, editor ) => {\n           const data = editor.getData();\n           setDescription(data);\n           \n           //setMessage(data);\n       } }\n      \n   />\n     </div>\n  </div>\n  \n  <button onClick={()=>HandlePostTask()}  type=\"button\" className=\"btn btn-primary\">Post New Task</button>\n</form>\n</div>\n<ModalCard\n   content={Contents()}\n    Show={show}\n    Close={handleClose}\n   Save={createInvoice} ButtonName={\"Create New Invoice\"}\n/>\n\n\n\n\n<Modal show={Show} onHide={HandleClose}>\n<Modal.Header>\n  <Modal.Title>Uploading Task</Modal.Title>\n</Modal.Header>\n<Modal.Body>\n<small>Upload Progress {prog}%</small>\n                      <div className=\"progress mb-3\" style={{height:\"15px\"}}>\n                        <div className=\"progress-bar bg-primary\" role=\"progressbar\" style={{width:prog+\"%\"}} aria-valuenow=\"72\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                      </div>\n</Modal.Body>\n\n</Modal>\n\n\n          </>;\n}\n\nexport default PostTask;"]},"metadata":{},"sourceType":"module"}