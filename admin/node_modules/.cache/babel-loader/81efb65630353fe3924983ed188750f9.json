{"ast":null,"code":"import _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/in-progress/progress.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ChatBox from \"src/views/ChatBox/ChatBox\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TaskInProgress = function TaskInProgress() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var Open = function Open() {\n    setOpen(!open);\n  };\n\n  var CancelOrder = function CancelOrder(orderId) {\n    swal(\"YOU ARE ABOUT TO CANCEL ONGOING ORDER\", {\n      buttons: {\n        cancel: \"NO\",\n        yes: {\n          text: \"YES\",\n          value: \"yes\"\n        }\n      }\n    }).then(function (value) {\n      switch (value) {\n        case 'yes':\n          swal(\"Order Cancelled\", \"succesfully\", \"success\");\n          break;\n\n        default:\n          break;\n      }\n    });\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"writerName\",\n    text: \"Writer Username\"\n  }, {\n    dataField: \"email\",\n    text: \"email\"\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"Adate\",\n    text: \"Accepted-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n\n  var Buttons = function Buttons() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return Open();\n        },\n        style: {\n          marginRight: \"3px\"\n        },\n        className: \"btn btn-primary fa fa-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return CancelOrder(1);\n        },\n        className: \"btn btn-warning\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 20\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var products = [{\n    \"#taskId\": \"686787678\",\n    title: \"iuytfrdfgh\",\n    writerName: \"wilson\",\n    email: \"wilson@gmail.com\",\n    status: \"in-progress\",\n    category: \"Lorem\",\n    Adate: '2011-9-10',\n    ddate: \"2011-8-8\",\n    Action: Buttons()\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableCard, {\n      products: products,\n      columns: columns,\n      title: \"ORDERS-IN-PROGRESS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 14\n    }, _this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      open: open,\n      SetOpen: Open\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 14\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TaskInProgress, \"6dOGeNFz7lEsAiwKPNBpp5+ZTyc=\");\n\n_c = TaskInProgress;\nexport default TaskInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskInProgress\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/in-progress/progress.js"],"names":["useState","ChatBox","TableCard","swal","TaskInProgress","open","setOpen","Open","CancelOrder","orderId","buttons","cancel","yes","text","value","then","columns","dataField","sort","Buttons","marginRight","products","title","writerName","email","status","category","Adate","ddate","Action"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport ChatBox from \"src/views/ChatBox/ChatBox\";\nimport TableCard from \"src/views/table/TableCard\";\nimport swal from \"sweetalert\";\n\nconst TaskInProgress=()=>{\n      \n  const [open,setOpen]=useState(false);\n\n\n  const Open=()=>{\n     setOpen(!open);\n  }\n\n  const CancelOrder=(orderId)=>{\n    swal(\"YOU ARE ABOUT TO CANCEL ONGOING ORDER\",{\n       buttons:{\n         cancel:\"NO\",\n         yes:{\n           text:\"YES\",\n           value:\"yes\"\n         }\n       }\n    })\n    .then((value)=>{\n          switch (value) {\n            case 'yes':\n                  swal(\"Order Cancelled\",\"succesfully\",\"success\");\n              break;\n          \n            default:\n\n              break;\n          }\n    })\n  }\n\n     const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n        {\n          dataField: \"writerName\",\n          text: \"Writer Username\",\n       \n        },\n        {\n          dataField: \"email\",\n          text: \"email\",\n        \n        },\n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"Adate\",\n          text: \"Accepted-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n\n      const Buttons = ()=>{\n             return <>\n                   <button onClick={()=>Open()} style={{marginRight:\"3px\"}} className=\"btn btn-primary fa fa-comment\"></button>\n                   <button onClick={()=>CancelOrder(1)} className=\"btn btn-warning\">Cancel</button>\n                   </>\n      }\n      const products=[\n        {\n           \"#taskId\":\"686787678\",\n           title:\"iuytfrdfgh\",\n           writerName:\"wilson\",\n           email:\"wilson@gmail.com\",\n           status:\"in-progress\",\n           category:\"Lorem\",\n           Adate:'2011-9-10',\n           ddate:\"2011-8-8\",\n           Action:Buttons()\n\n        }\n    ]\n    return <>\n             <TableCard \n             products={products}\n             columns={columns}\n              title={\"ORDERS-IN-PROGRESS\"}\n             />\n             <ChatBox open={open} SetOpen={Open}/>\n          </>\n          \n}\n\nexport default TaskInProgress;"]},"metadata":{},"sourceType":"module"}