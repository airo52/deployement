{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Payments/history/history.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport Invoice from \"../../Invoice/Invoice\";\nimport SingeleTask from \"../../Task/TaskDetails/SingleTaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar History = function History() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShowInvoice = _useState2[0],\n      setIsShowInvoice = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isShowSingleTask = _useState4[0],\n      setIsShowSingleTask = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskId = _useState6[0],\n      setTaskId = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      invoiceId = _useState8[0],\n      setInvoiceId = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      Invoices = _useState10[0],\n      setInvoices = _useState10[1];\n\n  var ShowInvoice = function ShowInvoice(invoiceid) {\n    setInvoiceId(invoiceid);\n    setIsShowInvoice(true);\n    setIsShowSingleTask(false);\n  };\n\n  var ShowSingleTasks = function ShowSingleTasks(taskid) {\n    setTaskId(taskid);\n    setIsShowInvoice(false);\n    setIsShowSingleTask(true);\n  };\n\n  var CloseInvoice = function CloseInvoice() {\n    setInvoiceId('');\n    setTaskId('');\n    setIsShowInvoice(false);\n    setIsShowSingleTask(false);\n  };\n\n  var LoadInvoices = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, organisedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.LoadInvoices();\n\n            case 2:\n              data = _context.sent;\n              organisedData = [];\n              data.data.forEach(function (element) {\n                var dat = {\n                  invoiceId: element.Invoice,\n                  created: element.created_date,\n                  pdate: element.end_date,\n                  Action: Button(element.invoice_id)\n                };\n                organisedData.push(dat);\n              });\n              setInvoices(organisedData); //console.log(data.data);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function LoadInvoices() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    LoadInvoices();\n  }, []);\n\n  var Button = function Button(id) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        width: \"100%\",\n        color: \"#000\"\n      },\n      onClick: function onClick() {\n        return ShowInvoice(id);\n      },\n      className: \"btn btn-success fa fa-history\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var columns = [{\n    dataField: \"invoiceId\",\n    text: \"#Invoice Id\"\n  }, {\n    dataField: \"created\",\n    text: \"Created Date\"\n  }, {\n    dataField: \"pdate\",\n    text: \"Paid-Date\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    invoiceId: \"#21347yt\",\n    status: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-success\",\n      children: \"paid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 18\n    }, _this),\n    pdate: \"2020-4-8\",\n    Action: Button(5)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isShowInvoice && !isShowSingleTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container card\",\n      children: [\"  \", /*#__PURE__*/_jsxDEV(TableCard, {\n        products: Invoices,\n        columns: columns,\n        title: \"PAYMENT HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 45\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, _this), isShowInvoice && !isShowSingleTask && /*#__PURE__*/_jsxDEV(Invoice, {\n      InvoiceId: invoiceId,\n      showSingleTask: ShowSingleTasks,\n      closeInvoice: CloseInvoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 12\n    }, _this), !isShowInvoice && isShowSingleTask && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: ShowInvoice(invoiceId),\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 48\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(History, \"4LqKAjjnIohjeZ17OuXCDu2xylU=\");\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Payments/history/history.js"],"names":["useEffect","useState","ApiRequest","TableCard","Invoice","SingeleTask","History","isShowInvoice","setIsShowInvoice","isShowSingleTask","setIsShowSingleTask","taskId","setTaskId","invoiceId","setInvoiceId","Invoices","setInvoices","ShowInvoice","invoiceid","ShowSingleTasks","taskid","CloseInvoice","LoadInvoices","data","organisedData","forEach","element","dat","created","created_date","pdate","end_date","Action","Button","invoice_id","push","id","width","color","columns","dataField","text","products","status"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport Invoice from \"../../Invoice/Invoice\";\nimport SingeleTask from \"../../Task/TaskDetails/SingleTaskDetails\";\n\nconst History = ()=>{\n    const [isShowInvoice,setIsShowInvoice] = useState(false);\n    const [isShowSingleTask,setIsShowSingleTask]=useState(false);\n    const [taskId,setTaskId]=useState('');\n    const [invoiceId,setInvoiceId]= useState('');\n    const [Invoices,setInvoices]= useState([]);\n\n     const ShowInvoice=invoiceid=>{\n         setInvoiceId(invoiceid);\n         setIsShowInvoice(true);\n         setIsShowSingleTask(false);\n     }\n     const ShowSingleTasks =taskid=>{\n       setTaskId(taskid);\n      setIsShowInvoice(false);\n      setIsShowSingleTask(true);\n     }\n\n     const CloseInvoice=()=>{\n     setInvoiceId('');\n      setTaskId('');\n      setIsShowInvoice(false);\n      setIsShowSingleTask(false);\n     }\n\n\n     const LoadInvoices = async ()=>{\n          const data = await ApiRequest.LoadInvoices();\n           var organisedData=[];\n          data.data.forEach(element => {\n               var dat ={\n                invoiceId:element.Invoice,\n                created:element.created_date,\n                pdate:element.end_date,\n                Action:Button(element.invoice_id)\n               }\n\n               organisedData.push(dat);\n          });\n\n          setInvoices(organisedData);\n          \n          //console.log(data.data);\n     }\n\n     useEffect(()=>{\n        LoadInvoices();\n     },[]);\n\n  \n  const Button=id=>{\n    return <button style={{width:\"100%\",\n             \n              color:\"#000\"\n  }} onClick={()=>ShowInvoice(id)} className=\"btn btn-success fa fa-history\"></button>\n  }\n    const columns = [\n      \n        {\n          dataField: \"invoiceId\",\n          text: \"#Invoice Id\",\n       \n        },\n      \n        {\n          \n            dataField: \"created\",\n            text: \"Created Date\",\n          \n          \n        },\n        {\n          \n          dataField: \"pdate\",\n          text: \"Paid-Date\",\n       },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n      const products=[\n        {\n          invoiceId:\"#21347yt\",\n          status:<span className=\"badge badge-success\">paid</span>,\n          pdate:\"2020-4-8\",\n          Action:Button(5)\n        }\n      ]\n\n    \n    return <>\n          {!isShowInvoice && !isShowSingleTask && \n          <div className=\"container card\">  <TableCard \n             products={Invoices}\n             columns={columns}\n              title={\"PAYMENT HISTORY\"}\n             />\n             </div>\n          }\n\n        {isShowInvoice && !isShowSingleTask &&\n          \n           <Invoice InvoiceId={invoiceId} showSingleTask ={ShowSingleTasks} closeInvoice={CloseInvoice}/>\n         \n         \n         }  \n\n        {!isShowInvoice && isShowSingleTask && <SingeleTask id={taskId} closeTask={ShowInvoice(invoiceId)} isAccept={false}/>}\n          </>\n          \n}\n\nexport default History;"]},"metadata":{},"sourceType":"module"}