{"ast":null,"code":"import _defineProperty from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/seatings/admins/dynamicForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import './styles.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DynamicForm = function DynamicForm() {\n  _s();\n\n  var _useState = useState([{\n    name: \"\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  var handleChange = function handleChange(i, e) {\n    var newFormValues = _toConsumableArray(formValues);\n\n    newFormValues[i][e.target.name] = e.target.value;\n    setFormValues(newFormValues);\n  };\n\n  var addFormFields = function addFormFields() {\n    setFormValues([].concat(_toConsumableArray(formValues), [{\n      name: \"\"\n    }]));\n  };\n\n  var removeFormFields = function removeFormFields(i) {\n    var newFormValues = _toConsumableArray(formValues);\n\n    newFormValues.splice(i, 1);\n    setFormValues(newFormValues);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    alert(JSON.stringify(formValues));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button add\",\n      type: \"button\",\n      onClick: function onClick() {\n        return addFormFields();\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this), formValues.map(function (element, index) {\n      var _jsxDEV2;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-inline form-group row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleInputPassword1\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 18\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", (_jsxDEV2 = {\n          type: \"password\"\n        }, _defineProperty(_jsxDEV2, \"type\", \"text\"), _defineProperty(_jsxDEV2, \"name\", \"name\"), _defineProperty(_jsxDEV2, \"value\", element.name || \"\"), _defineProperty(_jsxDEV2, \"onChange\", function onChange(e) {\n          return handleChange(index, e);\n        }), _defineProperty(_jsxDEV2, \"class\", \"form-control\"), _defineProperty(_jsxDEV2, \"id\", \"exampleInputPassword1\"), _defineProperty(_jsxDEV2, \"placeholder\", \"Password\"), _jsxDEV2), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 16\n        }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: element.name || \"\",\n          onChange: function onChange(e) {\n            return handleChange(index, e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, _this), index ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button remove\",\n          onClick: function onClick() {\n            return removeFormFields(index);\n          },\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, _this) : null]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button submit\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DynamicForm, \"JNxuY5P3dpX/MlGa4ZJ40f09noM=\");\n\n_c = DynamicForm;\nexport default DynamicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/seatings/admins/dynamicForm.js"],"names":["React","useState","DynamicForm","name","formValues","setFormValues","handleChange","i","e","newFormValues","target","value","addFormFields","removeFormFields","splice","handleSubmit","event","preventDefault","alert","JSON","stringify","map","element","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n//import './styles.css'\nconst DynamicForm = ()=>{\n    \n\n\n\n\n    const [formValues, setFormValues] = useState([{ name: \"\"}])\n\n    let handleChange = (i, e) => {\n        let newFormValues = [...formValues];\n        newFormValues[i][e.target.name] = e.target.value;\n        setFormValues(newFormValues);\n      }\n    \n    let addFormFields = () => {\n        setFormValues([...formValues, { name: \"\"}])\n      }\n    \n    let removeFormFields = (i) => {\n        let newFormValues = [...formValues];\n        newFormValues.splice(i, 1);\n        setFormValues(newFormValues)\n    }\n    \n    let handleSubmit = (event) => {\n        event.preventDefault();\n        alert(JSON.stringify(formValues));\n    }\n\n    return (\n        <form   onSubmit={handleSubmit}>\n            <button className=\"button add\" type=\"button\" onClick={() => addFormFields()}>Add</button>\n          {formValues.map((element, index) => (\n            <div className=\"form-inline form-group row\" key={index}>\n                 <label for=\"exampleInputPassword1\">Password</label>\n               <input type=\"password\" type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\n              <label>Name</label>\n              <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => handleChange(index, e)} />\n             \n              {\n                index ? \n                  <button type=\"button\"  className=\"button remove\" onClick={() => removeFormFields(index)}>Remove</button> \n                : null\n              }\n            </div>\n          ))}\n          <div className=\"button-section\">\n              \n              <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n      </form>\n    )\n}\nexport default DynamicForm;"]},"metadata":{},"sourceType":"module"}