{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\nvar body = {\n  \"x-access-key\": Tokens().accessToken,\n  \"x-access-token\": Tokens().refreshToken\n};\n\nvar DashBoardData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var endPoint, result, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            endPoint = \"dashboard\";\n            _context.next = 4;\n            return Axios.post(endPoint, body);\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result == false)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return UpdateToken(Tokens().refreshToken);\n\n          case 8:\n            data = _context.sent;\n\n          case 9:\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 11]]);\n  }));\n\n  return function DashBoardData() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = DashBoardData;\nexport default DashBoardData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoardData\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/Api/Data/requestApi.js"],"names":["Tokens","UpdateToken","Axios","body","accessToken","refreshToken","DashBoardData","endPoint","post","result","data","console","log"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,WAAjB,QAAoC,wBAApC;AACA,OAAOC,KAAP,MAAkB,WAAlB;AAGA,IAAMC,IAAI,GAAE;AACJ,kBAAgBH,MAAM,GAAGI,WADrB;AAEJ,oBAAkBJ,MAAM,GAAGK;AAFvB,CAAZ;;AAMA,IAAMC,aAAa;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFC,YAAAA,QAFE;AAAA;AAAA,mBAIaL,KAAK,CAACM,IAAN,CAAWD,QAAX,EAAoBJ,IAApB,CAJb;;AAAA;AAIFM,YAAAA,MAJE;;AAAA,kBAKLA,MAAM,IAAI,KALL;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMeR,WAAW,CAACD,MAAM,GAAGK,YAAV,CAN1B;;AAAA;AAMEK,YAAAA,IANF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AASVC,YAAAA,OAAO,CAACC,GAAR;;AATU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbN,aAAa;AAAA;AAAA;AAAA,GAAnB;;KAAMA,a;AAaN,eAAeA,aAAf","sourcesContent":["import { Tokens, UpdateToken } from \"../authThenticateToken\";\nimport Axios from \"../config\";\n\n\nconst body ={\n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken,\n    }\n\n    \nconst DashBoardData = async ()=>{\n       try {\n              const endPoint =`dashboard`;\n\n              const result = await Axios.post(endPoint,body);\n              if(result == false){\n                  const data = await UpdateToken(Tokens().refreshToken);\n              }\n       } catch (error) {\n            console.log(error);\n       }\n}\n\nexport default DashBoardData;"]},"metadata":{},"sourceType":"module"}