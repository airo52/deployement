{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/completed/completed.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Completed = function Completed() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      taskDetails = _useState2[0],\n      setTaskDetails = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskId = _useState4[0],\n      setTaskId = _useState4[1];\n\n  var CloseTask = function CloseTask() {\n    setTaskDetails(false);\n  };\n\n  var getCompletedOrders = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getCompletedOrders();\n\n            case 2:\n              result = _context.sent;\n              console.log(result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getCompletedOrders() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getCompletedOrders();\n  }, []);\n\n  var TaskDetails = function TaskDetails(taskId) {\n    setTaskId(taskId);\n    setTaskDetails(true);\n  };\n\n  var columns = [{\n    dataField: \"#taskId\",\n    text: \"#taskId\"\n  }, {\n    dataField: \"title\",\n    text: \"Title\",\n    sort: true\n  }, {\n    dataField: \"writerName\",\n    text: \"Writer Username\"\n  }, {\n    dataField: \"email\",\n    text: \"email\"\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"category\",\n    text: \"Category\"\n  }, {\n    dataField: \"sdate\",\n    text: \"Submited-Date\"\n  }, {\n    dataField: \"ddate\",\n    text: \"Deadline\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    \"#taskId\": \"686787678\",\n    title: \"iuytfrdfgh\",\n    writerName: \"wilson\",\n    email: \"wilson@gmail.com\",\n    status: \"in-progress\",\n    category: \"Lorem\",\n    sdate: '2011-9-10',\n    ddate: \"2011-8-8\",\n    Action: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return TaskDetails(2);\n      },\n      className: \"btn btn-info\",\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }, _this)\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!taskDetails && /*#__PURE__*/_jsxDEV(TableCard, {\n      products: products,\n      columns: columns,\n      title: \"COMPLETED ORDERS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 30\n    }, _this), taskDetails && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      id: taskId,\n      closeTask: CloseTask,\n      isAccept: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 16\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Completed, \"Ao1yVAD8t5A2LiaSo9EFJILI6D4=\");\n\n_c = Completed;\nexport default Completed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Completed\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Task/management/completed/completed.js"],"names":["useEffect","useState","ApiRequest","TableCard","SingeleTask","Completed","taskDetails","setTaskDetails","taskId","setTaskId","CloseTask","getCompletedOrders","result","console","log","TaskDetails","columns","dataField","text","sort","products","title","writerName","email","status","category","sdate","ddate","Action"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../../TaskDetails/SingleTaskDetails\";\n\nconst Completed =()=>{\n  const [taskDetails,setTaskDetails] = useState(false);\n  const [taskId,setTaskId]=useState('');\n\n  const CloseTask=()=>{\n    setTaskDetails(false);\n  }\n\n  const getCompletedOrders = async ()=>{\n    const result = await ApiRequest.getCompletedOrders();\n    console.log(result);\n  }\n\n  useEffect(()=>{\n        getCompletedOrders();\n  },[])\n  const TaskDetails=(taskId)=>{\n    setTaskId(taskId);\n     setTaskDetails(true);\n  }\n    const columns = [\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n        {\n          dataField: \"title\",\n          text: \"Title\",\n        \n          sort: true\n        },\n        {\n          dataField: \"writerName\",\n          text: \"Writer Username\",\n       \n        },\n        {\n          dataField: \"email\",\n          text: \"email\",\n        \n        },\n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"category\",\n            text: \"Category\",\n          \n          \n        },\n        {\n          \n          dataField: \"sdate\",\n          text: \"Submited-Date\",\n        \n        \n      },\n      {\n          \n        dataField: \"ddate\",\n        text: \"Deadline\",\n      \n      \n      },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n      const products=[\n        {\n          \"#taskId\":\"686787678\",\n          title:\"iuytfrdfgh\",\n          writerName:\"wilson\",\n          email:\"wilson@gmail.com\",\n          status:\"in-progress\",\n          category:\"Lorem\",\n          sdate:'2011-9-10',\n          ddate:\"2011-8-8\",\n          Action:<button onClick={()=>TaskDetails(2)}  className=\"btn btn-info\">Details</button>\n        }\n      ]\n    return <>\n            {!taskDetails && <TableCard \n             products={products}\n             columns={columns}\n              title={\"COMPLETED ORDERS\"}\n             />\n            }\n\n{taskDetails &&<SingeleTask id={taskId} closeTask={CloseTask} isAccept={false}/>}\n          </>\n          \n}\n\nexport default Completed;"]},"metadata":{},"sourceType":"module"}