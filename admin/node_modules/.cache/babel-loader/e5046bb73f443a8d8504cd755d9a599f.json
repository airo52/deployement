{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Users/writers/writers.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ModalCard from 'src/views/modal/Modal';\nimport TableCard from '../../../table/TableCard';\nimport NewWriter from './newWriter';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport swal from 'sweetalert';\nimport CategoryEdit from './editCategory';\nimport { element } from 'prop-types';\nimport Profile from './profile/profile';\nimport FormValidation from './formValidate';\nimport ApiRequest from 'src/Api/Data/requestApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Writers = function Writers(_ref) {\n  _s();\n\n  var socket = _ref.socket;\n\n  var notify = function notify(data) {\n    return toast(data);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      show = _useState2[0],\n      setShow = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isShowLoader = _useState4[0],\n      setShowLoader = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      ConfirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country = _useState12[0],\n      setCountry = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      address = _useState14[0],\n      setAdress = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      phone = _useState16[0],\n      setPhone = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      category = _useState18[0],\n      setCategory = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      username = _useState20[0],\n      setUsername = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      userId = _useState22[0],\n      setUserId = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      categories = _useState24[0],\n      setCategories = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      writers = _useState26[0],\n      setWriter = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      userName = _useState28[0],\n      setUserName = _useState28[1];\n\n  var _useState29 = useState(),\n      _useState30 = _slicedToArray(_useState29, 2),\n      checkd = _useState30[0],\n      setCheck = _useState30[1]; //const [userEmail,setEmail] = useState('');\n\n\n  var _useState31 = useState([{\n    label: \"Short Stories.\",\n    value: \"short\"\n  }, {\n    label: \"Technically\",\n    value: \"technical\"\n  }, {\n    label: \"Novellas\",\n    value: \"novels\"\n  }, {\n    label: \"Scripts and Screenplays\",\n    value: \"scripts\"\n  }, {\n    label: \"True Crime. ...\",\n    value: \"true\"\n  }, {\n    label: \" Auto/Biography.\",\n    value: \"auto\"\n  }]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      initialSelected = _useState32[0],\n      setInititialSelected = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      selected = _useState34[0],\n      setSelecteds = _useState34[1];\n\n  var options = [{\n    label: \"Short Stories.\",\n    value: \"short\"\n  }, {\n    label: \"Technically\",\n    value: \"technical\"\n  }, {\n    label: \"Novellas\",\n    value: \"novels\"\n  }, {\n    label: \"Scripts and Screenplays\",\n    value: \"scripts\"\n  }, {\n    label: \"True Crime. ...\",\n    value: \"true\"\n  }, {\n    label: \" Auto/Biography.\",\n    value: \"auto\"\n  }];\n\n  var setSelected = function setSelected(data) {\n    setSelecteds(data);\n  };\n\n  var LoadCategories = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getCategories();\n\n            case 2:\n              result = _context.sent;\n              setCategories(result.data); //  setSelected(result.data)\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function LoadCategories() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var ProfileImage = function ProfileImage(image) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        width: \"70px\",\n        height: \"70px\",\n        borderRadius: \"35px\"\n      },\n      src: image,\n      alt: \"profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, _this);\n  };\n\n  var LoadWriters = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result, sortedItems;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ApiRequest.getWriters();\n\n            case 2:\n              result = _context2.sent;\n              sortedItems = []; //console.log(result);\n\n              if (result.data !== \"empty\" && result.data != false) {\n                result.data.map(function (item) {\n                  // =${`badge badge-primary`}\n                  var data = {\n                    \"#writerId\": \"#\" + item.witer_id,\n                    image: ProfileImage(item.writer_profile),\n                    writerName: item.writer_name,\n                    email: item.writer_email,\n                    status: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: item.writer_account_status == \"0\" ? \"badge badge-danger\" : \"badge badge-primary\",\n                      children: item.writer_account_status == \"0\" ? \"deactivated\" : \"Active\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 26\n                    }, _this),\n                    writercategory: item.writer_category,\n                    Action: Buttons(item.witer_id, item.writer_name, item.writer_email, checkes(item.writer_account_status))\n                  };\n                  sortedItems.push(data);\n                });\n              }\n\n              setWriter(sortedItems);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function LoadWriters() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var checkes = function checkes(status) {\n    return status == \"0\" ? false : true;\n  }; //load writers\n\n\n  useEffect(function () {\n    LoadCategories();\n    LoadWriters();\n  }, []);\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      edit = _useState36[0],\n      setEdit = _useState36[1];\n\n  var handleClose = function handleClose() {\n    setShow(false);\n    setEdit(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var BlockUserPermanet = function BlockUserPermanet(id, username) {\n    swal(\"You Are About To Permanently Block \" + username + \"!?\", {\n      buttons: {\n        cancel: \"Dont Block!\",\n        delete: {\n          text: \"Block User\",\n          value: \"delete\"\n        }\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = value;\n                _context3.next = _context3.t0 === \"delete\" ? 3 : 8;\n                break;\n\n              case 3:\n                _context3.next = 5;\n                return ApiRequest.BlockUser(id);\n\n              case 5:\n                result = _context3.sent;\n\n                if (result.data == true) {\n                  swal(\"\".concat(username), \"Deleted Succesfully\", \"success\");\n                  LoadWriters();\n                }\n\n                return _context3.abrupt(\"break\", 9);\n\n              case 8:\n                swal(\"Process Canceled Succesfully!\");\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  };\n\n  var DisableUser = function DisableUser(id, username) {\n    swal(\"\", \"Unblock \" + username + \"!?\", \"warning\", {\n      buttons: {\n        cancel: \"Cancel!\",\n        delete: {\n          text: \"Unblock User\",\n          value: \"unblock\"\n        }\n      }\n    }).then( /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(value) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.t0 = value;\n                _context4.next = _context4.t0 === \"unblock\" ? 3 : 8;\n                break;\n\n              case 3:\n                _context4.next = 5;\n                return ApiRequest.unblockUser(id);\n\n              case 5:\n                result = _context4.sent;\n\n                if (result.data == true) {\n                  swal(\"\".concat(username), \"unblocked Succesfully\", \"success\");\n                  LoadWriters();\n                }\n\n                return _context4.abrupt(\"break\", 9);\n\n              case 8:\n                swal(\"Process Canceled Succesfully!\");\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }());\n  };\n\n  var EditUser = function EditUser(id, checkeds, username, email) {\n    setUserId(id);\n    setUserName(username);\n    setCheck(checkeds);\n    setEdit(true);\n    setEmail(email);\n  };\n\n  var Back = function Back() {\n    setUserId('');\n    setEdit(false);\n  };\n\n  var CreateNewWriter = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var test, result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              setShowLoader(true);\n              test = FormValidation.RegisterForm(email, username, password, ConfirmPassword, country, address, phone, category);\n\n              if (!(test == true)) {\n                _context5.next = 9;\n                break;\n              }\n\n              _context5.next = 5;\n              return ApiRequest.RegisterWriter(email, username, password, ConfirmPassword, country, address, phone, category);\n\n            case 5:\n              result = _context5.sent;\n\n              if (result.data == true) {\n                notify('Writer added Succesfully');\n                setShowLoader(false);\n                LoadWriters();\n                setEmail('');\n                setPassword('');\n                setAdress('');\n                setPassword('');\n                setConfirmPassword('');\n                setCountry('');\n                setPhone('');\n                setUsername('');\n              } else {\n                notify(result.data);\n                setShowLoader(false);\n                setEmail('');\n                setPassword('');\n                setAdress('');\n                setPassword('');\n                setConfirmPassword('');\n                setCountry('');\n                setPhone('');\n                setUsername('');\n              }\n\n              _context5.next = 11;\n              break;\n\n            case 9:\n              notify(test);\n              setTimeout(function () {\n                setShowLoader(false);\n                setEmail('');\n                setPassword('');\n                setAdress('');\n                setPassword('');\n                setConfirmPassword('');\n                setCountry('');\n                setPhone('');\n                setUsername('');\n              }, 2000);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function CreateNewWriter() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var Buttons = function Buttons(id, username, email, checkeds) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          color: \"blue\"\n        },\n        onClick: function onClick() {\n          return EditUser(id, checkeds, username, email);\n        },\n        className: \"fa fa-edit btn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return checkeds == true ? BlockUserPermanet(id, username) : DisableUser(id, username);\n        },\n        className: checkeds ? \"fa fa-unlock btn btn-info\" : \"fa fa-lock btn btn-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var columns = [{\n    dataField: \"#writerId\",\n    text: \"WriterId\"\n  }, {\n    dataField: \"image\",\n    text: \"Profile\",\n    sort: true\n  }, {\n    dataField: \"writerName\",\n    text: \"Username\"\n  }, {\n    dataField: \"email\",\n    text: \"email\"\n  }, {\n    dataField: \"status\",\n    text: \"status\"\n  }, {\n    dataField: \"writercategory\",\n    text: \"writer Category\"\n  }, {\n    dataField: \"Action\",\n    text: \"Action\"\n  }];\n  var products = [{\n    \"#writerId\": \"#9988\",\n    image: \"image\",\n    writerName: \"Airo\",\n    email: \"airotony8@gmail.com\",\n    status: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-primary\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 24\n    }, _this),\n    writercategory: \"Litrature\",\n    Action: Buttons(1, \"Linet\")\n  }, {\n    \"#writerId\": \"#9988\",\n    image: \"image\",\n    writerName: \"Airo\",\n    email: \"airotony8@gmail.com\",\n    status: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-primary\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }, _this),\n    writercategory: \"Litrature\",\n    Action: Buttons(2, \"Brayo\")\n  }, {\n    \"#writerId\": \"#9988\",\n    image: \"image\",\n    writerName: \"Airo\",\n    email: \"airotony8@gmail.com\",\n    status: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-primary\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }, _this),\n    writercategory: \"Litrature\",\n    Action: Buttons(3, \"Kevo\")\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [edit && /*#__PURE__*/_jsxDEV(Profile, {\n      category: categories,\n      existingCategories: initialSelected,\n      back: Back,\n      DisableUser: DisableUser,\n      BlockUserPermanet: BlockUserPermanet,\n      id: userId,\n      username: userName,\n      checkeds: checkd,\n      email: email,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 15\n    }, _this), /*#__PURE__*/_jsxDEV(ModalCard, {\n      content: /*#__PURE__*/_jsxDEV(NewWriter, {\n        isShowLoader: isShowLoader,\n        email: email,\n        setEmail: setEmail,\n        password: password,\n        setPassword: setPassword,\n        ConfirmPassword: ConfirmPassword,\n        setConfirmPassword: setConfirmPassword,\n        country: country,\n        setCountry: setCountry,\n        address: address,\n        setAdress: setAdress,\n        phone: phone,\n        setPhone: setPhone,\n        category: categories,\n        setCategory: setCategory,\n        username: username,\n        setUsername: setUsername,\n        setSelected: setCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, _this),\n      Show: show,\n      Close: handleClose,\n      Save: CreateNewWriter,\n      ButtonName: \"Create New Writer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 6\n    }, _this), !edit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"60px\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            marginTop: \"10px\",\n            marginLeft: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"CREATE NEW USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 62\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return handleShow();\n          },\n          style: {\n            width: \"40px\",\n            height: \"40px\",\n            marginRight: \"10px\",\n            marginTop: \"7px\"\n          },\n          className: \"btn btn-primary fa fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 14\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 20\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container card\",\n        children: /*#__PURE__*/_jsxDEV(TableCard, {\n          products: writers,\n          columns: columns,\n          title: \"Writers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 8\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 8\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Writers, \"1hywAJ2dzjBMGPSgGgp/4FKcKRk=\");\n\n_c = Writers;\nexport default Writers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Writers\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Users/writers/writers.js"],"names":["useEffect","useState","ModalCard","TableCard","NewWriter","ToastContainer","toast","swal","CategoryEdit","element","Profile","FormValidation","ApiRequest","Writers","socket","notify","data","show","setShow","isShowLoader","setShowLoader","email","setEmail","password","setPassword","ConfirmPassword","setConfirmPassword","country","setCountry","address","setAdress","phone","setPhone","category","setCategory","username","setUsername","userId","setUserId","categories","setCategories","writers","setWriter","userName","setUserName","checkd","setCheck","label","value","initialSelected","setInititialSelected","selected","setSelecteds","options","setSelected","LoadCategories","getCategories","result","ProfileImage","image","width","height","borderRadius","LoadWriters","getWriters","sortedItems","map","item","witer_id","writer_profile","writerName","writer_name","writer_email","status","writer_account_status","writercategory","writer_category","Action","Buttons","checkes","push","edit","setEdit","handleClose","handleShow","BlockUserPermanet","id","buttons","cancel","delete","text","then","BlockUser","DisableUser","unblockUser","EditUser","checkeds","Back","CreateNewWriter","test","RegisterForm","RegisterWriter","setTimeout","color","columns","dataField","sort","products","display","flexDirection","justifyContent","marginTop","marginLeft","marginRight"],"mappings":"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","sourcesContent":["\nimport { useEffect, useState } from 'react';\nimport ModalCard from 'src/views/modal/Modal';\nimport TableCard from '../../../table/TableCard';\nimport NewWriter from './newWriter';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport swal from 'sweetalert';\nimport CategoryEdit from './editCategory';\nimport { element } from 'prop-types';\nimport Profile from './profile/profile';\nimport FormValidation from './formValidate';\nimport ApiRequest from 'src/Api/Data/requestApi';\n\n\nconst Writers = ({socket})=>{\n\n    const notify = (data) => toast(data);\n\n    const [show, setShow] = useState(false);\n    const [isShowLoader,setShowLoader] = useState(false);\n\n    const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const [ConfirmPassword,setConfirmPassword] = useState('');\n    const [country,setCountry] = useState('');\n    const [address,setAdress] = useState('');\n    const [phone,setPhone] = useState('');\n    const [category,setCategory] = useState([]);\n    const [username,setUsername] = useState('');\n    const [userId,setUserId]=useState('');\n    const  [categories,setCategories] = useState([]);\n    const [writers,setWriter] = useState([]);\n    const [userName,setUserName] = useState('');\n    const [checkd,setCheck] = useState();\n   //const [userEmail,setEmail] = useState('');\n    \n\n    const [initialSelected,setInititialSelected] = useState([\n      { label: \"Short Stories.\",value:\"short\"},\n      { label: \"Technically\",value:\"technical\"},\n      { label: \"Novellas\",value:\"novels\"},\n      { label: \"Scripts and Screenplays\",value:\"scripts\"},\n      { label: \"True Crime. ...\",value:\"true\"},\n      { label: \" Auto/Biography.\",value:\"auto\"},\n     ]);\n    const [selected, setSelecteds] = useState('');\n   const options = [\n      { label: \"Short Stories.\",value:\"short\"},\n      { label: \"Technically\",value:\"technical\"},\n      { label: \"Novellas\",value:\"novels\"},\n      { label: \"Scripts and Screenplays\",value:\"scripts\"},\n      { label: \"True Crime. ...\",value:\"true\"},\n      { label: \" Auto/Biography.\",value:\"auto\"},\n    \n      ];\n\n      const setSelected=data=>{\n       \n          setSelecteds(data)\n      }\n\n      const LoadCategories =async ()=>{\n        const result = await ApiRequest.getCategories();\n      \n         setCategories(result.data);\n      //  setSelected(result.data)\n      }\n\n      const ProfileImage=image=>{\n    \n        return <img \n                style={{\n                  width:\"70px\",\n                  height:\"70px\",\n                  borderRadius:\"35px\"\n                }}\n            src={image} alt=\"profile\"/>\n      }\n\n      const LoadWriters = async ()=>{\n            const result = await ApiRequest.getWriters();\n            const sortedItems=[];\n             //console.log(result);\n            if(result.data !==\"empty\" && result.data != false){\n            result.data.map((item)=>{\n             // =${`badge badge-primary`}\n                 var data={\n                  \"#writerId\":\"#\"+item.witer_id,\n                  image:ProfileImage(item.writer_profile),\n                  writerName:item.writer_name,\n                  email:item.writer_email,\n                  status:<span className={item.writer_account_status == \"0\"?\"badge badge-danger\":\"badge badge-primary\"}>{item.writer_account_status == \"0\"?\"deactivated\":\"Active\"}</span>,\n                  writercategory:item.writer_category,\n                  Action:Buttons(item.witer_id,item.writer_name,item.writer_email,checkes(item.writer_account_status))\n                 }\n\n                 sortedItems.push(data);\n            })\n          }\n\n\n          setWriter(sortedItems);\n      }\n      const checkes=(status)=>{\n        return status == \"0\"?false:true;\n      }\n\n    //load writers\n\n      useEffect(()=>{\n         LoadCategories();\n         LoadWriters();\n      },[]);\n\n\n    const [edit,setEdit] = useState(false);\n\n    const handleClose = () => {setShow(false);setEdit(false)};\n    const handleShow = () => setShow(true);\n\n    const BlockUserPermanet=(id,username)=>{\n        swal(\"You Are About To Permanently Block \"+username+\"!?\", {\n            buttons: {\n              cancel: \"Dont Block!\",\n              delete: {\n                text: \"Block User\",\n                value: \"delete\",\n              },\n             \n            },\n          })\n          .then(async (value) => {\n            switch (value) {\n           \n             \n           \n              case \"delete\":\n                  const result = await ApiRequest.BlockUser(id);\n                  if(result.data == true){\n                swal(`${username}`, \"Deleted Succesfully\", \"success\");\n                LoadWriters();\n                  }\n                break;\n           \n              default:\n                swal(\"Process Canceled Succesfully!\");\n            }\n          });\n    }\n\n    const DisableUser =(id,username)=>{\n      swal(\"\",\"Unblock \"+username+\"!?\",\"warning\", {\n        buttons: {\n          cancel: \"Cancel!\",\n          delete: {\n            text: \"Unblock User\",\n            value: \"unblock\",\n          },\n         \n        },\n      })\n      .then(async (value) => {\n        switch (value) {\n       \n         \n       \n          case \"unblock\":\n            const result = await ApiRequest.unblockUser(id);\n            \n           if(result.data == true){\n            swal(`${username}`, \"unblocked Succesfully\", \"success\");\n            LoadWriters();\n           }\n            break;\n       \n          default:\n            swal(\"Process Canceled Succesfully!\");\n        }\n      });\n    }\n\n    const EditUser=(id,checkeds,username,email)=>{\n         setUserId(id);\n         setUserName(username);\n         setCheck(checkeds);\n         setEdit(true)\n         setEmail(email);\n    }\n    const Back=()=>{\n      setUserId('')\n      setEdit(false);\n    }\n\n    const CreateNewWriter = async ()=>{\n      \n        setShowLoader(true);\n            const test = FormValidation.RegisterForm(email,username,password,ConfirmPassword,country,address,phone,category);\n            if(test == true){\n                 const result = await ApiRequest.RegisterWriter(email,username,password,ConfirmPassword,country,address,phone,category);\n                  if(result.data == true){\n                    notify('Writer added Succesfully');\n                    setShowLoader(false);\n                    LoadWriters();\n             setEmail('');\n             setPassword('');\n             setAdress('');\n             setPassword('');\n             setConfirmPassword('');\n             setCountry('');\n             setPhone('');\n             setUsername('');\n                  }else{\n                       notify(result.data);\n                       setShowLoader(false);\n                       setEmail('');\n                        setPassword('');\n                        setAdress('');\n                        setPassword('');\n                          setConfirmPassword('');\n                        setCountry('');\n                     setPhone('');\n                     setUsername('');\n                  }\n\n            }else{\n\n       notify(test);\n       setTimeout(() => {\n             setShowLoader(false);\n            setEmail('');\n             setPassword('');\n             setAdress('');\n             setPassword('');\n             setConfirmPassword('');\n             setCountry('');\n             setPhone('');\n             setUsername('');\n       }, 2000);\n      }\n    }\n\n\n    const Buttons =(id,username,email,checkeds)=>{\n     return <> \n          <button style={{color:\"blue\"}} onClick={()=>EditUser(id,checkeds,username,email)} className=\"fa fa-edit btn\"></button> \n          <button  onClick={()=>checkeds==true?BlockUserPermanet(id,username):DisableUser(id,username)} className={checkeds?\"fa fa-unlock btn btn-info\":\"fa fa-lock btn btn-warning\"}></button> \n           \n      </>\n        }\n    \n    const columns = [\n        {\n          dataField: \"#writerId\",\n          text: \"WriterId\",\n         \n        },\n        {\n          dataField: \"image\",\n          text: \"Profile\",\n        \n          sort: true\n        },\n        {\n          dataField: \"writerName\",\n          text: \"Username\",\n       \n        },\n        {\n          dataField: \"email\",\n          text: \"email\",\n        \n        },\n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n        {\n          \n            dataField: \"writercategory\",\n            text: \"writer Category\",\n          \n          \n        },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n\n      const products = [\n           { \n               \"#writerId\":\"#9988\",\n                image:\"image\",\n                writerName:\"Airo\",\n                email:\"airotony8@gmail.com\",\n                status:<span className=\"badge badge-primary\">cancelled</span>,\n                writercategory:\"Litrature\",\n                Action:Buttons(1,\"Linet\")\n         },\n         { \n            \"#writerId\":\"#9988\",\n             image:\"image\",\n             writerName:\"Airo\",\n             email:\"airotony8@gmail.com\",\n             status:<span className=\"badge badge-primary\">cancelled</span>,\n             writercategory:\"Litrature\",\n             Action:Buttons(2,\"Brayo\")\n      },\n      { \n        \"#writerId\":\"#9988\",\n         image:\"image\",\n         writerName:\"Airo\",\n         email:\"airotony8@gmail.com\",\n         status:<span className=\"badge badge-primary\">cancelled</span>,\n         writercategory:\"Litrature\",\n         Action:Buttons(3,\"Kevo\")\n  },\n      \n      ];\n    \n    return <>\n     {edit && <Profile\n      category={categories}\n      existingCategories={initialSelected}\n      back={Back}\n      DisableUser={DisableUser}\n      BlockUserPermanet={BlockUserPermanet}\n      id={userId}\n      username={userName}\n      checkeds={checkd}\n      email={email}\n      socket={socket}\n      />}\n      {/*<CategoryEdit data={options} selected={category} setSelected={setCategory}/>*/}\n     <ModalCard \n       content={<NewWriter \n        isShowLoader={isShowLoader}\n         email={email}\n         setEmail={setEmail}\n         password={password}\n         setPassword={setPassword}\n         ConfirmPassword={ConfirmPassword}\n         setConfirmPassword={setConfirmPassword}\n         country={country}\n         setCountry={setCountry}\n         address={address}\n         setAdress={setAdress}\n         phone={phone}\n         setPhone={setPhone}\n         category={categories}\n         setCategory={setCategory}\n         username={username}\n         setUsername={setUsername}\n         setSelected={setCategory}\n        />}\n        Show={show}\n        Close={handleClose}\n       Save={CreateNewWriter} ButtonName={\"Create New Writer\"}\n      />\n      {!edit && <> <div style={{height:\"60px\",display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}} className=\"card\">\n            <h4 style={{marginTop:\"10px\",marginLeft:\"20px\"}}><i>CREATE NEW USER</i></h4>\n             <button onClick={()=>handleShow()} style={{width:\"40px\",height:\"40px\",marginRight:\"10px\",marginTop:\"7px\"}} className=\"btn btn-primary fa fa-plus\"></button>\n        </div>\n      <div className=\"container card\">\n       <TableCard products={writers} columns={columns} title={\"Writers\"}/>\n       </div></>}\n       \n       <ToastContainer />\n    </>\n}\n\nexport default Writers;"]},"metadata":{},"sourceType":"module"}