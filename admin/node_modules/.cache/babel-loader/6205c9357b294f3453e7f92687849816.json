{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tony/Documents/Projects/react/Writer/admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import Loader from\"react-loader-spinner\";import{toast,ToastContainer}from\"react-toastify\";import ApiRequest from\"src/Api/Data/requestApi\";import TableCard from\"src/views/table/TableCard\";import SingeleTask from\"../../Task/TaskDetails/SingleTaskDetails\";import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PendingPayments=function PendingPayments(){var notify=function notify(data){return toast(data);};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isShowSingleTask=_useState2[0],setIsShowSingleTask=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),taskId=_useState4[0],setTaskId=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),markedOrders=_useState6[0],setMarkedOrders=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),unpaidTask=_useState8[0],setUnpaidTask=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isShowLoader=_useState10[0],setShowLoader=_useState10[1];var ShowSingleTasks=function ShowSingleTasks(taskid){setTaskId(taskid);setIsShowSingleTask(true);};var CloseSingleTask=function CloseSingleTask(){setTaskId('');// setIsShowInvoice(false);\nsetIsShowSingleTask(false);};var SubmitMultipleMarked=function SubmitMultipleMarked(){setShowLoader(true);console.log(markedOrders);if(markedOrders.length>0){markedOrders.forEach(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(element){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ApiRequest.markTaskPaid(element.invoice,element.taskId);case 2:result=_context.sent;notify(result.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());getUnpaidTask();}else{toast('Selectem Payments first');setShowLoader(false);}//console.log(markedOrders)\n};var SubmitSingle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,invoice){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:/* let data = {\n         invoice:invoice,\n         taskId:id\n      }*/setShowLoader(true);if(!(id===\"\"||invoice===\"\")){_context2.next=4;break;}notify('Failed');return _context2.abrupt(\"return\");case 4:_context2.next=6;return ApiRequest.markTaskPaid(invoice,id);case 6:result=_context2.sent;notify(result.data);getUnpaidTask();// alert(result.data)\nsetShowLoader(false);//console.log(data);\ncase 10:case\"end\":return _context2.stop();}}},_callee2);}));return function SubmitSingle(_x2,_x3){return _ref2.apply(this,arguments);};}();var HandleSelected=function HandleSelected(id,invoice,event){if(event.target.checked){var newMarked=markedOrders;console.log(markedOrders);// console.log(id+\"\"+invoice)\nnewMarked.push({invoice:invoice,taskId:id});//[i][e.target.name] = e.target.value;\nsetMarkedOrders(newMarked);}else{var newData=[];markedOrders.forEach(function(element){if(element.taskId!==id){newData.push({invoice:element.invoice,taskId:element.taskId});}});//let newMarke = markedOrders.filter((item)=>item.taskId !== id);\n//setMarkedOrders([]);\n//console.log(newMarke)\n//newMarked= newMarked.filter((item)=>item.taskId !== id);\n// newMarked.push({invoice:invoice,taskId:id})\nsetMarkedOrders(newData);};};var Button=function Button(id,invoice){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{style:{marginRight:\"5px\"},onClick:function onClick(){return SubmitSingle(id,invoice);},className:\"btn btn-info\",children:\"Mark Paid\"}),/*#__PURE__*/_jsx(\"button\",{style:{color:\"#000\"},onClick:function onClick(){return ShowSingleTasks(id);},className:\"btn btn-success fa fa-history\"})]});};var getUnpaidTask=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var result,organisedData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return ApiRequest.getPendingPayments();case 2:result=_context3.sent;organisedData=[];result.data.forEach(function(element){var data={//check:<input onChange={(e)=>HandleSelected(element.task_id,element.Invoice,e)} type=\"checkbox\"/>,\n\"#taskId\":element.task_id,invoiceId:element.Invoice,email:element.writer_email,status:/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-warning\",children:element.payment_status}),pdate:element.end_date,amount:\"Ksh \"+element.payment_expected_amount,Action:Button(element.task_id,element.Invoice)};organisedData.push(data);});setUnpaidTask(organisedData);//  organisedData=[];\n// console.log(result);\ncase 6:case\"end\":return _context3.stop();}}},_callee3);}));return function getUnpaidTask(){return _ref3.apply(this,arguments);};}();useEffect(function(){getUnpaidTask();},[]);var columns=[//{\n//  dataField: \"check\",\n// text: <span className=\"fa fa-check badge badge-success\"></span>,\n//},\n{dataField:\"#taskId\",text:\"#taskId\"},{dataField:\"invoiceId\",text:\"#Invoice Id\"},{dataField:\"email\",text:\"Writer email\"},{dataField:\"status\",text:\"status\"},{dataField:\"pdate\",text:\"Expected-Day-Pay\"},{dataField:\"amount\",text:\"Amount to be paid\"},{dataField:\"Action\",text:\"Action\"}];return/*#__PURE__*/_jsxs(_Fragment,{children:[!isShowSingleTask&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return SubmitMultipleMarked();},style:{float:\"right\",marginBottom:\"5px\"},className:\"btn btn-warning\",children:\"Submit All Selected As Paid\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container card\",children:/*#__PURE__*/_jsx(TableCard,{products:unpaidTask,columns:columns,title:\"PENDING PAYMENTS\"})})]}),isShowSingleTask&&/*#__PURE__*/_jsx(SingeleTask,{id:taskId,closeTask:CloseSingleTask,isAccept:false}),/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"block\",cursor:\"pointer\",zIndex:99,position:\"absolute\",top:\"40%\",left:'50%',right:\"40%\"},children:isShowLoader&&/*#__PURE__*/_jsx(Loader,{type:\"Circles\",color:\"#00BFFF\",height:100,width:100})})]});};export default PendingPayments;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/admin/src/views/base/Payments/pending/pendingPayments.js"],"names":["useEffect","useState","Loader","toast","ToastContainer","ApiRequest","TableCard","SingeleTask","PendingPayments","notify","data","isShowSingleTask","setIsShowSingleTask","taskId","setTaskId","markedOrders","setMarkedOrders","unpaidTask","setUnpaidTask","isShowLoader","setShowLoader","ShowSingleTasks","taskid","CloseSingleTask","SubmitMultipleMarked","console","log","length","forEach","element","markTaskPaid","invoice","result","getUnpaidTask","SubmitSingle","id","HandleSelected","event","target","checked","newMarked","push","newData","Button","marginRight","color","getPendingPayments","organisedData","task_id","invoiceId","Invoice","email","writer_email","status","payment_status","pdate","end_date","amount","payment_expected_amount","Action","columns","dataField","text","float","marginBottom","display","cursor","zIndex","position","top","left","right"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport ApiRequest from \"src/Api/Data/requestApi\";\nimport TableCard from \"src/views/table/TableCard\";\nimport SingeleTask from \"../../Task/TaskDetails/SingleTaskDetails\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst PendingPayments= ()=>{\n\n  const notify = (data) => toast(data);\n  const [isShowSingleTask,setIsShowSingleTask]=useState(false);\n  const [taskId,setTaskId]=useState('');\n  const [markedOrders,setMarkedOrders] = useState([]);\n  const [unpaidTask,setUnpaidTask] = useState([]);\n  const [isShowLoader,setShowLoader] = useState(false);\n\n  const ShowSingleTasks =taskid=>{\n    setTaskId(taskid);\n  \n   setIsShowSingleTask(true);\n  }\n  const CloseSingleTask=()=>{\n    setTaskId('');\n    // setIsShowInvoice(false);\n     setIsShowSingleTask(false);\n  }\n  const SubmitMultipleMarked = ()=>{\n    setShowLoader(true);\n   console.log(markedOrders)\n      if(markedOrders.length > 0){\n             markedOrders.forEach(async (element) => {\n              //invoice:invoice,taskId:id\n              const result = await ApiRequest.markTaskPaid(element.invoice,element.taskId);\n              notify(result.data);\n             });\n             getUnpaidTask();\n      }else{\n        toast('Selectem Payments first');\n        setShowLoader(false);\n      }\n    //console.log(markedOrders)\n  }\n\n  const SubmitSingle=async (id,invoice)=>{\n     /* let data = {\n         invoice:invoice,\n         taskId:id\n      }*/\n      setShowLoader(true);\n   if(id === \"\" || invoice === \"\"){\n      notify('Failed')\n     return\n   }\n    \n      const result = await ApiRequest.markTaskPaid(invoice,id);\n      notify(result.data);\n      getUnpaidTask();\n     // alert(result.data)\n      setShowLoader(false);\n      //console.log(data);\n  }\n  const HandleSelected =(id,invoice,event)=>{\n      if(event.target.checked){\n        let newMarked = markedOrders;\n        console.log(markedOrders)\n       // console.log(id+\"\"+invoice)\n        newMarked.push({invoice:invoice,taskId:id})\n        //[i][e.target.name] = e.target.value;\n       setMarkedOrders(newMarked);\n\n       \n      }else {\n          var newData =[];\n        markedOrders.forEach((element) => {\n               if(element.taskId !== id){\n                   newData.push({invoice:element.invoice,taskId:element.taskId})\n               }\n\n        });\n        //let newMarke = markedOrders.filter((item)=>item.taskId !== id);\n        //setMarkedOrders([]);\n        //console.log(newMarke)\n       //newMarked= newMarked.filter((item)=>item.taskId !== id);\n       // newMarked.push({invoice:invoice,taskId:id})\n      setMarkedOrders(newData);\n        \n      };\n  }\n\n  const Button=(id,invoice)=>{\n    return <>\n        <button style={{marginRight:\"5px\"}} onClick={()=>SubmitSingle(id,invoice)} className=\"btn btn-info\">Mark Paid</button>\n    <button style={{\n             \n              color:\"#000\",\n            \n  }} onClick={()=>ShowSingleTasks(id)} className=\"btn btn-success fa fa-history\"></button>\n  </>\n  }\n\n const getUnpaidTask = async ()=>{\n        const result = await ApiRequest.getPendingPayments();\n        const organisedData=[];\n        result.data.forEach(element => {\n            var data={\n              //check:<input onChange={(e)=>HandleSelected(element.task_id,element.Invoice,e)} type=\"checkbox\"/>,\n              \"#taskId\":element.task_id,\n              invoiceId:element.Invoice,\n              email:element.writer_email,\n              status:<span className=\"badge badge-warning\">{element.payment_status}</span>,\n              pdate:element.end_date,\n              amount:\"Ksh \"+element.payment_expected_amount,\n              Action:Button(element.task_id,element.Invoice)\n             }\n\n             organisedData.push(data);\n             \n        });\n\n        setUnpaidTask(organisedData);\n\n      //  organisedData=[];\n       // console.log(result);\n } \n\n useEffect(()=>{\n     getUnpaidTask();\n },[]);\n    const columns = [\n      //{\n      //  dataField: \"check\",\n       // text: <span className=\"fa fa-check badge badge-success\"></span>,\n       \n      //},\n        {\n          dataField: \"#taskId\",\n          text: \"#taskId\",\n         \n        },\n      \n        {\n          dataField: \"invoiceId\",\n          text: \"#Invoice Id\",\n       \n        },\n        {\n          dataField: \"email\",\n          text: \"Writer email\",\n        \n        },\n        {\n          \n            dataField: \"status\",\n            text: \"status\",\n          \n          \n        },\n       \n        {\n          \n          dataField: \"pdate\",\n          text: \"Expected-Day-Pay\",\n        },\n        {\n          \n          dataField: \"amount\",\n          text: \"Amount to be paid\",\n        },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n  \n    return <>\n            {!isShowSingleTask &&<>\n            <button onClick={()=>SubmitMultipleMarked()} style={{float:\"right\",marginBottom:\"5px\"}} className=\"btn btn-warning\">Submit All Selected As Paid</button>\n             <div className=\"container card\">\n              \n             <TableCard \n             products={unpaidTask}\n             columns={columns}\n              title={\"PENDING PAYMENTS\"}\n             />\n             </div></>}\n\n            {isShowSingleTask && <SingeleTask id={taskId} closeTask={CloseSingleTask} isAccept={false}/>}\n\n            <ToastContainer />\n            <div style={{\n                  display:\"block\",\n                  cursor:\"pointer\",\n                   zIndex:99,\n                  position:\"absolute\",\n                  top:\"40%\",\n                  left:'50%',\n                  right:\"40%\",\n                  \n             }}>\n               \n                 \n                {isShowLoader &&  <Loader\n                   type=\"Circles\"\n                   color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n      \n                  />}\n               \n             </div>\n          </>\n          \n}\nexport default PendingPayments;"]},"metadata":{},"sourceType":"module"}