{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import SingeleTask from\"../../NewTask/taskDetails/singleTaskDetails\";//import TableCard from \"../../Table/tableCard\";\nimport TableCard from'../../../table/TableCard';import ApiRequest from\"src/Api/Requests/Apirequest\";import swal from\"sweetalert\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AssignedOrders=function AssignedOrders(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSingleTaskOpen=_useState2[0],setShowSingleTask=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),singleTaskId=_useState4[0],setSingleTaskId=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),assignedTask=_useState6[0],setAssignedTask=_useState6[1];var HandleAssignedTask=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,organisedData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ApiRequest.getAssignedTask();case 2:result=_context.sent;organisedData=[];// console.log(result.data)\nresult.data.forEach(function(element){var dat={\"#order\":element.task_id,\"OrderName\":element.task_name,\"Title\":element.task_title,\"status\":/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-danger\",children:element.task_status}),\"created\":element.task_created_date,\"deadline\":element.task_deadline,\"Service\":element.task_service,\"page\":element.pages,\"Action\":Buttons(element.task_id)};organisedData.push(dat);});setAssignedTask(organisedData);case 6:case\"end\":return _context.stop();}}},_callee);}));return function HandleAssignedTask(){return _ref.apply(this,arguments);};}();useEffect(function(){HandleAssignedTask();},[]);var handleShowSingleTask=function handleShowSingleTask(id){setSingleTaskId(id);setShowSingleTask(true);};var handleCloseTask=function handleCloseTask(){setSingleTaskId('');setShowSingleTask(false);};var ViewItemDetails=function ViewItemDetails(id){handleShowSingleTask(id);//alert(id);\n};var Reject=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return ApiRequest.RejectTask(id);case 2:result=_context2.sent;if(result.data===\"done\"){swal('success','Task Rejected succesfully','success');HandleAssignedTask();}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function Reject(_x){return _ref2.apply(this,arguments);};}();var Accept=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return ApiRequest.AcceptTask(id);case 2:result=_context3.sent;if(result.data===\"done\"){swal('success','Task accepted succesfully','success');HandleAssignedTask();}case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function Accept(_x2){return _ref3.apply(this,arguments);};}();var RejectOrder=function RejectOrder(id){swal(\"Are You Sure To Reject This Task!?\",{buttons:{cancel:\"Dont Proceed!\",delete:{text:\"Reject Task\",value:\"reasign\"}}}).then(function(value){switch(value){case\"reasign\":Reject(id);// assignTask(user_id,task_id)\n//swal(`task`, \"Re-assigned Successfully\", \"success\");\nbreak;default:swal(\"Process Canceled Succesfully!\");}});//alert(id);\n};var acceptTask=function acceptTask(id){swal(\"Are You Sure To Accept This Task!?\",{buttons:{cancel:\"Dont Proceed!\",delete:{text:\"Accept Task\",value:\"reasign\"}}}).then(function(value){switch(value){case\"reasign\":Accept(id);// assignTask(user_id,task_id)\n//swal(`task`, \"Re-assigned Successfully\", \"success\");\nbreak;default:swal(\"Process Canceled Succesfully!\");}});};var Buttons=function Buttons(Ids){// alert(id)\nreturn/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return RejectOrder(Ids);},children:\"Reject\"}),\"\\xA0\",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info\",onClick:function onClick(){return ViewItemDetails(Ids);},children:\"Details\"})]});};var columns=[{dataField:'#order',text:'#order'},{dataField:'OrderName',text:'ordername'},{dataField:'Title',text:'title'},{dataField:'status',text:'status'},{dataField:'created',text:'created'},{dataField:'deadline',text:'deadline'},{dataField:'Service',text:'service'},{dataField:'page',text:'page'},{dataField:'Action',text:'action'}];return/*#__PURE__*/_jsxs(React.Fragment,{children:[!isSingleTaskOpen&&/*#__PURE__*/_jsx(TableCard,{title:\"assigned Orders\",columns:columns,products:assignedTask}),isSingleTaskOpen&&/*#__PURE__*/_jsx(SingeleTask,{acceptTask:acceptTask,closeTask:handleCloseTask,id:singleTaskId})]});};export default AssignedOrders;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/assigned/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","swal","AssignedOrders","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","assignedTask","setAssignedTask","HandleAssignedTask","getAssignedTask","result","organisedData","data","forEach","element","dat","task_id","task_name","task_title","task_status","task_created_date","task_deadline","task_service","pages","Buttons","push","handleShowSingleTask","id","handleCloseTask","ViewItemDetails","Reject","RejectTask","Accept","AcceptTask","RejectOrder","buttons","cancel","delete","text","value","then","acceptTask","Ids","columns","dataField"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\n//import TableCard from \"../../Table/tableCard\";\nimport TableCard from '../../../table/TableCard';\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport swal from \"sweetalert\";\n\nconst AssignedOrders = ()=>{\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n\n    const [assignedTask,setAssignedTask] = useState([]);\n\n\n    const HandleAssignedTask = async ()=>{\n        const result = await ApiRequest.getAssignedTask();\n          var organisedData = [];\n         // console.log(result.data)\n        result.data.forEach(element => {\n             var dat ={\n                    \"#order\": element.task_id,\n                    \"OrderName\":element.task_name,\n                    \"Title\": element.task_title,\n                    \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                    \"created\": element.task_created_date,\n                    \"deadline\": element.task_deadline,\n                    \"Service\": element.task_service,\n                    \"page\": element.pages,\n                    \"Action\": Buttons(element.task_id)\n                 }\n\n                 organisedData.push(dat);\n             \n        });\n\n        setAssignedTask(organisedData);\n\n       \n    }\n    \n    useEffect(()=>{\n      HandleAssignedTask();\n    },[]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n const ViewItemDetails =(id)=>{\n    handleShowSingleTask(id)\n    //alert(id);\n}\nconst Reject=async (id)=>{\n    const result = await ApiRequest.RejectTask(id);\n    if(result.data === \"done\"){\n        swal('success','Task Rejected succesfully','success');\n        HandleAssignedTask();\n    }\n\n}\n\nconst Accept = async (id)=>{\n     const result = await ApiRequest.AcceptTask(id);\n\n     if(result.data === \"done\"){\n         swal('success','Task accepted succesfully','success');\n         HandleAssignedTask();\n     }\n}\n\nconst RejectOrder = (id)=>{\n\n    swal(`Are You Sure To Reject This Task!?`, {\n        buttons: {\n          cancel: \"Dont Proceed!\",\n          delete: {\n            text: \"Reject Task\",\n            value: \"reasign\",\n          },\n         \n        },\n      })\n      .then((value) => {\n        switch (value) {\n       \n         \n       \n          case \"reasign\":\n              Reject(id);\n              // assignTask(user_id,task_id)\n            //swal(`task`, \"Re-assigned Successfully\", \"success\");\n            break;\n       \n          default:\n            swal(\"Process Canceled Succesfully!\");\n        }\n      });\n    //alert(id);\n}\n\nconst acceptTask = (id)=>{\n    swal(`Are You Sure To Accept This Task!?`, {\n        buttons: {\n          cancel: \"Dont Proceed!\",\n          delete: {\n            text: \"Accept Task\",\n            value: \"reasign\",\n          },\n         \n        },\n      })\n      .then((value) => {\n        switch (value) {\n       \n         \n       \n          case \"reasign\":\n              Accept(id)\n              // assignTask(user_id,task_id)\n            //swal(`task`, \"Re-assigned Successfully\", \"success\");\n            break;\n       \n          default:\n            swal(\"Process Canceled Succesfully!\");\n        }\n      });\n}\n\nconst Buttons =(Ids)=>{\n   // alert(id)\n    return <React.Fragment>\n         <button className=\"btn btn-danger\" onClick={()=>RejectOrder(Ids)}>Reject</button>&nbsp;\n         <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(Ids)}>Details</button>\n    </React.Fragment>\n}\n\n\n\n\n const columns = [\n    \n        {\n            dataField: '#order',\n           text: '#order',\n        },\n        {\n            dataField: 'OrderName',\n           text: 'ordername',\n        },\n        {\n            dataField: 'Title',\n           text: 'title',\n        },\n        {\n            dataField: 'status',\n           text: 'status',\n        },\n        {\n            dataField: 'created',\n           text: 'created',\n        },\n        {\n            dataField: 'deadline',\n           text: 'deadline',\n        },\n        {\n            dataField: 'Service',\n           text: 'service',\n        },\n        {\n            dataField: 'page',\n           text: 'page',\n        },\n        \n        {\n            dataField: 'Action',\n           text: 'action',\n\n        },\n    \n ]\n\n\nreturn <React.Fragment>\n{!isSingleTaskOpen && <TableCard title={\"assigned Orders\"} columns={columns} products={assignedTask}/>}\n{isSingleTaskOpen && <SingeleTask acceptTask={acceptTask} closeTask={handleCloseTask} id={singleTaskId}/>}\n</React.Fragment> \n}\nexport default AssignedOrders;"]},"metadata":{},"sourceType":"module"}