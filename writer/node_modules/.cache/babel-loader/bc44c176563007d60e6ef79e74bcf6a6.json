{"ast":null,"code":"import _toConsumableArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownMssg.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CBadge, CDropdown, CDropdownItem, CDropdownMenu, CDropdownToggle, CImg } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ChatBox from 'src/views/ChatBox/ChatBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar TheHeaderDropdownMssg = function TheHeaderDropdownMssg(_ref) {\n  _s();\n\n  var socket = _ref.socket,\n      state = _ref.state;\n\n  var notify = function notify(data) {\n    return toast(data);\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      open = _useState2[0],\n      setOpen = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskid = _useState6[0],\n      setTaskid = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newMessage = _useState8[0],\n      setNewMessage = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      itemsCount = _useState10[0],\n      setItemCount = _useState10[1];\n\n  var Open = function Open(mail, taskid) {\n    setTaskid(taskid);\n    setEmail(mail);\n    setOpen(!open);\n    var lists = newMessage.filter(function (x) {\n      return x.task_id != taskid;\n    }); // console.log(lists)\n\n    setNewMessage(lists);\n    setTimeout(function () {\n      // Count()\n      var legth = lists.length;\n      setItemCount(legth);\n    }, 1200);\n  };\n\n  var notifY = function notifY() {\n    if (state) {\n      socket.on('newMessage', function (message) {\n        //console.log(message);\n        notify('you have a new message from ' + message.username + \"...\" + message.message.substring(0, 100)); // setNewMessage([...newMessage,message]);\n        //alert(test)\n      });\n    }\n  };\n\n  useEffect(function () {\n    notifY();\n  }, []);\n  useEffect(function () {\n    notifY();\n  }, []);\n\n  var Count = function Count() {\n    var legth = newMessage.length;\n    setItemCount(legth + 1);\n  };\n\n  if (state) {\n    socket.on('newMessage', function (message) {\n      //console.log(message);\n      //clearTimeout(Alert);\n      //Alert(message)\n      var found = newMessage.some(function (item) {\n        return item.task_id === message.task_id;\n      });\n\n      if (!found) {\n        setNewMessage(function (newMessage) {\n          return [].concat(_toConsumableArray(newMessage), [message]);\n        });\n      }\n\n      setTimeout(function () {\n        Count();\n      }, 1200);\n    }, []);\n  }\n  /*\n     if(state){\n      socket.on('newMessage',(message)=>{\n       console.log(message);\n          notify('you have a new message from '+message.username+\"...\"+message.message.substring(0, 100));\n        //alert(test)\n      })\n     }*/\n  //const itemsCount = 4\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CDropdown, {\n      inNav: true,\n      className: \"c-header-nav-item mx-2\",\n      direction: \"down\",\n      children: [/*#__PURE__*/_jsxDEV(CDropdownToggle, {\n        className: \"c-header-nav-link\",\n        caret: false,\n        children: [/*#__PURE__*/_jsxDEV(CIcon, {\n          name: \"cil-envelope-open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(CBadge, {\n          shape: \"pill\",\n          color: \"info\",\n          children: itemsCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 43\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(CDropdownMenu, {\n        className: \"pt-0\",\n        placement: \"bottom-end\",\n        children: [/*#__PURE__*/_jsxDEV(CDropdownItem, {\n          header: true,\n          tag: \"div\",\n          color: \"light\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"You have \", itemsCount, \" messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, _this), newMessage.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(CDropdownItem, {\n              onClick: function onClick() {\n                return Open(item.sender_id, item.task_id);\n              },\n              href: \"#\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pt-3 mr-3 float-left\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"c-avatar\",\n                    children: [/*#__PURE__*/_jsxDEV(CImg, {\n                      style: {\n                        width: \"40px\",\n                        height: \"40px\",\n                        borderRadius: \"20px\"\n                      },\n                      src: item.Imageurl,\n                      className: \"c-avatar-img\",\n                      alt: \"admin@bootstrapmaster.com\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 17\n                    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"c-avatar-status bg-warning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 17\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 15\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: item.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 15\n                  }, _this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted float-right mt-1\",\n                    children: \"5 minutes ago\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 15\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-truncate font-weight-bold\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"small text-muted text-truncate\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 15\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 13\n                }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 13\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 11\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 20\n            }, _this)\n          }, void 0, false);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, _this), open && /*#__PURE__*/_jsxDEV(ChatBox, {\n      open: open,\n      SetOpen: Open,\n      email: email,\n      socket: socket,\n      taskid: taskid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 14\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(TheHeaderDropdownMssg, \"vWFqvfvuxs91FnbsvYM2t/CE+hM=\");\n\n_c = TheHeaderDropdownMssg;\nexport default TheHeaderDropdownMssg;\n\nvar _c;\n\n$RefreshReg$(_c, \"TheHeaderDropdownMssg\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownMssg.js"],"names":["React","useEffect","useState","CBadge","CDropdown","CDropdownItem","CDropdownMenu","CDropdownToggle","CImg","CIcon","ToastContainer","toast","ChatBox","TheHeaderDropdownMssg","socket","state","notify","data","open","setOpen","email","setEmail","taskid","setTaskid","newMessage","setNewMessage","itemsCount","setItemCount","Open","mail","lists","filter","x","task_id","setTimeout","legth","length","notifY","on","message","username","substring","Count","found","some","item","map","sender_id","width","height","borderRadius","Imageurl"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ChatBox from 'src/views/ChatBox/ChatBox';\n\nconst TheHeaderDropdownMssg = ({socket,state}) => {\n  const notify = (data) => toast(data);\n  \n\n  const [open,setOpen]=useState(false);\n  const [email,setEmail] = useState('');\n  const [taskid,setTaskid] =useState('');\n  const [newMessage,setNewMessage] = useState([]);\n  const [itemsCount,setItemCount] = useState(0);\n  const Open=(mail,taskid)=>{\n    setTaskid(taskid);\n    setEmail(mail);\n    setOpen(!open);\n\n    var lists = newMessage.filter(x => {\n      return x.task_id != taskid;\n    })\n\n   // console.log(lists)\n    setNewMessage(lists);\n\n    setTimeout(() => {\n     // Count()\n     var legth = lists.length;\n\n     setItemCount(legth);\n   }, 1200);\n   }\n\n\n   const notifY=()=>{\n    if(state){\n     \n      socket.on('newMessage',(message)=>{\n        //console.log(message);\n          notify('you have a new message from '+message.username+\"...\"+message.message.substring(0, 100));\n  \n         // setNewMessage([...newMessage,message]);\n        //alert(test)\n      })\n     }\n   }\n\n   useEffect(()=>{\n    notifY();\n   },[]);\n\n\n   useEffect(()=>{\n     notifY();\n   },[]);\n   const Count = ()=>{\n    var legth = newMessage.length;\n\n  setItemCount(legth +1);\n}\n\nif(state){\n  socket.on('newMessage',(message)=>{\n    //console.log(message);\n        //clearTimeout(Alert);\n        //Alert(message)\n\n        const found = newMessage.some(item=>item.task_id === message.task_id);\n        if(!found){\n          setNewMessage((newMessage)=>[...newMessage,message]);\n        }\n        setTimeout(() => {\n           Count()\n        }, 1200);\n\n       \n    \n  },[]);\n }\n/*\n   if(state){\n    socket.on('newMessage',(message)=>{\n     console.log(message);\n        notify('you have a new message from '+message.username+\"...\"+message.message.substring(0, 100));\n      //alert(test)\n    })\n   }*/\n  //const itemsCount = 4\n  return (\n    <>\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-envelope-open\" /><CBadge shape=\"pill\" color=\"info\">{itemsCount}</CBadge>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n        >\n          <strong>You have {itemsCount} messages</strong>\n        </CDropdownItem>\n      \n        {newMessage.map((item)=>{\n         return <>\n                   <CDropdownItem onClick={()=>Open(item.sender_id,item.task_id)} href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                 style={{width:\"40px\",height:\"40px\",borderRadius:\"20px\"}}\n                  src={item.Imageurl}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-warning\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">{item.username}</small>\n              <small className=\"text-muted float-right mt-1\">5 minutes ago</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\"></div>\n            <br/>\n            <div className=\"small text-muted text-truncate\">\n              <p>{item.message}</p>\n            </div>\n            <br/>\n          </div>\n        </CDropdownItem>\n                </>\n       })}\n       \n      </CDropdownMenu>\n    </CDropdown>\n    {open && <ChatBox\n    open={open}\n    SetOpen={Open}\n    email={email}\n    socket={socket}\n    taskid={taskid}\n   />}\n    </>\n  )\n}\n\nexport default TheHeaderDropdownMssg"]},"metadata":{},"sourceType":"module"}