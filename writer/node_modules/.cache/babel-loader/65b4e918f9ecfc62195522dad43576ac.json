{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/inprogress/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport swal from \"sweetalert\";\nimport ModalCard from \"../../Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar OrdersInProgress = function OrdersInProgress() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inprogress = _useState6[0],\n      setInprogress = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      profile = _useState10[0],\n      setProfile = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      show = _useState12[0],\n      setShow = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isShowLoader = _useState14[0],\n      setShowLoader = _useState14[1];\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var getTaskInprogress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, organisedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getOrdersInprogress();\n\n            case 2:\n              result = _context.sent;\n              console.log(result.data);\n              organisedData = [];\n              result.data.forEach(function (element) {\n                var dat = {\n                  \"#order\": element.task_id,\n                  \"OrderName\": element.task_name,\n                  \"Title\": element.task_title,\n                  \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge badge-danger\",\n                    children: element.task_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 35\n                  }, _this),\n                  \"Created\": element.task_created_date,\n                  \"Deadline\": element.task_deadline,\n                  \"Service\": element.task_service,\n                  \"Pages\": element.pages,\n                  \"Action\": Buttons(element.task_id)\n                };\n                organisedData.push(dat);\n              });\n              setInprogress(organisedData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTaskInprogress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  useEffect(function () {\n    getTaskInprogress();\n  }, []);\n\n  var HandleSubmitTask = function HandleSubmitTask(task_id) {\n    // alert(task_id);\n    setShow(true);\n  };\n\n  var ViewItemDetails = function ViewItemDetails(id) {\n    // alert(id);\n    handleShowSingleTask(id);\n  };\n\n  var CancelOrder = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return ApiRequest.cancelOrder(id);\n\n            case 2:\n              result = _context2.sent;\n\n              if (result.data == true) {\n                swal('success', 'Task canceled successfully', 'success');\n              } else {\n                swal('Error', 'Process failed', 'error');\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function CancelOrder(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var Buttons = function Buttons(id) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return HandleSubmitTask(id);\n        },\n        children: \"Submit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return CancelOrder(id);\n        },\n        children: \"cancel Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }, _this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          return ViewItemDetails(id);\n        },\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var Close = function Close() {\n    setShow(false);\n  };\n\n  var SubmitTask = function SubmitTask() {};\n\n  var Content = function Content() {\n    var HandleImage = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n        var file, reader;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //  unction  FileRead(event) {\n                file = event.target.files[0];\n                reader = new FileReader();\n\n                reader.onload = function (event) {\n                  var resul = event.target.result;\n                  setImage(resul); // setImage(file);\n\n                  setProfile(file);\n                };\n\n                reader.readAsDataURL(file);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function HandleImage(_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"exampleFormControlFile1\",\n            children: \"Click To Select Your Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: function onChange(e) {\n              return HandleImage(e);\n            },\n            class: \"form-control-file\",\n            id: \"exampleFormControlFile1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 3\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }, _this)\n    }, void 0, false);\n  };\n\n  var columns = [{\n    dataField: '#order',\n    text: '#order'\n  }, {\n    dataField: 'OrderName',\n    text: 'ordername'\n  }, {\n    dataField: 'Title',\n    text: 'title'\n  }, {\n    dataField: 'status',\n    text: 'status'\n  }, {\n    dataField: 'Created',\n    text: 'created'\n  }, {\n    dataField: 'Deadline',\n    text: 'deadline'\n  }, {\n    dataField: 'Service',\n    text: 'service'\n  }, {\n    dataField: 'Pages',\n    text: 'page'\n  }, {\n    dataField: 'Action',\n    text: 'action'\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isSingleTaskOpen && /*#__PURE__*/_jsxDEV(TableCard, {\n      title: \"Order in progress\",\n      columns: columns,\n      products: inprogress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      isAccept: false,\n      closeTask: handleCloseTask,\n      id: singleTaskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 22\n    }, _this), /*#__PURE__*/_jsxDEV(ModalCard, {\n      Close: Close,\n      content: Content(),\n      ButtonName: \"Submit Task\",\n      Show: show,\n      Save: SubmitTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 1\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 8\n  }, _this);\n};\n\n_s(OrdersInProgress, \"nBogkDOgZqmn/8ttQVMM4++4Heg=\");\n\n_c = OrdersInProgress;\nexport default OrdersInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersInProgress\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/inprogress/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","swal","ModalCard","OrdersInProgress","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","inprogress","setInprogress","image","setImage","profile","setProfile","show","setShow","isShowLoader","setShowLoader","handleShowSingleTask","id","getTaskInprogress","getOrdersInprogress","result","console","log","data","organisedData","forEach","element","dat","task_id","task_name","task_title","task_status","task_created_date","task_deadline","task_service","pages","Buttons","push","handleCloseTask","HandleSubmitTask","ViewItemDetails","CancelOrder","cancelOrder","Close","SubmitTask","Content","HandleImage","event","file","target","files","reader","FileReader","onload","resul","readAsDataURL","e","columns","dataField","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport swal from \"sweetalert\";\nimport ModalCard from \"../../Modal/Modal\";\n\nconst OrdersInProgress =()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [inprogress,setInprogress] = useState([]);\n    const [image,setImage] = useState('');\n    const [profile,setProfile] = useState('');\n\n    const [show, setShow] = useState(false);\n    const [isShowLoader,setShowLoader] = useState(false);\n\n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n\n    const getTaskInprogress =async ()=>{\n           const result = await ApiRequest.getOrdersInprogress();\n           console.log(result.data)\n            const organisedData =[];\n           result.data.forEach(element => {\n                    var dat ={\n                        \"#order\": element.task_id,\n                        \"OrderName\": element.task_name,\n                        \"Title\": element.task_title,\n                        \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                        \"Created\": element.task_created_date,\n                        \"Deadline\": element.task_deadline,\n                        \"Service\": element.task_service,\n                        \"Pages\": element.pages,\n                        \"Action\": Buttons(element.task_id)\n                    } \n                    \n                    organisedData.push(dat);\n           });\n\n           setInprogress(organisedData);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    useEffect(()=>{\n      getTaskInprogress();\n    },[]);\n    const HandleSubmitTask=(task_id)=>{\n     // alert(task_id);\n     setShow(true);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n  \n \n\nconst CancelOrder = async (id)=>{\n    const result = await ApiRequest.cancelOrder(id);\n     if(result.data == true){\n         swal('success','Task canceled successfully','success');\n     }else{\n        swal('Error','Process failed','error');\n     }\n}\n\nconst Buttons =(id)=>{\n    return <React.Fragment>\n        <button className=\"btn btn-danger\" onClick={()=>HandleSubmitTask(id)}>Submit Order</button>&nbsp;\n         <button className=\"btn btn-danger\" onClick={()=>CancelOrder(id)}>cancel Order</button>&nbsp;\n         <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(id)}>Details</button>\n    </React.Fragment>\n}\n\nconst Close=()=>{\n    setShow(false)\n  }\n  const SubmitTask=()=>{\n      \n  }\n\n  const Content=()=>{\n      \n\n    const HandleImage =async  (event)=>{\n\n      //  unction  FileRead(event) {\n            var file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = function(event) {\n            \n             const resul= event.target.result;\n        \n             setImage(resul);\n            // setImage(file);\n\n            setProfile(file);\n\n                \n             \n            };\n            reader.readAsDataURL(file);\n  \n    }\n\n    return <>\n             <form>\n  <div class=\"form-group\">\n      <label for=\"exampleFormControlFile1\">Click To Select Your Profile</label>\n       <input type=\"file\" onChange={(e)=>HandleImage(e)} class=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n   </div>\n    </form>\n          </>\n  }\n\n\nconst columns = [\n            {\n                dataField:'#order',\n                text: '#order',\n            },\n            {\n                dataField:'OrderName',\n                text: 'ordername',\n            },\n            {\n                dataField:'Title',\n                text: 'title',\n            },\n            {\n                dataField:'status',\n                text: 'status',\n            },\n            {\n                dataField:'Created',\n                text: 'created',\n            },\n            {\n                dataField:'Deadline',\n                text: 'deadline',\n            },\n            {\n                dataField:'Service',\n                text: 'service',\n            },\n            {\n                dataField:'Pages',\n                text: 'page',\n            },\n            \n            {\n                dataField:'Action',\n                text: 'action',\n\n            },\n\n           \n         \n        ]\n\nreturn <React.Fragment>\n{!isSingleTaskOpen && <TableCard title={\"Order in progress\"} columns={columns} products={inprogress}/>}\n{isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n\n<ModalCard \nClose={Close}\ncontent={Content()}\nButtonName={\"Submit Task\"}\nShow={show} \n Save={SubmitTask}\n/>\n\n</React.Fragment> \n}\n\nexport default OrdersInProgress;"]},"metadata":{},"sourceType":"module"}