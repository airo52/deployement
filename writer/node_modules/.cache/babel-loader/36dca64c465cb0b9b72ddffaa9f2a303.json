{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Axios from \"../config\";\n\nvar _require = require(\"../authThenticateToken\"),\n    Tokens = _require.Tokens,\n    UpdateToken = _require.UpdateToken; //import Axios from \"../config\";\n\n\nvar body = function body() {\n  return {\n    \"x-access-key\": Tokens().accessToken,\n    \"x-access-token\": Tokens().refreshToken\n  };\n};\n\nvar ApiRequest = {\n  DashBoardData: function () {\n    var _DashBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              endPoint = \"Dashboard\";\n              _context.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context.sent;\n\n              if (!(result.data == false)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context.sent;\n\n              if (!(data == true)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", Result);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", result);\n\n            case 17:\n              _context.next = 22;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    function DashBoardData() {\n      return _DashBoardData.apply(this, arguments);\n    }\n\n    return DashBoardData;\n  }(),\n  getAssignedTask: function () {\n    var _getAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              endPoint = \"assigned\";\n              _context2.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.data == false)) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context2.sent;\n\n              if (!(data == true)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context2.sent;\n              return _context2.abrupt(\"return\", Result);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", result);\n\n            case 17:\n              _context2.next = 22;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 19]]);\n    }));\n\n    function getAssignedTask() {\n      return _getAssignedTask.apply(this, arguments);\n    }\n\n    return getAssignedTask;\n  }(),\n  getSingleTaskFullDetails: function () {\n    var _getSingleTaskFullDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              endPoint = \"getSingleTaskDetails/\".concat(task_id); //user_id,task_id\n\n              _context3.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context3.sent;\n\n              if (!(result.data == false)) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context3.sent;\n\n              if (!(data == true)) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context3.sent;\n              return _context3.abrupt(\"return\", Result);\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              return _context3.abrupt(\"return\", result);\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              return _context3.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 19]]);\n    }));\n\n    function getSingleTaskFullDetails(_x) {\n      return _getSingleTaskFullDetails.apply(this, arguments);\n    }\n\n    return getSingleTaskFullDetails;\n  }(),\n  RejectTask: function () {\n    var _RejectTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              endPoint = \"RejectTask/\".concat(task_id); //user_id,task_id\n\n              _context4.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context4.sent;\n\n              if (!(result.data == false)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context4.sent;\n\n              if (!(data == true)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context4.sent;\n              return _context4.abrupt(\"return\", Result);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", result);\n\n            case 17:\n              _context4.next = 23;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n              return _context4.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 19]]);\n    }));\n\n    function RejectTask(_x2) {\n      return _RejectTask.apply(this, arguments);\n    }\n\n    return RejectTask;\n  }(),\n  AcceptTask: function () {\n    var _AcceptTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              endPoint = \"AcceptTask/\".concat(task_id); //user_id,task_id\n\n              _context5.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context5.sent;\n\n              if (!(result.data == false)) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context5.sent;\n\n              if (!(data == true)) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context5.sent;\n              return _context5.abrupt(\"return\", Result);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", result);\n\n            case 17:\n              _context5.next = 23;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n              return _context5.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19]]);\n    }));\n\n    function AcceptTask(_x3) {\n      return _AcceptTask.apply(this, arguments);\n    }\n\n    return AcceptTask;\n  }(),\n  getCompletedTask: function () {\n    var _getCompletedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              endPoint = \"completedTask\";\n              _context6.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context6.sent;\n\n              if (!(result.data == false)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context6.sent;\n\n              if (!(data == true)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context6.sent;\n              return _context6.abrupt(\"return\", Result);\n\n            case 14:\n              _context6.next = 17;\n              break;\n\n            case 16:\n              return _context6.abrupt(\"return\", result);\n\n            case 17:\n              _context6.next = 22;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](0);\n              console.log(_context6.t0);\n\n            case 22:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 19]]);\n    }));\n\n    function getCompletedTask() {\n      return _getCompletedTask.apply(this, arguments);\n    }\n\n    return getCompletedTask;\n  }()\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/Api/Requests/Apirequest.js"],"names":["Axios","require","Tokens","UpdateToken","body","accessToken","refreshToken","ApiRequest","DashBoardData","endPoint","post","result","data","Result","console","log","getAssignedTask","getSingleTaskFullDetails","task_id","RejectTask","AcceptTask","getCompletedTask"],"mappings":"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","sourcesContent":["import Axios from \"../config\";\n\nconst { Tokens, UpdateToken } = require(\"../authThenticateToken\");\n\n//import Axios from \"../config\";\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\nconst ApiRequest ={\n    DashBoardData:async()=>{\n        try {\n            const endPoint =`Dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n          console.log(error);\n     }\n       },\n\n   getAssignedTask:async()=>{\n    //assigned\n    try {\n        const endPoint =`assigned`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      console.log(error);\n }\n   },\n   getSingleTaskFullDetails:async(task_id)=>{\n    //  getSingleTaskDetails\n    \n    try {\n      const endPoint =`getSingleTaskDetails/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    \n    RejectTask:async (task_id)=>{\n          \n    try {\n      const endPoint =`RejectTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    AcceptTask:async (task_id)=>{\n            \n    try {\n      const endPoint =`AcceptTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    getCompletedTask:async ()=>{\n      try {\n        const endPoint =`completedTask`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      console.log(error);\n }\n    }\n} \n\nexport  default ApiRequest;"]},"metadata":{},"sourceType":"module"}