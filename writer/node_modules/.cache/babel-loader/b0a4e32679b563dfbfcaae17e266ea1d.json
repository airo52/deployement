{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/assigned/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\"; //import TableCard from \"../../Table/tableCard\";\n\nimport TableCard from '../../../table/TableCard';\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar AssignedOrders = function AssignedOrders() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      assignedTask = _useState6[0],\n      setAssignedTask = _useState6[1];\n\n  var HandleAssignedTask = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getAssignedTask();\n\n            case 2:\n              result = _context.sent;\n              console.log(result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function HandleAssignedTask() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    HandleAssignedTask();\n  }, []);\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  var ViewItemDetails = function ViewItemDetails(id) {\n    handleShowSingleTask(5); //alert(id);\n  };\n\n  var RejectOrder = function RejectOrder(id) {\n    alert(id);\n  };\n\n  var Buttons = function Buttons(id) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return RejectOrder(id);\n        },\n        children: \"Reject\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, _this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          return ViewItemDetails(id);\n        },\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var columns = [{\n    dataField: '#order',\n    text: '#order'\n  }, {\n    dataField: 'Order Name',\n    text: 'ordername'\n  }, {\n    dataField: 'Title',\n    text: 'title'\n  }, {\n    dataField: 'status',\n    text: 'status'\n  }, {\n    dataField: 'Created on',\n    text: 'created'\n  }, {\n    dataField: 'Deadline',\n    text: 'deadline'\n  }, {\n    dataField: 'Service',\n    text: 'service'\n  }, {\n    dataField: 'Pages',\n    text: 'page'\n  }, {\n    dataField: 'Action',\n    text: 'action'\n  }];\n  var data = [{\n    \"#order\": \"committee-c15dw\",\n    \"ordername\": \"editor-ktsjo\",\n    \"title\": 3,\n    \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-danger\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }, _this),\n    \"created\": '2021-07-7',\n    \"deadline\": '2021-07-7',\n    \"service\": \"paraprhrasing\",\n    \"page\": \"5\",\n    \"action\": Buttons(5)\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isSingleTaskOpen && /*#__PURE__*/_jsxDEV(TableCard, {\n      title: \"assigned Orders\",\n      columns: columns,\n      products: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      closeTask: handleCloseTask,\n      id: singleTaskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 22\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 8\n  }, _this);\n};\n\n_s(AssignedOrders, \"zJNFuWl/8YoWxrqqMx6Pdx8uQfg=\");\n\n_c = AssignedOrders;\nexport default AssignedOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedOrders\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/assigned/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","AssignedOrders","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","assignedTask","setAssignedTask","HandleAssignedTask","getAssignedTask","result","console","log","handleShowSingleTask","id","handleCloseTask","ViewItemDetails","RejectOrder","alert","Buttons","columns","dataField","text","data"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\n//import TableCard from \"../../Table/tableCard\";\nimport TableCard from '../../../table/TableCard';\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst AssignedOrders = ()=>{\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n\n    const [assignedTask,setAssignedTask] = useState([]);\n\n\n    const HandleAssignedTask = async ()=>{\n        const result = await ApiRequest.getAssignedTask();\n\n        console.log(result)\n    }\n    \n    useEffect(()=>{\n      HandleAssignedTask();\n    },[]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n const ViewItemDetails =(id)=>{\n    handleShowSingleTask(5)\n    //alert(id);\n}\n\nconst RejectOrder = (id)=>{\n    alert(id);\n}\n\nconst Buttons =(id)=>{\n    return <React.Fragment>\n         <button className=\"btn btn-danger\" onClick={()=>RejectOrder(id)}>Reject</button>&nbsp;\n         <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(id)}>Details</button>\n    </React.Fragment>\n}\n\n\n\n\n const columns = [\n    \n        {\n            dataField: '#order',\n           text: '#order',\n        },\n        {\n            dataField: 'Order Name',\n           text: 'ordername',\n        },\n        {\n            dataField: 'Title',\n           text: 'title',\n        },\n        {\n            dataField: 'status',\n           text: 'status',\n        },\n        {\n            dataField: 'Created on',\n           text: 'created',\n        },\n        {\n            dataField: 'Deadline',\n           text: 'deadline',\n        },\n        {\n            dataField: 'Service',\n           text: 'service',\n        },\n        {\n            dataField: 'Pages',\n           text: 'page',\n        },\n        \n        {\n            dataField: 'Action',\n           text: 'action',\n\n        },\n    \n ]\n\n const data=[\n     {\n        \"#order\": \"committee-c15dw\",\n        \"ordername\": \"editor-ktsjo\",\n        \"title\": 3,\n        \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n        \"created\": '2021-07-7',\n        \"deadline\": '2021-07-7',\n        \"service\": \"paraprhrasing\",\n        \"page\": \"5\",\n        \"action\": Buttons(5)\n     }\n ]\nreturn <React.Fragment>\n{!isSingleTaskOpen && <TableCard title={\"assigned Orders\"} columns={columns} products={[]}/>}\n{isSingleTaskOpen && <SingeleTask closeTask={handleCloseTask} id={singleTaskId}/>}\n</React.Fragment> \n}\nexport default AssignedOrders;"]},"metadata":{},"sourceType":"module"}