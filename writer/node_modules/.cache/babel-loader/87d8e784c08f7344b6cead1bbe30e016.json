{"ast":null,"code":"import _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/NewTask.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CRow } from '@coreui/react'; // import CIcon from '@coreui/icons-react'\n//import { DocsLink } from 'src/reusable'\n\nimport TaskCard from './taskCard';\nimport AssignedOrders from '../Orders/assigned';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar NewTask = function NewTask(_ref) {\n  _s();\n\n  var limit = _ref.limit,\n      showSingleTask = _ref.showSingleTask;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      collapsed = _React$useState2[0],\n      setCollapsed = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showCard = _React$useState4[0],\n      setShowCard = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      id = _React$useState6[0],\n      setId = _React$useState6[1];\n\n  var handleCollapse = function handleCollapse(id) {\n    setId(id);\n    setCollapsed(!collapsed);\n    setShowCard(true);\n  };\n\n  var handleShowCard = function handleShowCard(id) {\n    setId(id);\n    setShowCard(!showCard);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CRow, {\n      children: /*#__PURE__*/_jsxDEV(AssignedOrders, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(NewTask, \"CFpU43+TV9lpLZG7M/pAuzmHr1Q=\");\n\n_c = NewTask;\nexport default NewTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/NewTask.js"],"names":["React","CRow","TaskCard","AssignedOrders","NewTask","limit","showSingleTask","useState","collapsed","setCollapsed","showCard","setShowCard","id","setId","handleCollapse","handleShowCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAEIC,IAFJ,QAIU,eAJV,C,CAKC;AACD;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;;;;AACA,IAAMC,OAAO,GAAE,SAATA,OAAS,OAA0B;AAAA;;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AACrC,wBAAkCN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,yBAAgCT,KAAK,CAACO,QAAN,CAAe,KAAf,CAAhC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAAmBX,KAAK,CAACO,QAAN,CAAe,EAAf,CAAnB;AAAA;AAAA,MAAOK,EAAP;AAAA,MAAUC,KAAV;;AAEA,MAAMC,cAAc,GAAC,SAAfA,cAAe,CAACF,EAAD,EAAM;AACxBC,IAAAA,KAAK,CAACD,EAAD,CAAL;AAEAH,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAG,IAAAA,WAAW,CAAC,IAAD,CAAX;AACF,GALD;;AAOA,MAAMI,cAAc,GAAC,SAAfA,cAAe,CAACH,EAAD,EAAM;AACzBC,IAAAA,KAAK,CAACD,EAAD,CAAL;AACAD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAA,6BACC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOH,CAxBD;;GAAMN,O;;KAAAA,O;AA0BN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport {\n  \n    CRow,\n   \n  } from  '@coreui/react'\n // import CIcon from '@coreui/icons-react'\n//import { DocsLink } from 'src/reusable'\nimport TaskCard from './taskCard'\nimport AssignedOrders from '../Orders/assigned'\nconst NewTask =({limit,showSingleTask})=>{\n    const [collapsed, setCollapsed] = React.useState(false)\n    const [showCard, setShowCard] = React.useState(false);\n    const [id,setId] = React.useState('');\n\n    const handleCollapse=(id)=>{\n       setId(id);\n       \n       setCollapsed(!collapsed);\n       setShowCard(true);\n    }\n\n    const handleShowCard=(id)=>{\n      setId(id);\n      setShowCard(!showCard);\n    }\n  \n    return (\n      <>\n        <CRow>\n         <AssignedOrders/>\n        </CRow>\n      </>\n    )\n}\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}