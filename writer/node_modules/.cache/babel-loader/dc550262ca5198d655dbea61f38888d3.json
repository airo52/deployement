{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/dashboard/Dashboard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { lazy, useEffect, useState } from 'react';\nimport ApiRequest from 'src/Api/Requests/Apirequest.js';\nimport NewTask from '../base/NewTask/NewTask.js';\nimport SingeleTask from '../base/NewTask/taskDetails/singleTaskDetails.js';\nimport AssignedOrders from '../base/Orders/assigned/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar WidgetsDropdown = /*#__PURE__*/lazy(_c = function _c() {\n  return import('../widgets/WidgetsDropdown.js');\n}); //const WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\n_c2 = WidgetsDropdown;\n\nvar Dashboard = function Dashboard() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dashboard = _useState6[0],\n      setDashBoard = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      set = _useState8[0],\n      setSet = _useState8[1];\n\n  var HandleDashBoard = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.DashBoardData();\n\n            case 2:\n              data = _context.sent;\n              console.log(data.data);\n              setDashBoard([data.data]);\n              setSet(true);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function HandleDashBoard() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    HandleDashBoard();\n  }, []);\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isSingleTaskOpen && set && /*#__PURE__*/_jsxDEV(WidgetsDropdown, {\n      dashboard: dashboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 37\n    }, _this), /*#__PURE__*/_jsxDEV(AssignedOrders, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      closeTask: handleCloseTask,\n      id: singleTaskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Dashboard, \"qz/ALOY7YXHRzlIcd1fQXk6Oifo=\");\n\n_c3 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"WidgetsDropdown$lazy\");\n$RefreshReg$(_c2, \"WidgetsDropdown\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/dashboard/Dashboard.js"],"names":["React","lazy","useEffect","useState","ApiRequest","NewTask","SingeleTask","AssignedOrders","WidgetsDropdown","Dashboard","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","dashboard","setDashBoard","set","setSet","HandleDashBoard","DashBoardData","data","console","log","handleShowSingleTask","id","handleCloseTask"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AAEA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,WAAP,MAAwB,kDAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAKA,IAAMC,eAAe,gBAAGP,IAAI,MAAC;AAAA,SAAM,OAAO,+BAAP,CAAN;AAAA,CAAD,CAA5B,C,CACA;;MADMO,e;;AAGN,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAGtB,kBAA6CN,QAAQ,CAAC,KAAD,CAArD;AAAA;AAAA,MAAOO,gBAAP;AAAA,MAAwBC,iBAAxB;;AACA,mBAAuCR,QAAQ,EAA/C;AAAA;AAAA,MAAOS,YAAP;AAAA,MAAoBC,eAApB;;AAEA,mBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAiBC,YAAjB;;AACA,mBAAmBZ,QAAQ,CAAC,KAAD,CAA3B;AAAA;AAAA,MAAOa,GAAP;AAAA,MAAWC,MAAX;;AAEA,MAAMC,eAAe;AAAA,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACLd,UAAU,CAACe,aAAX,EADK;;AAAA;AACjBC,cAAAA,IADiB;AAEpBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACA,IAAjB;AACDL,cAAAA,YAAY,CAAC,CAACK,IAAI,CAACA,IAAN,CAAD,CAAZ;AACAH,cAAAA,MAAM,CAAC,IAAD,CAAN;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA,oBAAfC,eAAe;AAAA;AAAA;AAAA,KAArB;;AAQAhB,EAAAA,SAAS,CAAC,YAAI;AAEZgB,IAAAA,eAAe;AAChB,GAHQ,EAGP,EAHO,CAAT;;AAKA,MAAMK,oBAAoB,GAAC,SAArBA,oBAAqB,CAACC,EAAD,EAAM;AAG3BX,IAAAA,eAAe,CAACW,EAAD,CAAf;AACAb,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACL,GALD;;AAOA,MAAMc,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AACvBZ,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACF,GAHD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,eACG,CAACD,gBAAD,IAAqBM,GAArB,iBAA6B,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEF;AAA5B;AAAA;AAAA;AAAA;AAAA,aADhC,eAGI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aAHJ,EAKGJ,gBAAgB,iBAAI,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEe,eAAxB;AAAyC,MAAA,EAAE,EAAEb;AAA7C;AAAA;AAAA;AAAA;AAAA,aALvB;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA7CD;;GAAMH,S;;MAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { lazy, useEffect, useState } from 'react'\nimport ApiRequest from 'src/Api/Requests/Apirequest.js';\n\nimport NewTask from '../base/NewTask/NewTask.js'\nimport SingeleTask from '../base/NewTask/taskDetails/singleTaskDetails.js';\nimport AssignedOrders from '../base/Orders/assigned/index.js';\n\n\n\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\n//const WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Dashboard = () => {\n\n  \n  const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n  const [singleTaskId,setSingleTaskId] = useState();\n\n  const [dashboard,setDashBoard]= useState([]);\n  const [set,setSet]=useState(false);\n\n  const HandleDashBoard=async ()=>{\n   var data= await ApiRequest.DashBoardData();\n    console.log(data.data)\n   setDashBoard([data.data]);\n   setSet(true);\n  }\n\n\n  useEffect(()=>{\n    \n    HandleDashBoard();\n  },[]);\n\n  const handleShowSingleTask=(id)=>{\n    \n    \n        setSingleTaskId(id);\n        setShowSingleTask(true);\n  }\n\n  const handleCloseTask=()=>{\n     setSingleTaskId('');\n     setShowSingleTask(false);\n  }\n  return (\n    <React.Fragment>\n      {!isSingleTaskOpen && set &&  <WidgetsDropdown dashboard={dashboard}/>}\n     \n       {<AssignedOrders/>}\n      {/*!isSingleTaskOpen && <NewTask showSingleTask={handleShowSingleTask}/>*/}\n      {isSingleTaskOpen && <SingeleTask closeTask={handleCloseTask} id={singleTaskId}/>}\n      \n\n     \n    </React.Fragment>\n  )\n}\n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}