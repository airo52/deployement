{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import SingeleTask from\"../../NewTask/taskDetails/singleTaskDetails\";//import TableCard from \"../../Table/tableCard\";\nimport TablCard from'../../../table/TableCard';import ApiRequest from\"src/Api/Requests/Apirequest\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CompletedOrders=function CompletedOrders(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSingleTaskOpen=_useState2[0],setShowSingleTask=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),singleTaskId=_useState4[0],setSingleTaskId=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),completed=_useState6[0],setCompleted=_useState6[1];var getCompletedTask=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,organisedData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ApiRequest.getCompletedTask();case 2:result=_context.sent;organisedData=[];result.data.forEach(function(element){var dat={\"#order\":'#'+element.task_id,\"OrderName\":element.task_name,\"Title\":element.task_title,\"status\":/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-danger\",children:element.task_status}),\"Createdon\":element.task_created_date,\"Deadline\":element.task_deadline,\"Service\":element.task_service,\"Pages\":element.pages,\"Action\":/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info\",onClick:function onClick(){return ViewItemDetails(element.task_id);},children:\"Details\"})};organisedData.push(dat);});setCompleted(organisedData);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getCompletedTask(){return _ref.apply(this,arguments);};}();var handleShowSingleTask=function handleShowSingleTask(id){setSingleTaskId(id);setShowSingleTask(true);};useEffect(function(){getCompletedTask();},[]);var handleCloseTask=function handleCloseTask(){setSingleTaskId('');setShowSingleTask(false);};var ViewItemDetails=function ViewItemDetails(id){// alert(id);\nhandleShowSingleTask(id);};var columns=[{dataField:'#order',text:'#order'},{dataField:'OrderName',text:'ordername'},{dataField:'Title',text:'title'},{dataField:'status',text:'status'},{dataField:'Createdon',text:'created'},{dataField:'Deadline',text:'deadline'},{dataField:'Service',text:'service'},{dataField:'Pages',text:'page'},{dataField:'Action',text:'action'}];var data=[{\"#order\":\"committee-c15dw\",\"ordername\":\"editor-ktsjo\",\"title\":3,\"status\":/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-danger\",children:\"cancelled\"}),\"created\":'2021-07-7',\"deadline\":'2021-07-7',\"service\":\"paraprhrasing\",\"page\":\"5\",\"action\":/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info\",onClick:function onClick(){return ViewItemDetails(5);},children:\"Details\"})}];return/*#__PURE__*/_jsxs(React.Fragment,{children:[!isSingleTaskOpen&&/*#__PURE__*/_jsx(TablCard,{title:\"COMPLETED ORDERS\",columns:columns,products:completed}),isSingleTaskOpen&&/*#__PURE__*/_jsx(SingeleTask,{isAccept:false,closeTask:handleCloseTask,id:singleTaskId})]});};export default CompletedOrders;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/completed/index.js"],"names":["React","useEffect","useState","SingeleTask","TablCard","ApiRequest","CompletedOrders","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","completed","setCompleted","getCompletedTask","result","organisedData","data","forEach","element","dat","task_id","task_name","task_title","task_status","task_created_date","task_deadline","task_service","pages","ViewItemDetails","push","handleShowSingleTask","id","handleCloseTask","columns","dataField","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\n//import TableCard from \"../../Table/tableCard\";\nimport TablCard from '../../../table/TableCard';\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst CompletedOrders = ()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [completed,setCompleted] = useState([]);\n\n    const getCompletedTask =async ()=>{\n             const result = await ApiRequest.getCompletedTask();\n               var organisedData =[];\n            result.data.forEach(element => {\n                  var dat= {\n                  \"#order\": '#'+element.task_id,\n                  \"OrderName\": element.task_name,\n                  \"Title\": element.task_title,\n                  \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                  \"Createdon\":element.task_created_date,\n                  \"Deadline\":element.task_deadline,\n                  \"Service\":element.task_service,\n                  \"Pages\":element.pages,\n                  \"Action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(element.task_id)}>Details</button>\n            }\n\n            organisedData.push(dat);\n            });\n\n            setCompleted(organisedData)\n    }\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n    useEffect(()=>{\n           getCompletedTask();\n    },[]);\n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n\n    \n\n  \n     const columns= [\n                {\n                    dataField: '#order',\n                    text:'#order',\n                },\n                {\n                    dataField: 'OrderName',\n                    text:'ordername',\n                },\n                {\n                    dataField: 'Title',\n                    text:'title',\n                },\n                {\n                    dataField: 'status',\n                    text:'status',\n                },\n                {\n                    dataField: 'Createdon',\n                    text:'created',\n                },\n                {\n                    dataField: 'Deadline',\n                    text:'deadline',\n                },\n                {\n                    dataField: 'Service',\n                    text:'service',\n                },\n                {\n                    dataField: 'Pages',\n                    text:'page',\n                },\n                \n                {\n                    dataField: 'Action',\n                    text:'action',\n                },\n\n               \n             \n            ]\n       \n       \n   \n\n     const data=[\n         {\n            \"#order\": \"committee-c15dw\",\n            \"ordername\": \"editor-ktsjo\",\n            \"title\": 3,\n            \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n            \"created\": '2021-07-7',\n            \"deadline\": '2021-07-7',\n            \"service\": \"paraprhrasing\",\n            \"page\": \"5\",\n            \"action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(5)}>Details</button>\n         }\n     ]\n    return <React.Fragment>\n\n    {!isSingleTaskOpen && <TablCard title={\"COMPLETED ORDERS\"} columns={columns} products={completed}/>}\n    {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n</React.Fragment> \n}\n\nexport default CompletedOrders;"]},"metadata":{},"sourceType":"module"}