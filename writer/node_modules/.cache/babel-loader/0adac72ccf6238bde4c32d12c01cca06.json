{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/in-review/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar OrdersBeingReviewed = function OrdersBeingReviewed() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      taskBeingReviewed = _useState6[0],\n      setTaskBeingReviewed = _useState6[1];\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  var ViewItemDetails = function ViewItemDetails(id) {\n    // alert(id);\n    handleShowSingleTask(id);\n  };\n\n  var getTaskBeingReviewed = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getTaskBeingReviewed();\n\n            case 2:\n              result = _context.sent;\n              console.log(result);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTaskBeingReviewed() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getTaskBeingReviewed();\n  }, []);\n  var columns = [{\n    dataField: '#order',\n    text: '#order'\n  }, {\n    dataField: 'Order Name',\n    text: 'ordername'\n  }, {\n    dataField: 'Title',\n    text: 'title'\n  }, {\n    dataField: 'status',\n    text: 'status'\n  }, {\n    dataField: 'Created on',\n    text: 'created'\n  }, {\n    dataField: 'Deadline',\n    text: 'deadline'\n  }, {\n    dataField: 'Service',\n    text: 'service'\n  }, {\n    dataField: 'Pages',\n    text: 'page'\n  }, {\n    dataField: 'Action',\n    text: 'action'\n  }];\n  var data = [{\n    \"#order\": \"committee-c15dw\",\n    \"ordername\": \"editor-ktsjo\",\n    \"title\": 3,\n    \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-danger\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, _this),\n    \"created\": '2021-07-7',\n    \"deadline\": '2021-07-7',\n    \"service\": \"paraprhrasing\",\n    \"page\": \"5\",\n    \"action\": /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info\",\n      onClick: function onClick() {\n        return ViewItemDetails(5);\n      },\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, _this)\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isSingleTaskOpen && /*#__PURE__*/_jsxDEV(TableCard, {\n      columns: columns,\n      products: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 27\n    }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      isAccept: false,\n      closeTask: handleCloseTask,\n      id: singleTaskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 26\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(OrdersBeingReviewed, \"0Ojp//75YalXQssXWTYL90B8f1Q=\");\n\n_c = OrdersBeingReviewed;\nexport default OrdersBeingReviewed;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersBeingReviewed\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/in-review/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","OrdersBeingReviewed","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","taskBeingReviewed","setTaskBeingReviewed","handleShowSingleTask","id","handleCloseTask","ViewItemDetails","getTaskBeingReviewed","result","console","log","columns","dataField","text","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,6CAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAI;AAAA;;AAE5B,kBAA6CJ,QAAQ,CAAC,KAAD,CAArD;AAAA;AAAA,MAAOK,gBAAP;AAAA,MAAwBC,iBAAxB;;AACA,mBAAuCN,QAAQ,EAA/C;AAAA;AAAA,MAAOO,YAAP;AAAA,MAAoBC,eAApB;;AACA,mBAAiDR,QAAQ,CAAC,EAAD,CAAzD;AAAA;AAAA,MAAOS,iBAAP;AAAA,MAAyBC,oBAAzB;;AAEA,MAAMC,oBAAoB,GAAC,SAArBA,oBAAqB,CAACC,EAAD,EAAM;AAE3BJ,IAAAA,eAAe,CAACI,EAAD,CAAf;AACAN,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACL,GAJD;;AAOA,MAAMO,eAAe,GAAC,SAAhBA,eAAgB,GAAI;AACvBL,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACF,GAHD;;AAKA,MAAMQ,eAAe,GAAE,SAAjBA,eAAiB,CAACF,EAAD,EAAM;AAC1B;AACAD,IAAAA,oBAAoB,CAACC,EAAD,CAApB;AACF,GAHD;;AAKA,MAAMG,oBAAoB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACJZ,UAAU,CAACY,oBAAX,EADI;;AAAA;AACnBC,cAAAA,MADmB;AAGzBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBD,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAMJhB,EAAAA,SAAS,CAAC,YAAI;AACTgB,IAAAA,oBAAoB;AACxB,GAFQ,EAEP,EAFO,CAAT;AAIS,MAAMI,OAAO,GAAE,CACR;AACIC,IAAAA,SAAS,EAAC,QADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADQ,EAKR;AACID,IAAAA,SAAS,EAAC,YADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALQ,EASR;AACID,IAAAA,SAAS,EAAC,OADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATQ,EAaR;AACID,IAAAA,SAAS,EAAC,QADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAbQ,EAiBR;AACID,IAAAA,SAAS,EAAC,YADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAjBQ,EAqBR;AACID,IAAAA,SAAS,EAAC,UADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GArBQ,EAyBR;AACID,IAAAA,SAAS,EAAC,SADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAzBQ,EA6BR;AACID,IAAAA,SAAS,EAAC,OADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GA7BQ,EAkCR;AACID,IAAAA,SAAS,EAAC,QADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAlCQ,CAAf;AA0CJ,MAAMC,IAAI,GAAC,CACP;AACG,cAAU,iBADb;AAEG,iBAAa,cAFhB;AAGG,aAAS,CAHZ;AAIG,2BAAU;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJb;AAKG,eAAW,WALd;AAMG,gBAAY,WANf;AAOG,eAAW,eAPd;AAQG,YAAQ,GARX;AASG,2BAAU;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE;AAAA,eAAIR,eAAe,CAAC,CAAD,CAAnB;AAAA,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATb,GADO,CAAX;AAaD,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,eACN,CAACT,gBAAD,iBAAqB,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEc,OAApB;AAA6B,MAAA,QAAQ,EAAEG;AAAvC;AAAA;AAAA;AAAA;AAAA,aADf,EAENjB,gBAAgB,iBAAI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAvB;AAA8B,MAAA,SAAS,EAAEQ,eAAzC;AAA0D,MAAA,EAAE,EAAEN;AAA9D;AAAA;AAAA;AAAA;AAAA,aAFd;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAIH,CA5FD;;GAAMH,mB;;KAAAA,mB;AA8FN,eAAeA,mBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst OrdersBeingReviewed = ()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [taskBeingReviewed,setTaskBeingReviewed] = useState([]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n\n    const getTaskBeingReviewed = async ()=>{\n        const result = await ApiRequest.getTaskBeingReviewed();\n\n        console.log(result);\n    }\n    \nuseEffect(()=>{\n     getTaskBeingReviewed();\n},[])\n \n         const columns= [\n                {\n                    dataField:'#order',\n                    text: '#order',\n                },\n                {\n                    dataField:'Order Name',\n                    text: 'ordername',\n                },\n                {\n                    dataField:'Title',\n                    text: 'title',\n                },\n                {\n                    dataField:'status',\n                    text: 'status',\n                },\n                {\n                    dataField:'Created on',\n                    text: 'created',\n                },\n                {\n                    dataField:'Deadline',\n                    text: 'deadline',\n                },\n                {\n                    dataField:'Service',\n                    text: 'service',\n                },\n                {\n                    dataField:'Pages',\n                    text: 'page',\n                },\n                \n                {\n                    dataField:'Action',\n                    text: 'action',\n                },\n             \n            ]\n      \n\n     const data=[\n         {\n            \"#order\": \"committee-c15dw\",\n            \"ordername\": \"editor-ktsjo\",\n            \"title\": 3,\n            \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n            \"created\": '2021-07-7',\n            \"deadline\": '2021-07-7',\n            \"service\": \"paraprhrasing\",\n            \"page\": \"5\",\n            \"action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(5)}>Details</button>\n         }\n     ]\n    return <React.Fragment>\n    {!isSingleTaskOpen && <TableCard columns={columns} products={data}/>}\n    {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n    </React.Fragment> \n}\n\nexport default OrdersBeingReviewed;"]},"metadata":{},"sourceType":"module"}