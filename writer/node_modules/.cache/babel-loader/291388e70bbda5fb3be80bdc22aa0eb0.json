{"ast":null,"code":"import _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport singeleTaskDetails from \"./taskDetails/singleTaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _require = require(\"./NewTask\"),\n    NewTask = _require.default;\n\nvar AllAvailableTask = function AllAvailableTask() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    singleTaskId(id);\n    isSingleTaskOpen(true);\n  };\n\n  return !isSingleTaskOpen && /*#__PURE__*/_jsxDEV(NewTask, {\n    limit: 100\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 35\n  }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(\"singeleTaskDetails\", {\n    id: singleTaskId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 35\n  }, _this);\n};\n\n_s(AllAvailableTask, \"2Lj5G1N+M7tMb7xUzek74b4ipPo=\");\n\n_c = AllAvailableTask;\nexport default AllAvailableTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllAvailableTask\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/index.js"],"names":["useState","singeleTaskDetails","require","NewTask","default","AllAvailableTask","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","handleShowSingleTask","id"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,iCAA/B;;;AAEA,eAA6BC,OAAO,CAAC,WAAD,CAApC;AAAA,IAAiBC,OAAjB,YAAQC,OAAR;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAI;AAAA;;AACvB,kBAA6CL,QAAQ,CAAC,KAAD,CAArD;AAAA;AAAA,MAAOM,gBAAP;AAAA,MAAwBC,iBAAxB;;AACA,mBAAuCP,QAAQ,CAAC,EAAD,CAA/C;AAAA;AAAA,MAAOQ,YAAP;AAAA,MAAoBC,eAApB;;AAEA,MAAMC,oBAAoB,GAAC,SAArBA,oBAAqB,CAACC,EAAD,EAAM;AAC7BH,IAAAA,YAAY,CAACG,EAAD,CAAZ;AACAL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAHD;;AAMF,SAAS,CAACA,gBAAD,iBAAqB,QAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,WAArB,EACCA,gBAAgB,iBAAI;AAAoB,IAAA,EAAE,EAAEE;AAAxB;AAAA;AAAA;AAAA;AAAA,WAD9B;AAGH,CAbD;;GAAMH,gB;;KAAAA,gB;AAeN,eAAeA,gBAAf","sourcesContent":["import { useState } from \"react\";\nimport singeleTaskDetails from \"./taskDetails/singleTaskDetails\";\n\nconst { default: NewTask } = require(\"./NewTask\")\n\nconst AllAvailableTask = ()=>{\n      const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n      const [singleTaskId,setSingleTaskId] = useState('');\n\n      const handleShowSingleTask=(id)=>{\n          singleTaskId(id)\n          isSingleTaskOpen(true);\n      }\n\n    \n    return ( !isSingleTaskOpen && <NewTask limit={100}/>,\n              isSingleTaskOpen && <singeleTaskDetails id={singleTaskId}/>\n          )\n}\n\nexport default AllAvailableTask;"]},"metadata":{},"sourceType":"module"}