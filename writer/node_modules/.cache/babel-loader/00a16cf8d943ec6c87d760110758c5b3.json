{"ast":null,"code":"var Currency=function formatMoney(number,decPlaces,decSep,thouSep){decPlaces=isNaN(decPlaces=Math.abs(decPlaces))?2:decPlaces;decSep=typeof decSep===\"undefined\"?\".\":decSep;thouSep=typeof thouSep===\"undefined\"?\",\":thouSep;var sign=number<0?\"-\":\"\";var i=String(parseInt(number=Math.abs(Number(number)||0).toFixed(decPlaces)));var j=(j=i.length)>3?j%3:0;return sign+(j?i.substr(0,j)+thouSep:\"\")+i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g,\"$1\"+thouSep)+(decPlaces?decSep+Math.abs(number-i).toFixed(decPlaces).slice(2):\"\");};export default Currency;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Currency/currency.js"],"names":["Currency","formatMoney","number","decPlaces","decSep","thouSep","isNaN","Math","abs","sign","i","String","parseInt","Number","toFixed","j","length","substr","replace","slice"],"mappings":"AAAA,GAAIA,CAAAA,QAAQ,CAAE,QAASC,CAAAA,WAAT,CAAqBC,MAArB,CAA6BC,SAA7B,CAAwCC,MAAxC,CAAgDC,OAAhD,CAAyD,CACnEF,SAAS,CAAGG,KAAK,CAACH,SAAS,CAAGI,IAAI,CAACC,GAAL,CAASL,SAAT,CAAb,CAAL,CAAyC,CAAzC,CAA6CA,SAAzD,CACAC,MAAM,CAAG,MAAOA,CAAAA,MAAP,GAAkB,WAAlB,CAAgC,GAAhC,CAAsCA,MAA/C,CACAC,OAAO,CAAG,MAAOA,CAAAA,OAAP,GAAmB,WAAnB,CAAiC,GAAjC,CAAuCA,OAAjD,CACA,GAAII,CAAAA,IAAI,CAAGP,MAAM,CAAG,CAAT,CAAa,GAAb,CAAmB,EAA9B,CACA,GAAIQ,CAAAA,CAAC,CAAGC,MAAM,CAACC,QAAQ,CAACV,MAAM,CAAGK,IAAI,CAACC,GAAL,CAASK,MAAM,CAACX,MAAD,CAAN,EAAkB,CAA3B,EAA8BY,OAA9B,CAAsCX,SAAtC,CAAV,CAAT,CAAd,CACA,GAAIY,CAAAA,CAAC,CAAG,CAACA,CAAC,CAAGL,CAAC,CAACM,MAAP,EAAiB,CAAjB,CAAqBD,CAAC,CAAG,CAAzB,CAA6B,CAArC,CAEA,MAAON,CAAAA,IAAI,EACNM,CAAC,CAAGL,CAAC,CAACO,MAAF,CAAS,CAAT,CAAYF,CAAZ,EAAiBV,OAApB,CAA8B,EADzB,CAAJ,CAEHK,CAAC,CAACO,MAAF,CAASF,CAAT,EAAYG,OAAZ,CAAoB,0BAApB,CAAgD,KAAOb,OAAvD,CAFG,EAGFF,SAAS,CAAGC,MAAM,CAAGG,IAAI,CAACC,GAAL,CAASN,MAAM,CAAGQ,CAAlB,EAAqBI,OAArB,CAA6BX,SAA7B,EAAwCgB,KAAxC,CAA8C,CAA9C,CAAZ,CAA+D,EAHtE,CAAP,CAIH,CAZD,CAcA,cAAenB,CAAAA,QAAf","sourcesContent":["var Currency =function formatMoney(number, decPlaces, decSep, thouSep) {\n    decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces;\n    decSep = typeof decSep === \"undefined\" ? \".\" : decSep;\n    thouSep = typeof thouSep === \"undefined\" ? \",\" : thouSep;\n    var sign = number < 0 ? \"-\" : \"\";\n    var i = String(parseInt(number = Math.abs(Number(number) || 0).toFixed(decPlaces)));\n    var j = (j = i.length) > 3 ? j % 3 : 0;\n\n    return sign +\n        (j ? i.substr(0, j) + thouSep : \"\") +\n        i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g, \"$1\" + thouSep) +\n        (decPlaces ? decSep + Math.abs(number - i).toFixed(decPlaces).slice(2) : \"\");\n}\n\nexport default Currency;"]},"metadata":{},"sourceType":"module"}