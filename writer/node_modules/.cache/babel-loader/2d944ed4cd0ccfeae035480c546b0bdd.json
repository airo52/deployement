{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import SingeleTask from\"../../NewTask/taskDetails/singleTaskDetails\";import TableCard from\"../../../table/TableCard\";import ApiRequest from\"src/Api/Requests/Apirequest\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var OrdersBeingRedone=function OrdersBeingRedone(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSingleTaskOpen=_useState2[0],setShowSingleTask=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),singleTaskId=_useState4[0],setSingleTaskId=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),Revisions=_useState6[0],setRevisions=_useState6[1];var handleShowSingleTask=function handleShowSingleTask(id){setSingleTaskId(id);setShowSingleTask(true);};var handleCloseTask=function handleCloseTask(){setSingleTaskId('');setShowSingleTask(false);};var getOrdersInRevision=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,organisedData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return ApiRequest.getOrdersInRevision();case 2:result=_context.sent;organisedData=[];result.data.forEach(function(element){var dat={\"#order\":element.task_id,\"OrderName\":element.task_name,\"Title\":element.task_title,\"status\":/*#__PURE__*/_jsx(\"span\",{className:\"badge badge-danger\",children:element.task_status}),\"Created\":element.task_created_date,\"Deadline\":element.task_deadline,\"Service\":element.task_service,\"Pages\":element.pages,\"Action\":/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-info\",onClick:function onClick(){return handleShowSingleTask(element.task_id);},children:\"Details\"})};organisedData.push(dat);});setRevisions(organisedData);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getOrdersInRevision(){return _ref.apply(this,arguments);};}();useEffect(function(){getOrdersInRevision();},[]);var columns=[{dataField:'#order',text:'#order'},{dataField:'OrderName',text:'ordername'},{dataField:'Title',text:'title'},{dataField:'status',text:'status'},{dataField:'Created',text:'created'},{dataField:'Deadline',text:'deadline'},{dataField:'Pages',text:'page'},{dataField:'Action',text:'action'}];return/*#__PURE__*/_jsxs(React.Fragment,{children:[!isSingleTaskOpen&&/*#__PURE__*/_jsx(TableCard,{columns:columns,products:Revisions}),isSingleTaskOpen&&/*#__PURE__*/_jsx(SingeleTask,{isAccept:false,closeTask:handleCloseTask,id:singleTaskId})]});};export default OrdersBeingRedone;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/Redone/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","OrdersBeingRedone","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","Revisions","setRevisions","handleShowSingleTask","id","handleCloseTask","getOrdersInRevision","result","organisedData","data","forEach","element","dat","task_id","task_name","task_title","task_status","task_created_date","task_deadline","task_service","pages","push","columns","dataField","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\n\nconst OrdersBeingRedone =()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [Revisions,setRevisions] = useState([]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const getOrdersInRevision = async ()=>{\n        const result = await ApiRequest.getOrdersInRevision();\n       \n\n        const organisedData =[];\n        result.data.forEach(element => {\n                 var dat ={\n                     \"#order\": element.task_id,\n                     \"OrderName\": element.task_name,\n                     \"Title\": element.task_title,\n                     \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                     \"Created\": element.task_created_date,\n                     \"Deadline\": element.task_deadline,\n                     \"Service\": element.task_service,\n                     \"Pages\": element.pages,\n                     \"Action\": <button className=\"btn btn-info\" onClick={()=>handleShowSingleTask(element.task_id)}>Details</button> \n                 } \n                 \n                 organisedData.push(dat);\n        });\nsetRevisions(organisedData);\n\n    }\n\n  \n    useEffect(()=>{\n        getOrdersInRevision();\n    },[])\n    \n     \nconst  columns = [\n    {\n        dataField:'#order',\n         text:  '#order',\n    },\n    {\n        dataField:'OrderName',\n         text:  'ordername',\n    },\n    {\n        dataField:'Title',\n         text:  'title',\n    },\n    {\n        dataField:'status',\n         text:  'status',\n    },\n    {\n        dataField:'Created',\n         text:  'created',\n    },\n    {\n        dataField:'Deadline',\n         text:  'deadline',\n    },\n   \n    {\n        dataField:'Pages',\n         text:  'page',\n    },\n    \n    {\n        dataField:'Action',\n         text:  'action',\n    },\n \n]\n   \n    return <React.Fragment>\n            {!isSingleTaskOpen && <TableCard columns={columns} products={Revisions}/>}\n            {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n        </React.Fragment> \n}\n\nexport default OrdersBeingRedone;"]},"metadata":{},"sourceType":"module"}