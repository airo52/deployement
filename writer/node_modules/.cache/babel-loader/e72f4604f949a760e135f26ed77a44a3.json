{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/inprogress/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar OrdersInProgress = function OrdersInProgress() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inprogress = _useState6[0],\n      setInprogress = _useState6[1];\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var getTaskInprogress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, organisedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getOrdersInprogress();\n\n            case 2:\n              result = _context.sent;\n              organisedData = [];\n              result.data.forEach(function (element) {\n                var dat = {\n                  \"#order\": \"committee-c15dw\",\n                  \"OrderName\": \"editor-ktsjo\",\n                  \"Title\": 3,\n                  \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge badge-danger\",\n                    children: \"cancelled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 35\n                  }, _this),\n                  \"Created\": '2021-07-7',\n                  \"Deadline\": '2021-07-7',\n                  \"Service\": \"paraprhrasing\",\n                  \"Pages\": \"5\",\n                  \"Action\": Buttons(5)\n                };\n                organisedData.push(dat);\n              });\n              setInprogress(organisedData);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getTaskInprogress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  useEffect(function () {\n    getTaskInprogress();\n  }, []);\n\n  var HandleSubmitTask = function HandleSubmitTask(task_id) {\n    alert(task_id);\n  };\n\n  var ViewItemDetails = function ViewItemDetails(id) {\n    // alert(id);\n    handleShowSingleTask(id);\n  };\n\n  var CancelOrder = function CancelOrder(id) {\n    alert(id);\n  };\n\n  var Buttons = function Buttons(id) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return HandleSubmitTask(8);\n        },\n        children: \"Submit Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: function onClick() {\n          return CancelOrder(8);\n        },\n        children: \"cancel Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 10\n      }, _this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-info\",\n        onClick: function onClick() {\n          return ViewItemDetails(8);\n        },\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var columns = [{\n    dataField: '#order',\n    text: '#order'\n  }, {\n    dataField: 'OrderName',\n    text: 'ordername'\n  }, {\n    dataField: 'Title',\n    text: 'title'\n  }, {\n    dataField: 'status',\n    text: 'status'\n  }, {\n    dataField: 'Created',\n    text: 'created'\n  }, {\n    dataField: 'Deadline',\n    text: 'deadline'\n  }, {\n    dataField: 'Service',\n    text: 'service'\n  }, {\n    dataField: 'Pages',\n    text: 'page'\n  }, {\n    dataField: 'Action',\n    text: 'action'\n  }];\n  var data = [{\n    \"#order\": \"committee-c15dw\",\n    \"ordername\": \"editor-ktsjo\",\n    \"title\": 3,\n    \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-danger\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }, _this),\n    \"created\": '2021-07-7',\n    \"deadline\": '2021-07-7',\n    \"service\": \"paraprhrasing\",\n    \"page\": \"5\",\n    \"action\": Buttons(5)\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isSingleTaskOpen && /*#__PURE__*/_jsxDEV(TableCard, {\n      title: \"Order in progress\",\n      columns: columns,\n      products: inprogress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      isAccept: false,\n      closeTask: handleCloseTask,\n      id: singleTaskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 22\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 8\n  }, _this);\n};\n\n_s(OrdersInProgress, \"IbwewS9rZ5uVGSfuxOcODNZGrac=\");\n\n_c = OrdersInProgress;\nexport default OrdersInProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersInProgress\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/inprogress/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","OrdersInProgress","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","inprogress","setInprogress","handleShowSingleTask","id","getTaskInprogress","getOrdersInprogress","result","organisedData","data","forEach","element","dat","Buttons","push","handleCloseTask","HandleSubmitTask","task_id","alert","ViewItemDetails","CancelOrder","columns","dataField","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst OrdersInProgress =()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [inprogress,setInprogress] = useState([]);\n\n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n\n    const getTaskInprogress =async ()=>{\n           const result = await ApiRequest.getOrdersInprogress();\n            const organisedData =[];\n           result.data.forEach(element => {\n                    var dat ={\n                        \"#order\": \"committee-c15dw\",\n                        \"OrderName\": \"editor-ktsjo\",\n                        \"Title\": 3,\n                        \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n                        \"Created\": '2021-07-7',\n                        \"Deadline\": '2021-07-7',\n                        \"Service\": \"paraprhrasing\",\n                        \"Pages\": \"5\",\n                        \"Action\": Buttons(5)\n                    } \n                    \n                    organisedData.push(dat);\n           });\n\n           setInprogress(organisedData);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    useEffect(()=>{\n      getTaskInprogress();\n    },[]);\n    const HandleSubmitTask=(task_id)=>{\n      alert(task_id);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n  \n \n\nconst CancelOrder = (id)=>{\n    alert(id);\n}\n\nconst Buttons =(id)=>{\n    return <React.Fragment>\n        <button className=\"btn btn-danger\" onClick={()=>HandleSubmitTask(8)}>Submit Order</button>&nbsp;\n         <button className=\"btn btn-danger\" onClick={()=>CancelOrder(8)}>cancel Order</button>&nbsp;\n         <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(8)}>Details</button>\n    </React.Fragment>\n}\n\n\n\nconst columns = [\n            {\n                dataField:'#order',\n                text: '#order',\n            },\n            {\n                dataField:'OrderName',\n                text: 'ordername',\n            },\n            {\n                dataField:'Title',\n                text: 'title',\n            },\n            {\n                dataField:'status',\n                text: 'status',\n            },\n            {\n                dataField:'Created',\n                text: 'created',\n            },\n            {\n                dataField:'Deadline',\n                text: 'deadline',\n            },\n            {\n                dataField:'Service',\n                text: 'service',\n            },\n            {\n                dataField:'Pages',\n                text: 'page',\n            },\n            \n            {\n                dataField:'Action',\n                text: 'action',\n\n            },\n\n           \n         \n        ]\n    \n\n\n const data=[\n     {\n        \"#order\": \"committee-c15dw\",\n        \"ordername\": \"editor-ktsjo\",\n        \"title\": 3,\n        \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n        \"created\": '2021-07-7',\n        \"deadline\": '2021-07-7',\n        \"service\": \"paraprhrasing\",\n        \"page\": \"5\",\n        \"action\": Buttons(5)\n     }\n ]\nreturn <React.Fragment>\n{!isSingleTaskOpen && <TableCard title={\"Order in progress\"} columns={columns} products={inprogress}/>}\n{isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n</React.Fragment> \n}\n\nexport default OrdersInProgress;"]},"metadata":{},"sourceType":"module"}