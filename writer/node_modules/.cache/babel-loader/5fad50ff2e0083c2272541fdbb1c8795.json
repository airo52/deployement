{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Invoice from \"src/views/base/Invoice/invoice\";\nimport Axios from \"../config\";\n\nvar _require = require(\"../authThenticateToken\"),\n    Tokens = _require.Tokens,\n    UpdateToken = _require.UpdateToken; //import Axios from \"../config\";\n\n\nvar body = function body() {\n  return {\n    \"x-access-key\": Tokens().accessToken,\n    \"x-access-token\": Tokens().refreshToken\n  };\n};\n\nvar ApiRequest = {\n  DashBoardData: function () {\n    var _DashBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              endPoint = \"Dashboard\";\n              _context.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context.sent;\n\n              if (!(result.data == false)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context.sent;\n\n              if (!(data == true)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", Result);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", result);\n\n            case 17:\n              _context.next = 21;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    function DashBoardData() {\n      return _DashBoardData.apply(this, arguments);\n    }\n\n    return DashBoardData;\n  }(),\n  getAssignedTask: function () {\n    var _getAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              endPoint = \"assigned\";\n              _context2.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.data == false)) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context2.sent;\n\n              if (!(data == true)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context2.sent;\n              return _context2.abrupt(\"return\", Result);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", result);\n\n            case 17:\n              _context2.next = 21;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 19]]);\n    }));\n\n    function getAssignedTask() {\n      return _getAssignedTask.apply(this, arguments);\n    }\n\n    return getAssignedTask;\n  }(),\n  getSingleTaskFullDetails: function () {\n    var _getSingleTaskFullDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              endPoint = \"getSingleTaskDetails/\".concat(task_id); //user_id,task_id\n\n              _context3.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context3.sent;\n\n              if (!(result.data == false)) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context3.sent;\n\n              if (!(data == true)) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context3.sent;\n              return _context3.abrupt(\"return\", Result);\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              return _context3.abrupt(\"return\", result);\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              return _context3.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 19]]);\n    }));\n\n    function getSingleTaskFullDetails(_x) {\n      return _getSingleTaskFullDetails.apply(this, arguments);\n    }\n\n    return getSingleTaskFullDetails;\n  }(),\n  RejectTask: function () {\n    var _RejectTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              endPoint = \"RejectTask/\".concat(task_id); //user_id,task_id\n\n              _context4.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context4.sent;\n\n              if (!(result.data == false)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context4.sent;\n\n              if (!(data == true)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context4.sent;\n              return _context4.abrupt(\"return\", Result);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", result);\n\n            case 17:\n              _context4.next = 23;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n              return _context4.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 19]]);\n    }));\n\n    function RejectTask(_x2) {\n      return _RejectTask.apply(this, arguments);\n    }\n\n    return RejectTask;\n  }(),\n  AcceptTask: function () {\n    var _AcceptTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              endPoint = \"AcceptTask/\".concat(task_id); //user_id,task_id\n\n              _context5.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context5.sent;\n\n              if (!(result.data == false)) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context5.sent;\n\n              if (!(data == true)) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context5.sent;\n              return _context5.abrupt(\"return\", Result);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", result);\n\n            case 17:\n              _context5.next = 23;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n              return _context5.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19]]);\n    }));\n\n    function AcceptTask(_x3) {\n      return _AcceptTask.apply(this, arguments);\n    }\n\n    return AcceptTask;\n  }(),\n  getCompletedTask: function () {\n    var _getCompletedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              endPoint = \"completedTask\";\n              _context6.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context6.sent;\n\n              if (!(result.data == false)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context6.sent;\n\n              if (!(data == true)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context6.sent;\n              return _context6.abrupt(\"return\", Result);\n\n            case 14:\n              _context6.next = 17;\n              break;\n\n            case 16:\n              return _context6.abrupt(\"return\", result);\n\n            case 17:\n              _context6.next = 21;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 19]]);\n    }));\n\n    function getCompletedTask() {\n      return _getCompletedTask.apply(this, arguments);\n    }\n\n    return getCompletedTask;\n  }(),\n  getOrdersInprogress: function () {\n    var _getOrdersInprogress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              endPoint = \"inprogress\";\n              _context7.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context7.sent;\n\n              if (!(result.data == false)) {\n                _context7.next = 16;\n                break;\n              }\n\n              _context7.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context7.sent;\n\n              if (!(data == true)) {\n                _context7.next = 14;\n                break;\n              }\n\n              _context7.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context7.sent;\n              return _context7.abrupt(\"return\", Result);\n\n            case 14:\n              _context7.next = 17;\n              break;\n\n            case 16:\n              return _context7.abrupt(\"return\", result);\n\n            case 17:\n              _context7.next = 21;\n              break;\n\n            case 19:\n              _context7.prev = 19;\n              _context7.t0 = _context7[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 19]]);\n    }));\n\n    function getOrdersInprogress() {\n      return _getOrdersInprogress.apply(this, arguments);\n    }\n\n    return getOrdersInprogress;\n  }(),\n  cancelOrder: function () {\n    var _cancelOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              endPoint = \"cancelOrder/\".concat(task_id);\n              _context8.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context8.sent;\n\n              if (!(result.data == false)) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context8.sent;\n\n              if (!(data == true)) {\n                _context8.next = 14;\n                break;\n              }\n\n              _context8.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context8.sent;\n              return _context8.abrupt(\"return\", Result);\n\n            case 14:\n              _context8.next = 17;\n              break;\n\n            case 16:\n              return _context8.abrupt(\"return\", result);\n\n            case 17:\n              _context8.next = 21;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 19]]);\n    }));\n\n    function cancelOrder(_x4) {\n      return _cancelOrder.apply(this, arguments);\n    }\n\n    return cancelOrder;\n  }(),\n  SubmitTask: function () {\n    var _SubmitTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(file, task_id) {\n      var endPoint, formData, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              endPoint = \"SubmitTask/\".concat(task_id); //user_id,task_id\n\n              formData = new FormData();\n              formData.append('files', file);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken); //await sendUpload(endPoint,formData);\n\n              _context9.prev = 5;\n              _context9.next = 8;\n              return Axios.post(endPoint, formData);\n\n            case 8:\n              result = _context9.sent;\n\n              if (!(result.data == false)) {\n                _context9.next = 21;\n                break;\n              }\n\n              _context9.next = 12;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 12:\n              data = _context9.sent;\n\n              if (!(data == true)) {\n                _context9.next = 19;\n                break;\n              }\n\n              _context9.next = 16;\n              return Axios.post(endPoint, formData);\n\n            case 16:\n              Result = _context9.sent;\n              formData = \"\";\n              return _context9.abrupt(\"return\", Result.data);\n\n            case 19:\n              _context9.next = 23;\n              break;\n\n            case 21:\n              formData = \"\";\n              return _context9.abrupt(\"return\", result.data);\n\n            case 23:\n              _context9.next = 28;\n              break;\n\n            case 25:\n              _context9.prev = 25;\n              _context9.t0 = _context9[\"catch\"](5);\n              formData = \"\"; //  //console.log(error)\n\n            case 28:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9, null, [[5, 25]]);\n    }));\n\n    function SubmitTask(_x5, _x6) {\n      return _SubmitTask.apply(this, arguments);\n    }\n\n    return SubmitTask;\n  }(),\n  getTaskBeingReviewed: function () {\n    var _getTaskBeingReviewed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.prev = 0;\n              endPoint = \"TaskBeingReviewd\";\n              _context10.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context10.sent;\n\n              if (!(result.data == false)) {\n                _context10.next = 16;\n                break;\n              }\n\n              _context10.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context10.sent;\n\n              if (!(data == true)) {\n                _context10.next = 14;\n                break;\n              }\n\n              _context10.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context10.sent;\n              return _context10.abrupt(\"return\", Result);\n\n            case 14:\n              _context10.next = 17;\n              break;\n\n            case 16:\n              return _context10.abrupt(\"return\", result);\n\n            case 17:\n              _context10.next = 21;\n              break;\n\n            case 19:\n              _context10.prev = 19;\n              _context10.t0 = _context10[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[0, 19]]);\n    }));\n\n    function getTaskBeingReviewed() {\n      return _getTaskBeingReviewed.apply(this, arguments);\n    }\n\n    return getTaskBeingReviewed;\n  }(),\n  getCancelled: function () {\n    var _getCancelled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.prev = 0;\n              endPoint = \"Cancelled\";\n              _context11.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context11.sent;\n\n              if (!(result.data == false)) {\n                _context11.next = 16;\n                break;\n              }\n\n              _context11.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context11.sent;\n\n              if (!(data == true)) {\n                _context11.next = 14;\n                break;\n              }\n\n              _context11.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context11.sent;\n              return _context11.abrupt(\"return\", Result);\n\n            case 14:\n              _context11.next = 17;\n              break;\n\n            case 16:\n              return _context11.abrupt(\"return\", result);\n\n            case 17:\n              _context11.next = 21;\n              break;\n\n            case 19:\n              _context11.prev = 19;\n              _context11.t0 = _context11[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11, null, [[0, 19]]);\n    }));\n\n    function getCancelled() {\n      return _getCancelled.apply(this, arguments);\n    }\n\n    return getCancelled;\n  }(),\n  getOrdersInRevision: function () {\n    var _getOrdersInRevision = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              endPoint = \"Revision\";\n              _context12.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context12.sent;\n\n              if (!(result.data == false)) {\n                _context12.next = 16;\n                break;\n              }\n\n              _context12.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context12.sent;\n\n              if (!(data == true)) {\n                _context12.next = 14;\n                break;\n              }\n\n              _context12.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context12.sent;\n              return _context12.abrupt(\"return\", Result);\n\n            case 14:\n              _context12.next = 17;\n              break;\n\n            case 16:\n              return _context12.abrupt(\"return\", result);\n\n            case 17:\n              _context12.next = 21;\n              break;\n\n            case 19:\n              _context12.prev = 19;\n              _context12.t0 = _context12[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 19]]);\n    }));\n\n    function getOrdersInRevision() {\n      return _getOrdersInRevision.apply(this, arguments);\n    }\n\n    return getOrdersInRevision;\n  }(),\n  getUnpaidOrders: function () {\n    var _getUnpaidOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              endPoint = \"Unpaid\";\n              _context13.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context13.sent;\n\n              if (!(result.data == false)) {\n                _context13.next = 16;\n                break;\n              }\n\n              _context13.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context13.sent;\n\n              if (!(data == true)) {\n                _context13.next = 14;\n                break;\n              }\n\n              _context13.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context13.sent;\n              return _context13.abrupt(\"return\", Result);\n\n            case 14:\n              _context13.next = 17;\n              break;\n\n            case 16:\n              return _context13.abrupt(\"return\", result);\n\n            case 17:\n              _context13.next = 21;\n              break;\n\n            case 19:\n              _context13.prev = 19;\n              _context13.t0 = _context13[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 19]]);\n    }));\n\n    function getUnpaidOrders() {\n      return _getUnpaidOrders.apply(this, arguments);\n    }\n\n    return getUnpaidOrders;\n  }(),\n  LoadInvoices: function () {\n    var _LoadInvoices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              endPoint = \"LoadInvoices\";\n              _context14.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context14.sent;\n\n              if (!(result.data == false)) {\n                _context14.next = 16;\n                break;\n              }\n\n              _context14.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context14.sent;\n\n              if (!(data == true)) {\n                _context14.next = 14;\n                break;\n              }\n\n              _context14.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context14.sent;\n              return _context14.abrupt(\"return\", Result);\n\n            case 14:\n              _context14.next = 17;\n              break;\n\n            case 16:\n              return _context14.abrupt(\"return\", result);\n\n            case 17:\n              _context14.next = 21;\n              break;\n\n            case 19:\n              _context14.prev = 19;\n              _context14.t0 = _context14[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 19]]);\n    }));\n\n    function LoadInvoices() {\n      return _LoadInvoices.apply(this, arguments);\n    }\n\n    return LoadInvoices;\n  }(),\n  LoadInvoicesData: function () {\n    var _LoadInvoicesData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(invoiceId) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              endPoint = \"LoadInvoiceData/\".concat(invoiceId);\n              _context15.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context15.sent;\n\n              if (!(result.data == false)) {\n                _context15.next = 16;\n                break;\n              }\n\n              _context15.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context15.sent;\n\n              if (!(data == true)) {\n                _context15.next = 14;\n                break;\n              }\n\n              _context15.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context15.sent;\n              return _context15.abrupt(\"return\", Result);\n\n            case 14:\n              _context15.next = 17;\n              break;\n\n            case 16:\n              return _context15.abrupt(\"return\", result);\n\n            case 17:\n              _context15.next = 21;\n              break;\n\n            case 19:\n              _context15.prev = 19;\n              _context15.t0 = _context15[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[0, 19]]);\n    }));\n\n    function LoadInvoicesData(_x7) {\n      return _LoadInvoicesData.apply(this, arguments);\n    }\n\n    return LoadInvoicesData;\n  }(),\n  getUserDetails: function () {\n    var _getUserDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              endPoint = \"getUserDetails\";\n              _context16.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context16.sent;\n\n              if (!(result.data == false)) {\n                _context16.next = 16;\n                break;\n              }\n\n              _context16.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context16.sent;\n\n              if (!(data == true)) {\n                _context16.next = 14;\n                break;\n              }\n\n              _context16.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context16.sent;\n              return _context16.abrupt(\"return\", Result);\n\n            case 14:\n              _context16.next = 17;\n              break;\n\n            case 16:\n              return _context16.abrupt(\"return\", result);\n\n            case 17:\n              _context16.next = 21;\n              break;\n\n            case 19:\n              _context16.prev = 19;\n              _context16.t0 = _context16[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 19]]);\n    }));\n\n    function getUserDetails() {\n      return _getUserDetails.apply(this, arguments);\n    }\n\n    return getUserDetails;\n  }(),\n  UpdateProfile: function () {\n    var _UpdateProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(profile) {\n      var endPoint, formData, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              endPoint = \"updateProfile\"; //user_id,task_id\n\n              formData = new FormData();\n              formData.append('files', profile);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken); //await sendUpload(endPoint,formData);\n\n              _context17.prev = 5;\n              _context17.next = 8;\n              return Axios.post(endPoint, formData);\n\n            case 8:\n              result = _context17.sent;\n\n              if (!(result.data == false)) {\n                _context17.next = 21;\n                break;\n              }\n\n              _context17.next = 12;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 12:\n              data = _context17.sent;\n\n              if (!(data == true)) {\n                _context17.next = 19;\n                break;\n              }\n\n              _context17.next = 16;\n              return Axios.post(endPoint, formData);\n\n            case 16:\n              Result = _context17.sent;\n              formData = \"\";\n              return _context17.abrupt(\"return\", Result.data);\n\n            case 19:\n              _context17.next = 23;\n              break;\n\n            case 21:\n              formData = \"\";\n              return _context17.abrupt(\"return\", result.data);\n\n            case 23:\n              _context17.next = 28;\n              break;\n\n            case 25:\n              _context17.prev = 25;\n              _context17.t0 = _context17[\"catch\"](5);\n              formData = \"\"; //  //console.log(error)\n\n            case 28:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[5, 25]]);\n    }));\n\n    function UpdateProfile(_x8) {\n      return _UpdateProfile.apply(this, arguments);\n    }\n\n    return UpdateProfile;\n  }(),\n  UpdateData: function () {\n    var _UpdateData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(data) {\n      var endPoint, result, _data, Result;\n\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              endPoint = \"UpdateProfileData?\" + data; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context18.prev = 1;\n              _context18.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context18.sent;\n\n              if (!(result.data == false)) {\n                _context18.next = 16;\n                break;\n              }\n\n              _context18.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              _data = _context18.sent;\n\n              if (!(_data == true)) {\n                _context18.next = 14;\n                break;\n              }\n\n              _context18.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context18.sent;\n              return _context18.abrupt(\"return\", Result);\n\n            case 14:\n              _context18.next = 17;\n              break;\n\n            case 16:\n              return _context18.abrupt(\"return\", result);\n\n            case 17:\n              _context18.next = 23;\n              break;\n\n            case 19:\n              _context18.prev = 19;\n              _context18.t0 = _context18[\"catch\"](1);\n              console.log(_context18.t0);\n              return _context18.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[1, 19]]);\n    }));\n\n    function UpdateData(_x9) {\n      return _UpdateData.apply(this, arguments);\n    }\n\n    return UpdateData;\n  }()\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/Api/Requests/Apirequest.js"],"names":["Invoice","Axios","require","Tokens","UpdateToken","body","accessToken","refreshToken","ApiRequest","DashBoardData","endPoint","post","result","data","Result","getAssignedTask","getSingleTaskFullDetails","task_id","console","log","RejectTask","AcceptTask","getCompletedTask","getOrdersInprogress","cancelOrder","SubmitTask","file","formData","FormData","append","getTaskBeingReviewed","getCancelled","getOrdersInRevision","getUnpaidOrders","LoadInvoices","LoadInvoicesData","invoiceId","getUserDetails","UpdateProfile","profile","UpdateData"],"mappings":"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","sourcesContent":["import Invoice from \"src/views/base/Invoice/invoice\";\nimport Axios from \"../config\";\n\nconst { Tokens, UpdateToken } = require(\"../authThenticateToken\");\n\n//import Axios from \"../config\";\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\nconst ApiRequest ={\n    DashBoardData:async()=>{\n        try {\n            const endPoint =`Dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n         // //console.log(error)\n     }\n       },\n\n   getAssignedTask:async()=>{\n    //assigned\n    try {\n        const endPoint =`assigned`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n   },\n   getSingleTaskFullDetails:async(task_id)=>{\n    //  getSingleTaskDetails\n    \n    try {\n      const endPoint =`getSingleTaskDetails/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    \n    RejectTask:async (task_id)=>{\n          \n    try {\n      const endPoint =`RejectTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    AcceptTask:async (task_id)=>{\n            \n    try {\n      const endPoint =`AcceptTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    getCompletedTask:async ()=>{\n      try {\n        const endPoint =`completedTask`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n    getOrdersInprogress:async ()=>{\n      //inprogress\n      try {\n        const endPoint =`inprogress`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n    cancelOrder:async(task_id)=>{\n      try {\n        const endPoint =`cancelOrder/${task_id}`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n\n    SubmitTask:async (file,task_id)=>{\n      const endPoint =`SubmitTask/${task_id}`;//user_id,task_id\n     \n        var formData = new FormData();\n        formData.append('files', file);\n        formData.append( \"x-access-key\", Tokens().accessToken)\n        formData.append(\"x-access-token\",Tokens().refreshToken)\n           //await sendUpload(endPoint,formData);\n           try {\n    \n  \n            const result = await Axios.post(endPoint,formData);\n           // console.log(result.data)\n            \n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,formData);\n                  \n                  formData=\"\";\n                  return Result.data;\n                }\n            }\n            else{\n              formData=\"\";\n                return result.data;\n                \n            }\n          } catch (error) {\n            formData=\"\";\n            //  //console.log(error)\n          }\n    },\n\n    getTaskBeingReviewed:async ()=>{\n      //TaskBeingReviewd\n      try {\n        const endPoint =`TaskBeingReviewd`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n    getCancelled:async ()=>{\n      try {\n        const endPoint =`Cancelled`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n    getOrdersInRevision:async ()=>{\n      try {\n        const endPoint =`Revision`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n  getUnpaidOrders:async()=>{\n   // Unpaid\n   try {\n    const endPoint =`Unpaid`;\n\n    const result = await Axios.post(endPoint,body());\n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n} catch (error) {\n  //console.log(error)\n}\n  },\n  LoadInvoices:async ()=>{\n    try {\n      const endPoint =`LoadInvoices`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  LoadInvoicesData:async(invoiceId)=>{\n    //LoadInvoiceData\n   \n    try {\n      const endPoint =`LoadInvoiceData/${invoiceId}`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  getUserDetails:async()=>{\n\n    try {\n      const endPoint =`getUserDetails`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  UpdateProfile:async (profile)=>{\n    const endPoint =`updateProfile`;//user_id,task_id\n   \n      var formData = new FormData();\n      formData.append('files', profile);\n      formData.append( \"x-access-key\", Tokens().accessToken)\n      formData.append(\"x-access-token\",Tokens().refreshToken)\n         //await sendUpload(endPoint,formData);\n         try {\n  \n\n          const result = await Axios.post(endPoint,formData);\n         // console.log(result.data)\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,formData);\n                \n                formData=\"\";\n                return Result.data;\n              }\n          }\n          else{\n            formData=\"\";\n              return result.data;\n              \n          }\n        } catch (error) {\n          formData=\"\";\n          //  //console.log(error)\n        }\n  },\n  UpdateData:async (data)=>{\n        \n    const endPoint =`UpdateProfileData?`+data;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    console.log(e);\n    return [];\n   }\n  },\n} \n\nexport  default ApiRequest;"]},"metadata":{},"sourceType":"module"}