{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Invoice from \"src/views/base/Invoice/invoice\";\nimport Axios from \"../config\";\nimport axios from 'axios';\nimport Urls from \"../urls\";\n\nvar _require = require(\"../authThenticateToken\"),\n    Tokens = _require.Tokens,\n    UpdateToken = _require.UpdateToken; //import Axios from \"../config\";\n\n\nvar body = function body() {\n  return {\n    \"x-access-key\": Tokens().accessToken,\n    \"x-access-token\": Tokens().refreshToken\n  };\n};\n\nvar ApiRequest = {\n  DashBoardData: function () {\n    var _DashBoardData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              endPoint = \"Dashboard\";\n              _context.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context.sent;\n\n              if (!(result.data == false)) {\n                _context.next = 16;\n                break;\n              }\n\n              _context.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context.sent;\n\n              if (!(data == true)) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context.sent;\n              return _context.abrupt(\"return\", Result);\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              return _context.abrupt(\"return\", result);\n\n            case 17:\n              _context.next = 21;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 19]]);\n    }));\n\n    function DashBoardData() {\n      return _DashBoardData.apply(this, arguments);\n    }\n\n    return DashBoardData;\n  }(),\n  getAssignedTask: function () {\n    var _getAssignedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              endPoint = \"assigned\";\n              _context2.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context2.sent;\n\n              if (!(result.data == false)) {\n                _context2.next = 16;\n                break;\n              }\n\n              _context2.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context2.sent;\n\n              if (!(data == true)) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context2.sent;\n              return _context2.abrupt(\"return\", Result);\n\n            case 14:\n              _context2.next = 17;\n              break;\n\n            case 16:\n              return _context2.abrupt(\"return\", result);\n\n            case 17:\n              _context2.next = 21;\n              break;\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 19]]);\n    }));\n\n    function getAssignedTask() {\n      return _getAssignedTask.apply(this, arguments);\n    }\n\n    return getAssignedTask;\n  }(),\n  getSingleTaskFullDetails: function () {\n    var _getSingleTaskFullDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              endPoint = \"getSingleTaskDetails/\".concat(task_id); //user_id,task_id\n\n              _context3.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context3.sent;\n\n              if (!(result.data == false)) {\n                _context3.next = 16;\n                break;\n              }\n\n              _context3.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context3.sent;\n\n              if (!(data == true)) {\n                _context3.next = 14;\n                break;\n              }\n\n              _context3.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context3.sent;\n              return _context3.abrupt(\"return\", Result);\n\n            case 14:\n              _context3.next = 17;\n              break;\n\n            case 16:\n              return _context3.abrupt(\"return\", result);\n\n            case 17:\n              _context3.next = 23;\n              break;\n\n            case 19:\n              _context3.prev = 19;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              return _context3.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 19]]);\n    }));\n\n    function getSingleTaskFullDetails(_x) {\n      return _getSingleTaskFullDetails.apply(this, arguments);\n    }\n\n    return getSingleTaskFullDetails;\n  }(),\n  RejectTask: function () {\n    var _RejectTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              endPoint = \"RejectTask/\".concat(task_id); //user_id,task_id\n\n              _context4.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context4.sent;\n\n              if (!(result.data == false)) {\n                _context4.next = 16;\n                break;\n              }\n\n              _context4.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context4.sent;\n\n              if (!(data == true)) {\n                _context4.next = 14;\n                break;\n              }\n\n              _context4.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context4.sent;\n              return _context4.abrupt(\"return\", Result);\n\n            case 14:\n              _context4.next = 17;\n              break;\n\n            case 16:\n              return _context4.abrupt(\"return\", result);\n\n            case 17:\n              _context4.next = 23;\n              break;\n\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log(_context4.t0);\n              return _context4.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 19]]);\n    }));\n\n    function RejectTask(_x2) {\n      return _RejectTask.apply(this, arguments);\n    }\n\n    return RejectTask;\n  }(),\n  AcceptTask: function () {\n    var _AcceptTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              endPoint = \"AcceptTask/\".concat(task_id); //user_id,task_id\n\n              _context5.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context5.sent;\n\n              if (!(result.data == false)) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context5.sent;\n\n              if (!(data == true)) {\n                _context5.next = 14;\n                break;\n              }\n\n              _context5.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context5.sent;\n              return _context5.abrupt(\"return\", Result);\n\n            case 14:\n              _context5.next = 17;\n              break;\n\n            case 16:\n              return _context5.abrupt(\"return\", result);\n\n            case 17:\n              _context5.next = 23;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](0);\n              console.log(_context5.t0);\n              return _context5.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 19]]);\n    }));\n\n    function AcceptTask(_x3) {\n      return _AcceptTask.apply(this, arguments);\n    }\n\n    return AcceptTask;\n  }(),\n  getCompletedTask: function () {\n    var _getCompletedTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              endPoint = \"completedTask\";\n              _context6.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context6.sent;\n\n              if (!(result.data == false)) {\n                _context6.next = 16;\n                break;\n              }\n\n              _context6.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context6.sent;\n\n              if (!(data == true)) {\n                _context6.next = 14;\n                break;\n              }\n\n              _context6.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context6.sent;\n              return _context6.abrupt(\"return\", Result);\n\n            case 14:\n              _context6.next = 17;\n              break;\n\n            case 16:\n              return _context6.abrupt(\"return\", result);\n\n            case 17:\n              _context6.next = 21;\n              break;\n\n            case 19:\n              _context6.prev = 19;\n              _context6.t0 = _context6[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 19]]);\n    }));\n\n    function getCompletedTask() {\n      return _getCompletedTask.apply(this, arguments);\n    }\n\n    return getCompletedTask;\n  }(),\n  getOrdersInprogress: function () {\n    var _getOrdersInprogress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              endPoint = \"inprogress\";\n              _context7.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context7.sent;\n\n              if (!(result.data == false)) {\n                _context7.next = 16;\n                break;\n              }\n\n              _context7.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context7.sent;\n\n              if (!(data == true)) {\n                _context7.next = 14;\n                break;\n              }\n\n              _context7.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context7.sent;\n              return _context7.abrupt(\"return\", Result);\n\n            case 14:\n              _context7.next = 17;\n              break;\n\n            case 16:\n              return _context7.abrupt(\"return\", result);\n\n            case 17:\n              _context7.next = 21;\n              break;\n\n            case 19:\n              _context7.prev = 19;\n              _context7.t0 = _context7[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[0, 19]]);\n    }));\n\n    function getOrdersInprogress() {\n      return _getOrdersInprogress.apply(this, arguments);\n    }\n\n    return getOrdersInprogress;\n  }(),\n  cancelOrder: function () {\n    var _cancelOrder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(task_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              endPoint = \"cancelOrder/\".concat(task_id);\n              _context8.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context8.sent;\n\n              if (!(result.data == false)) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context8.sent;\n\n              if (!(data == true)) {\n                _context8.next = 14;\n                break;\n              }\n\n              _context8.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context8.sent;\n              return _context8.abrupt(\"return\", Result);\n\n            case 14:\n              _context8.next = 17;\n              break;\n\n            case 16:\n              return _context8.abrupt(\"return\", result);\n\n            case 17:\n              _context8.next = 21;\n              break;\n\n            case 19:\n              _context8.prev = 19;\n              _context8.t0 = _context8[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 19]]);\n    }));\n\n    function cancelOrder(_x4) {\n      return _cancelOrder.apply(this, arguments);\n    }\n\n    return cancelOrder;\n  }(),\n  uploadFiles: function () {\n    var _uploadFiles = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(task_id, validFiles) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              //try {\n              formData = new FormData();\n              formData.append('files', validFiles);\n              formData.append(\"x-access-key\", Tokens().accessToken);\n              formData.append(\"x-access-token\", Tokens().refreshToken);\n              _context10.next = 6;\n              return axios.post(Urls.fileUploadUrl, formData, {\n                headers: {\n                  'content-type': 'multipart/form-data'\n                }\n              }).then( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(resp) {\n                  var _resp$data, error, url, endPoint, result, data, Result;\n\n                  return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                    while (1) {\n                      switch (_context9.prev = _context9.next) {\n                        case 0:\n                          // alert(resp.data);\n                          _resp$data = resp.data, error = _resp$data.error, url = _resp$data.url;\n                          formData.append('path', url);\n\n                          if (error) {\n                            _context9.next = 27;\n                            break;\n                          }\n\n                          endPoint = \"FileUpload/\".concat(task_id); //user_id,task_id\n\n                          _context9.prev = 4;\n                          _context9.next = 7;\n                          return Axios.post(endPoint, formData);\n\n                        case 7:\n                          result = _context9.sent;\n\n                          if (!(result.data == false)) {\n                            _context9.next = 20;\n                            break;\n                          }\n\n                          _context9.next = 11;\n                          return UpdateToken(Tokens().refreshToken);\n\n                        case 11:\n                          data = _context9.sent;\n\n                          if (!(data == true)) {\n                            _context9.next = 18;\n                            break;\n                          }\n\n                          _context9.next = 15;\n                          return Axios.post(endPoint, formData);\n\n                        case 15:\n                          Result = _context9.sent;\n                          formData = \"\";\n                          return _context9.abrupt(\"return\", Result.data);\n\n                        case 18:\n                          _context9.next = 22;\n                          break;\n\n                        case 20:\n                          formData = \"\";\n                          return _context9.abrupt(\"return\", result.data);\n\n                        case 22:\n                          _context9.next = 27;\n                          break;\n\n                        case 24:\n                          _context9.prev = 24;\n                          _context9.t0 = _context9[\"catch\"](4);\n                          formData = \"\"; //  console.log(error);\n\n                        case 27:\n                        case \"end\":\n                          return _context9.stop();\n                      }\n                    }\n                  }, _callee9, null, [[4, 24]]);\n                }));\n\n                return function (_x7) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n\n            case 6:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    function uploadFiles(_x5, _x6) {\n      return _uploadFiles.apply(this, arguments);\n    }\n\n    return uploadFiles;\n  }(),\n  SubmitTask2: function () {\n    var _SubmitTask = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(file) {\n      var formData, result, ImagePath;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('files', file);\n              formData.append('control', 'submitTask'); //formData.append( \"x-access-key\", Tokens().accessToken)\n              // formData.append(\"x-access-token\",Tokens().refreshToken);\n\n              _context11.next = 5;\n              return axios.post(Urls.fileUploadUrl, formData);\n\n            case 5:\n              result = _context11.sent;\n\n              if (!(result.data.status === \"success\")) {\n                _context11.next = 11;\n                break;\n              }\n\n              ImagePath = result.data.url;\n              return _context11.abrupt(\"return\", ImagePath);\n\n            case 11:\n              return _context11.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    function SubmitTask2(_x8) {\n      return _SubmitTask.apply(this, arguments);\n    }\n\n    return SubmitTask2;\n  }(),\n  SubmitTask: function () {\n    var _SubmitTask2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(file, task_id) {\n      var data, endPoint, result, _data, Result;\n\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              data = \"?FilePath=\" + file;\n              endPoint = \"SubmitTask/\".concat(task_id) + data; //user_id,task_id\n              // alert(resp.data);\n              //const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n\n              _context12.prev = 2;\n              _context12.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context12.sent;\n\n              if (!(result.data == false)) {\n                _context12.next = 17;\n                break;\n              }\n\n              _context12.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data = _context12.sent;\n\n              if (!(_data == true)) {\n                _context12.next = 15;\n                break;\n              }\n\n              _context12.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context12.sent;\n              return _context12.abrupt(\"return\", Result.data);\n\n            case 15:\n              _context12.next = 18;\n              break;\n\n            case 17:\n              return _context12.abrupt(\"return\", result.data);\n\n            case 18:\n              _context12.next = 22;\n              break;\n\n            case 20:\n              _context12.prev = 20;\n              _context12.t0 = _context12[\"catch\"](2);\n\n            case 22:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[2, 20]]);\n    }));\n\n    function SubmitTask(_x9, _x10) {\n      return _SubmitTask2.apply(this, arguments);\n    }\n\n    return SubmitTask;\n  }(),\n  getTaskBeingReviewed: function () {\n    var _getTaskBeingReviewed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              endPoint = \"TaskBeingReviewd\";\n              _context13.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context13.sent;\n\n              if (!(result.data == false)) {\n                _context13.next = 16;\n                break;\n              }\n\n              _context13.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context13.sent;\n\n              if (!(data == true)) {\n                _context13.next = 14;\n                break;\n              }\n\n              _context13.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context13.sent;\n              return _context13.abrupt(\"return\", Result);\n\n            case 14:\n              _context13.next = 17;\n              break;\n\n            case 16:\n              return _context13.abrupt(\"return\", result);\n\n            case 17:\n              _context13.next = 21;\n              break;\n\n            case 19:\n              _context13.prev = 19;\n              _context13.t0 = _context13[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 19]]);\n    }));\n\n    function getTaskBeingReviewed() {\n      return _getTaskBeingReviewed.apply(this, arguments);\n    }\n\n    return getTaskBeingReviewed;\n  }(),\n  getCancelled: function () {\n    var _getCancelled = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.prev = 0;\n              endPoint = \"Cancelled\";\n              _context14.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context14.sent;\n\n              if (!(result.data == false)) {\n                _context14.next = 16;\n                break;\n              }\n\n              _context14.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context14.sent;\n\n              if (!(data == true)) {\n                _context14.next = 14;\n                break;\n              }\n\n              _context14.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context14.sent;\n              return _context14.abrupt(\"return\", Result);\n\n            case 14:\n              _context14.next = 17;\n              break;\n\n            case 16:\n              return _context14.abrupt(\"return\", result);\n\n            case 17:\n              _context14.next = 21;\n              break;\n\n            case 19:\n              _context14.prev = 19;\n              _context14.t0 = _context14[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14, null, [[0, 19]]);\n    }));\n\n    function getCancelled() {\n      return _getCancelled.apply(this, arguments);\n    }\n\n    return getCancelled;\n  }(),\n  getOrdersInRevision: function () {\n    var _getOrdersInRevision = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.prev = 0;\n              endPoint = \"Revision\";\n              _context15.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context15.sent;\n\n              if (!(result.data == false)) {\n                _context15.next = 16;\n                break;\n              }\n\n              _context15.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context15.sent;\n\n              if (!(data == true)) {\n                _context15.next = 14;\n                break;\n              }\n\n              _context15.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context15.sent;\n              return _context15.abrupt(\"return\", Result);\n\n            case 14:\n              _context15.next = 17;\n              break;\n\n            case 16:\n              return _context15.abrupt(\"return\", result);\n\n            case 17:\n              _context15.next = 21;\n              break;\n\n            case 19:\n              _context15.prev = 19;\n              _context15.t0 = _context15[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15, null, [[0, 19]]);\n    }));\n\n    function getOrdersInRevision() {\n      return _getOrdersInRevision.apply(this, arguments);\n    }\n\n    return getOrdersInRevision;\n  }(),\n  getUnpaidOrders: function () {\n    var _getUnpaidOrders = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.prev = 0;\n              endPoint = \"Unpaid\";\n              _context16.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context16.sent;\n\n              if (!(result.data == false)) {\n                _context16.next = 16;\n                break;\n              }\n\n              _context16.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context16.sent;\n\n              if (!(data == true)) {\n                _context16.next = 14;\n                break;\n              }\n\n              _context16.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context16.sent;\n              return _context16.abrupt(\"return\", Result);\n\n            case 14:\n              _context16.next = 17;\n              break;\n\n            case 16:\n              return _context16.abrupt(\"return\", result);\n\n            case 17:\n              _context16.next = 21;\n              break;\n\n            case 19:\n              _context16.prev = 19;\n              _context16.t0 = _context16[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16, null, [[0, 19]]);\n    }));\n\n    function getUnpaidOrders() {\n      return _getUnpaidOrders.apply(this, arguments);\n    }\n\n    return getUnpaidOrders;\n  }(),\n  LoadInvoices: function () {\n    var _LoadInvoices = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.prev = 0;\n              endPoint = \"LoadInvoices\";\n              _context17.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context17.sent;\n\n              if (!(result.data == false)) {\n                _context17.next = 16;\n                break;\n              }\n\n              _context17.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context17.sent;\n\n              if (!(data == true)) {\n                _context17.next = 14;\n                break;\n              }\n\n              _context17.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context17.sent;\n              return _context17.abrupt(\"return\", Result);\n\n            case 14:\n              _context17.next = 17;\n              break;\n\n            case 16:\n              return _context17.abrupt(\"return\", result);\n\n            case 17:\n              _context17.next = 21;\n              break;\n\n            case 19:\n              _context17.prev = 19;\n              _context17.t0 = _context17[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17, null, [[0, 19]]);\n    }));\n\n    function LoadInvoices() {\n      return _LoadInvoices.apply(this, arguments);\n    }\n\n    return LoadInvoices;\n  }(),\n  LoadInvoicesData: function () {\n    var _LoadInvoicesData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(invoiceId) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.prev = 0;\n              endPoint = \"LoadInvoiceData/\".concat(invoiceId);\n              _context18.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context18.sent;\n\n              if (!(result.data == false)) {\n                _context18.next = 16;\n                break;\n              }\n\n              _context18.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context18.sent;\n\n              if (!(data == true)) {\n                _context18.next = 14;\n                break;\n              }\n\n              _context18.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context18.sent;\n              return _context18.abrupt(\"return\", Result);\n\n            case 14:\n              _context18.next = 17;\n              break;\n\n            case 16:\n              return _context18.abrupt(\"return\", result);\n\n            case 17:\n              _context18.next = 21;\n              break;\n\n            case 19:\n              _context18.prev = 19;\n              _context18.t0 = _context18[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18, null, [[0, 19]]);\n    }));\n\n    function LoadInvoicesData(_x11) {\n      return _LoadInvoicesData.apply(this, arguments);\n    }\n\n    return LoadInvoicesData;\n  }(),\n  getUserDetails: function () {\n    var _getUserDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.prev = 0;\n              endPoint = \"getUserDetails\";\n              _context19.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context19.sent;\n\n              if (!(result.data == false)) {\n                _context19.next = 16;\n                break;\n              }\n\n              _context19.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context19.sent;\n\n              if (!(data == true)) {\n                _context19.next = 14;\n                break;\n              }\n\n              _context19.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context19.sent;\n              return _context19.abrupt(\"return\", Result);\n\n            case 14:\n              _context19.next = 17;\n              break;\n\n            case 16:\n              return _context19.abrupt(\"return\", result);\n\n            case 17:\n              _context19.next = 21;\n              break;\n\n            case 19:\n              _context19.prev = 19;\n              _context19.t0 = _context19[\"catch\"](0);\n\n            case 21:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[0, 19]]);\n    }));\n\n    function getUserDetails() {\n      return _getUserDetails.apply(this, arguments);\n    }\n\n    return getUserDetails;\n  }(),\n  UpdateProfile2: function () {\n    var _UpdateProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(profile) {\n      var formData, result, ImagePath;\n      return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n        while (1) {\n          switch (_context20.prev = _context20.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('files', profile);\n              formData.append('control', 'writerProfile'); //formData.append( \"x-access-key\", Tokens().accessToken)\n              // formData.append(\"x-access-token\",Tokens().refreshToken);\n\n              _context20.next = 5;\n              return axios.post(Urls.fileUploadUrl, formData);\n\n            case 5:\n              result = _context20.sent;\n\n              if (!(result.data.status === \"success\")) {\n                _context20.next = 11;\n                break;\n              }\n\n              ImagePath = result.data.url;\n              return _context20.abrupt(\"return\", ImagePath);\n\n            case 11:\n              return _context20.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context20.stop();\n          }\n        }\n      }, _callee20);\n    }));\n\n    function UpdateProfile2(_x12) {\n      return _UpdateProfile.apply(this, arguments);\n    }\n\n    return UpdateProfile2;\n  }(),\n  UpdateProfile: function () {\n    var _UpdateProfile2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(profile) {\n      var data, endPoint, result, _data2, Result;\n\n      return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n        while (1) {\n          switch (_context21.prev = _context21.next) {\n            case 0:\n              data = \"?imagePath=\" + profile;\n              endPoint = \"updateProfile\" + data; //user_id,task_id\n              //await sendUpload(endPoint,formData);\n\n              _context21.prev = 2;\n              _context21.next = 5;\n              return Axios.post(endPoint, body());\n\n            case 5:\n              result = _context21.sent;\n\n              if (!(result.data == false)) {\n                _context21.next = 17;\n                break;\n              }\n\n              _context21.next = 9;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 9:\n              _data2 = _context21.sent;\n\n              if (!(_data2 == true)) {\n                _context21.next = 15;\n                break;\n              }\n\n              _context21.next = 13;\n              return Axios.post(endPoint, body());\n\n            case 13:\n              Result = _context21.sent;\n              return _context21.abrupt(\"return\", Result.data);\n\n            case 15:\n              _context21.next = 18;\n              break;\n\n            case 17:\n              return _context21.abrupt(\"return\", result.data);\n\n            case 18:\n              _context21.next = 22;\n              break;\n\n            case 20:\n              _context21.prev = 20;\n              _context21.t0 = _context21[\"catch\"](2);\n\n            case 22:\n            case \"end\":\n              return _context21.stop();\n          }\n        }\n      }, _callee21, null, [[2, 20]]);\n    }));\n\n    function UpdateProfile(_x13) {\n      return _UpdateProfile2.apply(this, arguments);\n    }\n\n    return UpdateProfile;\n  }(),\n  UpdateData: function () {\n    var _UpdateData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(data) {\n      var endPoint, result, _data3, Result;\n\n      return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n        while (1) {\n          switch (_context22.prev = _context22.next) {\n            case 0:\n              endPoint = \"UpdateProfileData?\" + data; //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context22.prev = 1;\n              _context22.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context22.sent;\n\n              if (!(result.data == false)) {\n                _context22.next = 16;\n                break;\n              }\n\n              _context22.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              _data3 = _context22.sent;\n\n              if (!(_data3 == true)) {\n                _context22.next = 14;\n                break;\n              }\n\n              _context22.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context22.sent;\n              return _context22.abrupt(\"return\", Result);\n\n            case 14:\n              _context22.next = 17;\n              break;\n\n            case 16:\n              return _context22.abrupt(\"return\", result);\n\n            case 17:\n              _context22.next = 23;\n              break;\n\n            case 19:\n              _context22.prev = 19;\n              _context22.t0 = _context22[\"catch\"](1);\n              console.log(_context22.t0);\n              return _context22.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context22.stop();\n          }\n        }\n      }, _callee22, null, [[1, 19]]);\n    }));\n\n    function UpdateData(_x14) {\n      return _UpdateData.apply(this, arguments);\n    }\n\n    return UpdateData;\n  }(),\n  clearReadNotification: function () {\n    var _clearReadNotification = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(notification_id) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              endPoint = \"clearReadNotification/\".concat(notification_id); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context23.prev = 1;\n              _context23.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context23.sent;\n\n              if (!(result.data == false)) {\n                _context23.next = 16;\n                break;\n              }\n\n              _context23.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context23.sent;\n\n              if (!(data == true)) {\n                _context23.next = 14;\n                break;\n              }\n\n              _context23.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context23.sent;\n              return _context23.abrupt(\"return\", Result);\n\n            case 14:\n              _context23.next = 17;\n              break;\n\n            case 16:\n              return _context23.abrupt(\"return\", result);\n\n            case 17:\n              _context23.next = 22;\n              break;\n\n            case 19:\n              _context23.prev = 19;\n              _context23.t0 = _context23[\"catch\"](1);\n              return _context23.abrupt(\"return\", []);\n\n            case 22:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, _callee23, null, [[1, 19]]);\n    }));\n\n    function clearReadNotification(_x15) {\n      return _clearReadNotification.apply(this, arguments);\n    }\n\n    return clearReadNotification;\n  }(),\n  loadChatUsers: function () {\n    var _loadChatUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(sender, receiver, taskid) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n        while (1) {\n          switch (_context24.prev = _context24.next) {\n            case 0:\n              endPoint = \"chatUsers/\".concat(sender, \"/\").concat(receiver, \"/\").concat(taskid); //user_id,task_id\n              //?invoice=${invoice}&task_id=${task_id}\n\n              _context24.prev = 1;\n              _context24.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context24.sent;\n\n              if (!(result.data == false)) {\n                _context24.next = 16;\n                break;\n              }\n\n              _context24.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context24.sent;\n\n              if (!(data == true)) {\n                _context24.next = 14;\n                break;\n              }\n\n              _context24.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context24.sent;\n              return _context24.abrupt(\"return\", Result);\n\n            case 14:\n              _context24.next = 17;\n              break;\n\n            case 16:\n              return _context24.abrupt(\"return\", result);\n\n            case 17:\n              _context24.next = 22;\n              break;\n\n            case 19:\n              _context24.prev = 19;\n              _context24.t0 = _context24[\"catch\"](1);\n              return _context24.abrupt(\"return\", []);\n\n            case 22:\n            case \"end\":\n              return _context24.stop();\n          }\n        }\n      }, _callee24, null, [[1, 19]]);\n    }));\n\n    function loadChatUsers(_x16, _x17, _x18) {\n      return _loadChatUsers.apply(this, arguments);\n    }\n\n    return loadChatUsers;\n  }(),\n  getOpenTickets: function () {\n    var _getOpenTickets = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25() {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n        while (1) {\n          switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.prev = 0;\n              endPoint = \"Tickets\";\n              _context25.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context25.sent;\n\n              if (!(result.data == false)) {\n                _context25.next = 16;\n                break;\n              }\n\n              _context25.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context25.sent;\n\n              if (!(data == true)) {\n                _context25.next = 14;\n                break;\n              }\n\n              _context25.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context25.sent;\n              return _context25.abrupt(\"return\", Result);\n\n            case 14:\n              _context25.next = 17;\n              break;\n\n            case 16:\n              return _context25.abrupt(\"return\", result);\n\n            case 17:\n              _context25.next = 23;\n              break;\n\n            case 19:\n              _context25.prev = 19;\n              _context25.t0 = _context25[\"catch\"](0);\n              return _context25.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context25.stop();\n          }\n        }\n      }, _callee25, null, [[0, 19]]);\n    }));\n\n    function getOpenTickets() {\n      return _getOpenTickets.apply(this, arguments);\n    }\n\n    return getOpenTickets;\n  }(),\n  ActivateAcount: function () {\n    var _ActivateAcount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(Key) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n        while (1) {\n          switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.prev = 0;\n              // alert(Key)\n              endPoint = \"activate/\".concat(Key);\n              _context26.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context26.sent;\n\n              if (!(result.data == false)) {\n                _context26.next = 16;\n                break;\n              }\n\n              _context26.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context26.sent;\n\n              if (!(data == true)) {\n                _context26.next = 14;\n                break;\n              }\n\n              _context26.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context26.sent;\n              return _context26.abrupt(\"return\", Result);\n\n            case 14:\n              _context26.next = 17;\n              break;\n\n            case 16:\n              return _context26.abrupt(\"return\", result);\n\n            case 17:\n              _context26.next = 22;\n              break;\n\n            case 19:\n              _context26.prev = 19;\n              _context26.t0 = _context26[\"catch\"](0);\n              //return[];\n              console.log(_context26.t0);\n\n            case 22:\n            case \"end\":\n              return _context26.stop();\n          }\n        }\n      }, _callee26, null, [[0, 19]]);\n    }));\n\n    function ActivateAcount(_x19) {\n      return _ActivateAcount.apply(this, arguments);\n    }\n\n    return ActivateAcount;\n  }(),\n  ForgotPassword: function () {\n    var _ForgotPassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27(email) {\n      var endPoint, result, data, Result;\n      return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n        while (1) {\n          switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.prev = 0;\n              endPoint = \"Forgot/\".concat(email);\n              _context27.next = 4;\n              return Axios.post(endPoint, body());\n\n            case 4:\n              result = _context27.sent;\n\n              if (!(result.data == false)) {\n                _context27.next = 16;\n                break;\n              }\n\n              _context27.next = 8;\n              return UpdateToken(Tokens().refreshToken);\n\n            case 8:\n              data = _context27.sent;\n\n              if (!(data == true)) {\n                _context27.next = 14;\n                break;\n              }\n\n              _context27.next = 12;\n              return Axios.post(endPoint, body());\n\n            case 12:\n              Result = _context27.sent;\n              return _context27.abrupt(\"return\", Result);\n\n            case 14:\n              _context27.next = 17;\n              break;\n\n            case 16:\n              return _context27.abrupt(\"return\", result);\n\n            case 17:\n              _context27.next = 23;\n              break;\n\n            case 19:\n              _context27.prev = 19;\n              _context27.t0 = _context27[\"catch\"](0);\n              return _context27.abrupt(\"return\", []);\n\n            case 23:\n            case \"end\":\n              return _context27.stop();\n          }\n        }\n      }, _callee27, null, [[0, 19]]);\n    }));\n\n    function ForgotPassword(_x20) {\n      return _ForgotPassword.apply(this, arguments);\n    }\n\n    return ForgotPassword;\n  }()\n};\nexport default ApiRequest;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/Api/Requests/Apirequest.js"],"names":["Invoice","Axios","axios","Urls","require","Tokens","UpdateToken","body","accessToken","refreshToken","ApiRequest","DashBoardData","endPoint","post","result","data","Result","getAssignedTask","getSingleTaskFullDetails","task_id","console","log","RejectTask","AcceptTask","getCompletedTask","getOrdersInprogress","cancelOrder","uploadFiles","validFiles","formData","FormData","append","fileUploadUrl","headers","then","resp","error","url","SubmitTask2","file","status","ImagePath","SubmitTask","getTaskBeingReviewed","getCancelled","getOrdersInRevision","getUnpaidOrders","LoadInvoices","LoadInvoicesData","invoiceId","getUserDetails","UpdateProfile2","profile","UpdateProfile","UpdateData","clearReadNotification","notification_id","loadChatUsers","sender","receiver","taskid","getOpenTickets","ActivateAcount","Key","ForgotPassword","email"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,gCAApB;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,eAAgCC,OAAO,CAAC,wBAAD,CAAvC;AAAA,IAAQC,MAAR,YAAQA,MAAR;AAAA,IAAgBC,WAAhB,YAAgBA,WAAhB,C,CAEA;;;AAGA,IAAMC,IAAI,GAAE,SAANA,IAAM,GAAI;AACX,SAAM;AACH,oBAAgBF,MAAM,GAAGG,WADtB;AAEH,sBAAkBH,MAAM,GAAGI;AAFxB,GAAN;AAIA,CALL;;AAOA,IAAMC,UAAU,GAAE;AACdC,EAAAA,aAAa;AAAA,kFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,cAAAA,QAFA;AAAA;AAAA,qBAIeX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJf;;AAAA;AAIAO,cAAAA,MAJA;;AAAA,oBAKHA,MAAM,CAACC,IAAP,IAAe,KALZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOiBT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAP5B;;AAAA;AAOIM,cAAAA,IAPJ;;AAAA,oBAQCA,IAAI,IAAI,IART;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUqBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAVrB;;AAAA;AAUMS,cAAAA,MAVN;AAAA,+CAWOA,MAXP;;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAeKF,MAfL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADC;AAuBfG,EAAAA,eAAe;AAAA,oFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGLL,cAAAA,QAHK;AAAA;AAAA,qBAKUX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALV;;AAAA;AAKLO,cAAAA,MALK;;AAAA,oBAMRA,MAAM,CAACC,IAAP,IAAe,KANP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQYT,WAAW,CAACD,MAAM,GAAGI,YAAV,CARvB;;AAAA;AAQDM,cAAAA,IARC;;AAAA,oBASJA,IAAI,IAAI,IATJ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWgBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXhB;;AAAA;AAWCS,cAAAA,MAXD;AAAA,gDAYEA,MAZF;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAgBAF,MAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAvBA;AA6CfI,EAAAA,wBAAwB;AAAA,6FAAC,kBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhBP,cAAAA,QAJgB,kCAIkBO,OAJlB,GAI4B;;AAJ5B;AAAA,qBAMDlB,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CANC;;AAAA;AAMhBO,cAAAA,MANgB;;AAAA,oBAQnBA,MAAM,CAACC,IAAP,IAAe,KARI;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUCT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAVZ;;AAAA;AAUZM,cAAAA,IAVY;;AAAA,oBAWfA,IAAI,IAAI,IAXO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAaKd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAbL;;AAAA;AAaVS,cAAAA,MAbU;AAAA,gDAcTA,MAdS;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAkBXF,MAlBW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAuBtBM,cAAAA,OAAO,CAACC,GAAR;AAvBsB,gDAwBf,EAxBe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7CT;AAyEdC,EAAAA,UAAU;AAAA,+EAAC,kBAAOH,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGHP,cAAAA,QAHG,wBAGqBO,OAHrB,GAG+B;;AAH/B;AAAA,qBAKYlB,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALZ;;AAAA;AAKHO,cAAAA,MALG;;AAAA,oBAONA,MAAM,CAACC,IAAP,IAAe,KAPT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAScT,WAAW,CAACD,MAAM,GAAGI,YAAV,CATzB;;AAAA;AASCM,cAAAA,IATD;;AAAA,oBAUFA,IAAI,IAAI,IAVN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYkBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAZlB;;AAAA;AAYGS,cAAAA,MAZH;AAAA,gDAaIA,MAbJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAiBEF,MAjBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBTM,cAAAA,OAAO,CAACC,GAAR;AAtBS,gDAuBF,EAvBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzEI;AAoGdE,EAAAA,UAAU;AAAA,+EAAC,kBAAOJ,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGHP,cAAAA,QAHG,wBAGqBO,OAHrB,GAG+B;;AAH/B;AAAA,qBAKYlB,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALZ;;AAAA;AAKHO,cAAAA,MALG;;AAAA,oBAONA,MAAM,CAACC,IAAP,IAAe,KAPT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAScT,WAAW,CAACD,MAAM,GAAGI,YAAV,CATzB;;AAAA;AASCM,cAAAA,IATD;;AAAA,oBAUFA,IAAI,IAAI,IAVN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYkBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAZlB;;AAAA;AAYGS,cAAAA,MAZH;AAAA,gDAaIA,MAbJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAiBEF,MAjBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBTM,cAAAA,OAAO,CAACC,GAAR;AAtBS,gDAuBF,EAvBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApGI;AA8HdG,EAAAA,gBAAgB;AAAA,qFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEPZ,cAAAA,QAFO;AAAA;AAAA,qBAIQX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJR;;AAAA;AAIPO,cAAAA,MAJO;;AAAA,oBAKVA,MAAM,CAACC,IAAP,IAAe,KALL;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOUT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAPrB;;AAAA;AAOHM,cAAAA,IAPG;;AAAA,oBAQNA,IAAI,IAAI,IARF;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUcd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAVd;;AAAA;AAUDS,cAAAA,MAVC;AAAA,gDAWAA,MAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAeFF,MAfE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9HF;AAmJdW,EAAAA,mBAAmB;AAAA,wFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGVb,cAAAA,QAHU;AAAA;AAAA,qBAKKX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALL;;AAAA;AAKVO,cAAAA,MALU;;AAAA,oBAMbA,MAAM,CAACC,IAAP,IAAe,KANF;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQOT,WAAW,CAACD,MAAM,GAAGI,YAAV,CARlB;;AAAA;AAQNM,cAAAA,IARM;;AAAA,oBASTA,IAAI,IAAI,IATC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWWd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXX;;AAAA;AAWJS,cAAAA,MAXI;AAAA,gDAYHA,MAZG;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAgBLF,MAhBK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAnJL;AA0KdY,EAAAA,WAAW;AAAA,gFAAC,kBAAMP,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEFP,cAAAA,QAFE,yBAEuBO,OAFvB;AAAA;AAAA,qBAIalB,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJb;;AAAA;AAIFO,cAAAA,MAJE;;AAAA,oBAKLA,MAAM,CAACC,IAAP,IAAe,KALV;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOeT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAP1B;;AAAA;AAOEM,cAAAA,IAPF;;AAAA,oBAQDA,IAAI,IAAI,IARP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUmBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAVnB;;AAAA;AAUIS,cAAAA,MAVJ;AAAA,gDAWKA,MAXL;;AAAA;AAAA;AAAA;;AAAA;AAAA,gDAeGF,MAfH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA1KG;AAiMda,EAAAA,WAAW;AAAA,gFAAC,mBAAOR,OAAP,EAAeS,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACV;AAGQC,cAAAA,QAJE,GAIS,IAAIC,QAAJ,EAJT;AAKND,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,UAAzB;AACAC,cAAAA,QAAQ,CAACE,MAAT,CAAiB,cAAjB,EAAiC1B,MAAM,GAAGG,WAA1C;AACAqB,cAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAiC1B,MAAM,GAAGI,YAA1C;AAPM;AAAA,qBAUAP,KAAK,CAACW,IAAN,CAAWV,IAAI,CAAC6B,aAAhB,EAA+BH,QAA/B,EAAwC;AAC5CI,gBAAAA,OAAO,EAAE;AACL,kCAAgB;AADX;AADmC,eAAxC,EAKPC,IALO;AAAA,oFAKF,kBAAOC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACH;AADG,uCAEeA,IAAI,CAACpB,IAFpB,EAEEqB,KAFF,cAEEA,KAFF,EAEQC,GAFR,cAEQA,GAFR;AAGHR,0BAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBM,GAAvB;;AAHG,8BAMCD,KAND;AAAA;AAAA;AAAA;;AAOIxB,0BAAAA,QAPJ,wBAO4BO,OAP5B,GAOsC;;AAPtC;AAAA;AAAA,iCAWqBlB,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBiB,QAApB,CAXrB;;AAAA;AAWMf,0BAAAA,MAXN;;AAAA,gCAcGA,MAAM,CAACC,IAAP,IAAe,KAdlB;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAgBuBT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAhBlC;;AAAA;AAgBUM,0BAAAA,IAhBV;;AAAA,gCAkBOA,IAAI,IAAI,IAlBf;AAAA;AAAA;AAAA;;AAAA;AAAA,iCAoB2Bd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBiB,QAApB,CApB3B;;AAAA;AAoBYb,0BAAAA,MApBZ;AAsBMa,0BAAAA,QAAQ,GAAC,EAAT;AAtBN,4DAuBab,MAAM,CAACD,IAvBpB;;AAAA;AAAA;AAAA;;AAAA;AA2BEc,0BAAAA,QAAQ,GAAC,EAAT;AA3BF,4DA4Baf,MAAM,CAACC,IA5BpB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiCAc,0BAAAA,QAAQ,GAAC,EAAT,CAjCA,CAkCA;;AAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALE;;AAAA;AAAA;AAAA;AAAA,kBAVA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAjMG;AA0QVS,EAAAA,WAAW;AAAA,+EAAC,mBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACNV,cAAAA,QADM,GACK,IAAIC,QAAJ,EADL;AAEVD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBQ,IAAzB;AACAV,cAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,YAA1B,EAHU,CAIV;AACD;;AALW;AAAA,qBAOY7B,KAAK,CAACW,IAAN,CAAWV,IAAI,CAAC6B,aAAhB,EAA8BH,QAA9B,CAPZ;;AAAA;AAOHf,cAAAA,MAPG;;AAAA,oBAUTA,MAAM,CAACC,IAAP,CAAYyB,MAAZ,KAAwB,SAVf;AAAA;AAAA;AAAA;;AAWJC,cAAAA,SAXI,GAWQ3B,MAAM,CAACC,IAAP,CAAYsB,GAXpB;AAAA,iDAYDI,SAZC;;AAAA;AAAA,iDAeH,KAfG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA1QD;AAgSdC,EAAAA,UAAU;AAAA,gFAAC,mBAAOH,IAAP,EAAYpB,OAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLJ,cAAAA,IADK,GACE,eAAawB,IADf;AAEH3B,cAAAA,QAFG,GAEO,qBAAcO,OAAd,IAAwBJ,IAF/B,EAEoC;AAKxC;AAMC;;AAbG;AAAA;AAAA,qBAiBoBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAjBpB;;AAAA;AAiBKO,cAAAA,MAjBL;;AAAA,oBAoBEA,MAAM,CAACC,IAAP,IAAe,KApBjB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAsBsBT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAtBjC;;AAAA;AAsBSM,cAAAA,KAtBT;;AAAA,oBAwBMA,KAAI,IAAI,IAxBd;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA0B0Bd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CA1B1B;;AAAA;AA0BWS,cAAAA,MA1BX;AAAA,iDA6BYA,MAAM,CAACD,IA7BnB;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAkCYD,MAAM,CAACC,IAlCnB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhSI;AA8Wd4B,EAAAA,oBAAoB;AAAA,yFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGX/B,cAAAA,QAHW;AAAA;AAAA,qBAKIX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALJ;;AAAA;AAKXO,cAAAA,MALW;;AAAA,oBAMdA,MAAM,CAACC,IAAP,IAAe,KAND;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQMT,WAAW,CAACD,MAAM,GAAGI,YAAV,CARjB;;AAAA;AAQPM,cAAAA,IARO;;AAAA,oBASVA,IAAI,IAAI,IATE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWUd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXV;;AAAA;AAWLS,cAAAA,MAXK;AAAA,iDAYJA,MAZI;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAgBNF,MAhBM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA9WN;AAoYd8B,EAAAA,YAAY;AAAA,iFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHhC,cAAAA,QAFG;AAAA;AAAA,qBAIYX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJZ;;AAAA;AAIHO,cAAAA,MAJG;;AAAA,oBAKNA,MAAM,CAACC,IAAP,IAAe,KALT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOcT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAPzB;;AAAA;AAOCM,cAAAA,IAPD;;AAAA,oBAQFA,IAAI,IAAI,IARN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUkBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAVlB;;AAAA;AAUGS,cAAAA,MAVH;AAAA,iDAWIA,MAXJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAeEF,MAfF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KApYE;AA0Zd+B,EAAAA,mBAAmB;AAAA,wFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVjC,cAAAA,QAFU;AAAA;AAAA,qBAIKX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJL;;AAAA;AAIVO,cAAAA,MAJU;;AAAA,oBAKbA,MAAM,CAACC,IAAP,IAAe,KALF;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOOT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAPlB;;AAAA;AAONM,cAAAA,IAPM;;AAAA,oBAQTA,IAAI,IAAI,IARC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUWd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAVX;;AAAA;AAUJS,cAAAA,MAVI;AAAA,iDAWHA,MAXG;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAeLF,MAfK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA1ZL;AAgbhBgC,EAAAA,eAAe;AAAA,oFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGRlC,cAAAA,QAHQ;AAAA;AAAA,qBAKOX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALP;;AAAA;AAKRO,cAAAA,MALQ;;AAAA,oBAMXA,MAAM,CAACC,IAAP,IAAe,KANJ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQST,WAAW,CAACD,MAAM,GAAGI,YAAV,CARpB;;AAAA;AAQJM,cAAAA,IARI;;AAAA,oBASPA,IAAI,IAAI,IATD;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWad,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXb;;AAAA;AAWFS,cAAAA,MAXE;AAAA,iDAYDA,MAZC;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAgBHF,MAhBG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhbC;AAschBiC,EAAAA,YAAY;AAAA,iFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEHnC,cAAAA,QAFG;AAAA;AAAA,qBAIYX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJZ;;AAAA;AAIHO,cAAAA,MAJG;;AAAA,oBAKNA,MAAM,CAACC,IAAP,IAAe,KALT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOcT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAPzB;;AAAA;AAOCM,cAAAA,IAPD;;AAAA,oBAQFA,IAAI,IAAI,IARN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAUkBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAVlB;;AAAA;AAUGS,cAAAA,MAVH;AAAA,iDAWIA,MAXJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAeEF,MAfF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAtcI;AA2dhBkC,EAAAA,gBAAgB;AAAA,qFAAC,mBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIPrC,cAAAA,QAJO,6BAIsBqC,SAJtB;AAAA;AAAA,qBAMQhD,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CANR;;AAAA;AAMPO,cAAAA,MANO;;AAAA,oBAOVA,MAAM,CAACC,IAAP,IAAe,KAPL;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASUT,WAAW,CAACD,MAAM,GAAGI,YAAV,CATrB;;AAAA;AASHM,cAAAA,IATG;;AAAA,oBAUNA,IAAI,IAAI,IAVF;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYcd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAZd;;AAAA;AAYDS,cAAAA,MAZC;AAAA,iDAaAA,MAbA;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAiBFF,MAjBE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3dA;AAkfhBoC,EAAAA,cAAc;AAAA,mFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGLtC,cAAAA,QAHK;AAAA;AAAA,qBAKUX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALV;;AAAA;AAKLO,cAAAA,MALK;;AAAA,oBAMRA,MAAM,CAACC,IAAP,IAAe,KANP;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQYT,WAAW,CAACD,MAAM,GAAGI,YAAV,CARvB;;AAAA;AAQDM,cAAAA,IARC;;AAAA,oBASJA,IAAI,IAAI,IATJ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWgBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXhB;;AAAA;AAWCS,cAAAA,MAXD;AAAA,iDAYEA,MAZF;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAgBAF,MAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlfE;AAygBhBqC,EAAAA,cAAc;AAAA,kFAAC,mBAAMC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACTvB,cAAAA,QADS,GACE,IAAIC,QAAJ,EADF;AAEbD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBqB,OAAzB;AACAvB,cAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0B,eAA1B,EAHa,CAIb;AACD;;AALc;AAAA,qBAOS7B,KAAK,CAACW,IAAN,CAAWV,IAAI,CAAC6B,aAAhB,EAA8BH,QAA9B,CAPT;;AAAA;AAONf,cAAAA,MAPM;;AAAA,oBAUZA,MAAM,CAACC,IAAP,CAAYyB,MAAZ,KAAwB,SAVZ;AAAA;AAAA;AAAA;;AAWPC,cAAAA,SAXO,GAWK3B,MAAM,CAACC,IAAP,CAAYsB,GAXjB;AAAA,iDAYJI,SAZI;;AAAA;AAAA,iDAeN,KAfM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzgBE;AA6hBhBY,EAAAA,aAAa;AAAA,mFAAC,mBAAOD,OAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPrC,cAAAA,IADO,GACA,gBAAcqC,OADd;AAENxC,cAAAA,QAFM,GAEI,kBAAgBG,IAFpB,EAEyB;AAGhC;;AALO;AAAA;AAAA,qBASed,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CATf;;AAAA;AASAO,cAAAA,MATA;;AAAA,oBAYHA,MAAM,CAACC,IAAP,IAAe,KAZZ;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAciBT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAd5B;;AAAA;AAcIM,cAAAA,MAdJ;;AAAA,oBAgBCA,MAAI,IAAI,IAhBT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAkBqBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAlBrB;;AAAA;AAkBMS,cAAAA,MAlBN;AAAA,iDAqBOA,MAAM,CAACD,IArBd;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDA0BKD,MAAM,CAACC,IA1BZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA7hBG;AA+jBhBuC,EAAAA,UAAU;AAAA,+EAAC,mBAAOvC,IAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEHH,cAAAA,QAFG,GAEO,uBAAqBG,IAF5B,EAEiC;AAC1C;;AAHS;AAAA;AAAA,qBAKYd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CALZ;;AAAA;AAKHO,cAAAA,MALG;;AAAA,oBAONA,MAAM,CAACC,IAAP,IAAe,KAPT;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAScT,WAAW,CAACD,MAAM,GAAGI,YAAV,CATzB;;AAAA;AASCM,cAAAA,MATD;;AAAA,oBAUFA,MAAI,IAAI,IAVN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAYkBd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAZlB;;AAAA;AAYGS,cAAAA,MAZH;AAAA,iDAaIA,MAbJ;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAiBEF,MAjBF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAsBTM,cAAAA,OAAO,CAACC,GAAR;AAtBS,iDAuBF,EAvBE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA/jBM;AAylBhBkC,EAAAA,qBAAqB;AAAA,0FAAC,mBAAOC,eAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACd5C,cAAAA,QADc,mCACqB4C,eADrB,GACuC;AAC3D;;AAFoB;AAAA;AAAA,qBAICvD,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJD;;AAAA;AAIdO,cAAAA,MAJc;;AAAA,oBAMjBA,MAAM,CAACC,IAAP,IAAe,KANE;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQGT,WAAW,CAACD,MAAM,GAAGI,YAAV,CARd;;AAAA;AAQVM,cAAAA,IARU;;AAAA,oBASbA,IAAI,IAAI,IATK;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWOd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXP;;AAAA;AAWRS,cAAAA,MAXQ;AAAA,iDAYPA,MAZO;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAgBTF,MAhBS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAsBb,EAtBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAzlBL;AAknBf2C,EAAAA,aAAa;AAAA,kFAAC,mBAAOC,MAAP,EAAcC,QAAd,EAAuBC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACPhD,cAAAA,QADO,uBACgB8C,MADhB,cAC0BC,QAD1B,cACsCC,MADtC,GAC+C;AAC5D;;AAFa;AAAA;AAAA,qBAIQ3D,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJR;;AAAA;AAIPO,cAAAA,MAJO;;AAAA,oBAMVA,MAAM,CAACC,IAAP,IAAe,KANL;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQUT,WAAW,CAACD,MAAM,GAAGI,YAAV,CARrB;;AAAA;AAQHM,cAAAA,IARG;;AAAA,oBASNA,IAAI,IAAI,IATF;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAWcd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAXd;;AAAA;AAWDS,cAAAA,MAXC;AAAA,iDAYAA,MAZA;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAgBFF,MAhBE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAsBN,EAtBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlnBE;AA2oBf+C,EAAAA,cAAc;AAAA,mFAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENjD,cAAAA,QAFM;AAAA;AAAA,qBAGSX,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAHT;;AAAA;AAGNO,cAAAA,MAHM;;AAAA,oBAKTA,MAAM,CAACC,IAAP,IAAe,KALN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAMQT,WAAW,CAACD,MAAM,GAAGI,YAAV,CANnB;;AAAA;AAMLM,cAAAA,IANK;;AAAA,oBAORA,IAAI,IAAI,IAPA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQYd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CARZ;;AAAA;AAQHS,cAAAA,MARG;AAAA,iDAUFA,MAVE;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAcDF,MAdC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAiBN,EAjBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KA3oBC;AAgqBfgD,EAAAA,cAAc;AAAA,mFAAC,mBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb;AACOnD,cAAAA,QAHM,sBAGiBmD,GAHjB;AAAA;AAAA,qBAIS9D,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAJT;;AAAA;AAINO,cAAAA,MAJM;;AAAA,oBAMTA,MAAM,CAACC,IAAP,IAAe,KANN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOQT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAPnB;;AAAA;AAOLM,cAAAA,IAPK;;AAAA,oBAQRA,IAAI,IAAI,IARA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASYd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CATZ;;AAAA;AASHS,cAAAA,MATG;AAAA,iDAWFA,MAXE;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAeDF,MAfC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBZ;AACDM,cAAAA,OAAO,CAACC,GAAR;;AAnBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAhqBC;AAsrBf2C,EAAAA,cAAc;AAAA,mFAAC,mBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENrD,cAAAA,QAFM,oBAEeqD,KAFf;AAAA;AAAA,qBAGShE,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CAHT;;AAAA;AAGNO,cAAAA,MAHM;;AAAA,oBAMTA,MAAM,CAACC,IAAP,IAAe,KANN;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOQT,WAAW,CAACD,MAAM,GAAGI,YAAV,CAPnB;;AAAA;AAOLM,cAAAA,IAPK;;AAAA,oBAQRA,IAAI,IAAI,IARA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASYd,KAAK,CAACY,IAAN,CAAWD,QAAX,EAAoBL,IAAI,EAAxB,CATZ;;AAAA;AASHS,cAAAA,MATG;AAAA,iDAWFA,MAXE;;AAAA;AAAA;AAAA;;AAAA;AAAA,iDAeDF,MAfC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAkBN,EAlBM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAtrBC,CAAlB;AAgtBA,eAAgBJ,UAAhB","sourcesContent":["import Invoice from \"src/views/base/Invoice/invoice\";\nimport Axios from \"../config\";\nimport axios from 'axios';\nimport Urls from \"../urls\";\n\nconst { Tokens, UpdateToken } = require(\"../authThenticateToken\");\n\n//import Axios from \"../config\";\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\nconst ApiRequest ={\n    DashBoardData:async()=>{\n        try {\n            const endPoint =`Dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n         // //console.log(error)\n     }\n       },\n\n   getAssignedTask:async()=>{\n    //assigned\n    try {\n        const endPoint =`assigned`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n   },\n   getSingleTaskFullDetails:async(task_id)=>{\n    //  getSingleTaskDetails\n    \n    try {\n      const endPoint =`getSingleTaskDetails/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    \n    RejectTask:async (task_id)=>{\n          \n    try {\n      const endPoint =`RejectTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    AcceptTask:async (task_id)=>{\n            \n    try {\n      const endPoint =`AcceptTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    getCompletedTask:async ()=>{\n      try {\n        const endPoint =`completedTask`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n    getOrdersInprogress:async ()=>{\n      //inprogress\n      try {\n        const endPoint =`inprogress`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n    cancelOrder:async(task_id)=>{\n      try {\n        const endPoint =`cancelOrder/${task_id}`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n\n    uploadFiles:async (task_id,validFiles) => {\n      //try {\n        \n    \n          var formData = new FormData();\n          formData.append('files', validFiles);\n          formData.append( \"x-access-key\", Tokens().accessToken)\n          formData.append(\"x-access-token\",Tokens().refreshToken);\n\n\n          await axios.post(Urls.fileUploadUrl, formData,{\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        })\n        .then(async (resp)=>{\n           // alert(resp.data);\n           var {error,url} = resp.data;\n           formData.append('path',url);\n\n\n           if(!error){\n            const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n            try {\n      \n    \n              const result = await Axios.post(endPoint,formData);\n             \n              \n              if(result.data == false)\n              {\n                  const data = await UpdateToken(Tokens().refreshToken);\n\n                  if(data == true)\n                  {\n                    const Result = await Axios.post(endPoint,formData);\n                    \n                    formData=\"\";\n                    return Result.data;\n                  }\n              }\n              else{\n                formData=\"\";\n                    return result.data;\n                }\n                  \n              \n            } catch (error) {\n              formData=\"\";\n              //  console.log(error);\n            }\n           }\n\n          // console.log(resp.data);\n\n          \n          })\n             //await sendUpload(endPoint,formData);\n           \n       \n         \n       // }\n\n       \n    // }catch(e){\n       \n    //  console.log(e);\n    //  return [];\n   //  }\n      \n       \n        },\n\n        SubmitTask2:async(file)=>{\n          var formData = new FormData();\n          formData.append('files', file);\n          formData.append('control','submitTask');\n          //formData.append( \"x-access-key\", Tokens().accessToken)\n         // formData.append(\"x-access-token\",Tokens().refreshToken);\n            \n           const result = await axios.post(Urls.fileUploadUrl,formData);\n          \n      \n        if(result.data.status  === \"success\"){\n            var ImagePath = result.data.url;\n            return ImagePath;\n        }\n        else{\n          return false;\n        }\n        },\n\n\n\n\n    SubmitTask:async (file,task_id)=>{\n      var data = \"?FilePath=\"+file;\n      const endPoint =`SubmitTask/${task_id}`+data;//user_id,task_id\n\n\n     \n       \n           // alert(resp.data);\n          \n        \n\n\n           \n            //const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n            try {\n      \n    \n              const result = await Axios.post(endPoint,body());\n             \n              \n              if(result.data == false)\n              {\n                  const data = await UpdateToken(Tokens().refreshToken);\n\n                  if(data == true)\n                  {\n                    const Result = await Axios.post(endPoint,body());\n                    \n                   // formData=\"\";\n                    return Result.data;\n                  }\n              }\n              else{\n               // formData=\"\";\n                    return result.data;\n                }\n                  \n              \n            } catch (error) {\n              //formData=\"\";\n              //  console.log(error);\n            }\n           \n\n          // console.log(resp.data);\n\n          \n          \n\n        /*   try {\n    \n  \n            const result = await Axios.post(endPoint,formData);\n           // console.log(result.data)\n            \n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,formData);\n                  \n                  formData=\"\";\n                  return Result.data;\n                }\n            }\n            else{\n              formData=\"\";\n                return result.data;\n                \n            }\n          } catch (error) {\n            formData=\"\";\n            //  //console.log(error)\n          }*/\n    },\n\n    getTaskBeingReviewed:async ()=>{\n      //TaskBeingReviewd\n      try {\n        const endPoint =`TaskBeingReviewd`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n    getCancelled:async ()=>{\n      try {\n        const endPoint =`Cancelled`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n    getOrdersInRevision:async ()=>{\n      try {\n        const endPoint =`Revision`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n  getUnpaidOrders:async()=>{\n   // Unpaid\n   try {\n    const endPoint =`Unpaid`;\n\n    const result = await Axios.post(endPoint,body());\n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n} catch (error) {\n  //console.log(error)\n}\n  },\n  LoadInvoices:async ()=>{\n    try {\n      const endPoint =`LoadInvoices`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  LoadInvoicesData:async(invoiceId)=>{\n    //LoadInvoiceData\n   \n    try {\n      const endPoint =`LoadInvoiceData/${invoiceId}`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  getUserDetails:async()=>{\n\n    try {\n      const endPoint =`getUserDetails`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n\n  UpdateProfile2:async(profile)=>{\n    var formData = new FormData();\n    formData.append('files', profile);\n    formData.append('control','writerProfile');\n    //formData.append( \"x-access-key\", Tokens().accessToken)\n   // formData.append(\"x-access-token\",Tokens().refreshToken);\n      \n     const result = await axios.post(Urls.fileUploadUrl,formData);\n    \n\n  if(result.data.status  === \"success\"){\n      var ImagePath = result.data.url;\n      return ImagePath;\n  }\n  else{\n    return false;\n  }\n\n  },\n  \n  UpdateProfile:async (profile)=>{\n     var data = \"?imagePath=\"+profile;\n    const endPoint =`updateProfile`+data;//user_id,task_id\n   \n     \n         //await sendUpload(endPoint,formData);\n         try {\n  \n\n          const result = await Axios.post(endPoint,body());\n         // console.log(result.data)\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                \n               // formData=\"\";\n                return Result.data;\n              }\n          }\n          else{\n           // formData=\"\";\n              return result.data;\n              \n          }\n        } catch (error) {\n          //ormData=\"\";\n          //  //console.log(error)\n        }\n  },\n  UpdateData:async (data)=>{\n        \n    const endPoint =`UpdateProfileData?`+data;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    console.log(e);\n    return [];\n   }\n  },\n  clearReadNotification:async (notification_id)=>{\n    const endPoint =`clearReadNotification/${notification_id}`;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    //console.log(e);\n    return [];\n   }\n   },\n   loadChatUsers:async (sender,receiver,taskid)=>{\n    const endPoint =`chatUsers/${sender}/${receiver}/${taskid}`;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    //console.log(e);\n    return [];\n   }\n   },\n   getOpenTickets:async()=>{\n    try {\n      const endPoint = `Tickets`;\n      const result = await Axios.post(endPoint,body());\n     \n      if(result.data == false){\n       const data = await UpdateToken(Tokens().refreshToken);\n       if(data == true){\n         const Result = await Axios.post(endPoint,body());\n           //console.log(Result)\n         return Result;\n       }\n      }else{\n       \n          return result;\n      }\n} catch (error) {\n      return[];\n     console.log(error);\n}\n   },\n   ActivateAcount:async(Key)=>{\n    try {\n     // alert(Key)\n      const endPoint = `activate/${Key}`;\n      const result = await Axios.post(endPoint,body());\n     \n      if(result.data == false){\n       const data = await UpdateToken(Tokens().refreshToken);\n       if(data == true){\n         const Result = await Axios.post(endPoint,body());\n           //console.log(Result)\n         return Result;\n       }\n      }else{\n       \n          return result;\n      }\n} catch (error) {\n      //return[];\n     console.log(error);\n}\n   },\n   ForgotPassword:async(email)=>{\n    try {\n      const endPoint = `Forgot/${email}`;\n      const result = await Axios.post(endPoint,body());\n      //console.log(result)\n     \n      if(result.data == false){\n       const data = await UpdateToken(Tokens().refreshToken);\n       if(data == true){\n         const Result = await Axios.post(endPoint,body());\n           //console.log(Result)\n         return Result;\n       }\n      }else{\n       \n          return result;\n      }\n} catch (error) {\n      return[];\n     console.log(error);\n}\n   },\n\n\n} \n\nexport  default ApiRequest;"]},"metadata":{},"sourceType":"module"}