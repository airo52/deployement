{"ast":null,"code":"import React from'react';import{CRow}from'@coreui/react';// import CIcon from '@coreui/icons-react'\n//import { DocsLink } from 'src/reusable'\n//import TaskCard from './taskCard'\nimport AssignedOrders from'../Orders/assigned';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var NewTask=function NewTask(_ref){var limit=_ref.limit,showSingleTask=_ref.showSingleTask;/* const [collapsed, setCollapsed] = React.useState(false)\n    const [showCard, setShowCard] = React.useState(false);\n    const [id,setId] = React.useState('');\n\n    const handleCollapse=(id)=>{\n       setId(id);\n       \n       setCollapsed(!collapsed);\n       setShowCard(true);\n    }\n\n    const handleShowCard=(id)=>{\n      setId(id);\n      setShowCard(!showCard);\n    }*/return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(AssignedOrders,{})});};export default NewTask;","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/NewTask.js"],"names":["React","CRow","AssignedOrders","NewTask","limit","showSingleTask"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAEIC,IAFJ,KAIU,eAJV,CAKC;AACD;AACA;AACA,MAAOC,CAAAA,cAAP,KAA2B,oBAA3B,C,gGACA,GAAMC,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,MAA0B,IAAxBC,CAAAA,KAAwB,MAAxBA,KAAwB,CAAlBC,cAAkB,MAAlBA,cAAkB,CACtC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAEI,mBACE,sCAEG,KAAC,cAAD,IAFH,EADF,CAOH,CAxBD,CA0BA,cAAeF,CAAAA,OAAf","sourcesContent":["import React from 'react'\nimport {\n  \n    CRow,\n   \n  } from  '@coreui/react'\n // import CIcon from '@coreui/icons-react'\n//import { DocsLink } from 'src/reusable'\n//import TaskCard from './taskCard'\nimport AssignedOrders from '../Orders/assigned'\nconst NewTask =({limit,showSingleTask})=>{\n   /* const [collapsed, setCollapsed] = React.useState(false)\n    const [showCard, setShowCard] = React.useState(false);\n    const [id,setId] = React.useState('');\n\n    const handleCollapse=(id)=>{\n       setId(id);\n       \n       setCollapsed(!collapsed);\n       setShowCard(true);\n    }\n\n    const handleShowCard=(id)=>{\n      setId(id);\n      setShowCard(!showCard);\n    }*/\n  \n    return (\n      <>\n      \n         <AssignedOrders/>\n      \n      </>\n    )\n}\n\nexport default NewTask;\n"]},"metadata":{},"sourceType":"module"}