{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/Redone/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar OrdersBeingRedone = function OrdersBeingRedone() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Revisions = _useState6[0],\n      setRevisions = _useState6[1];\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  var getOrdersInRevision = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, organisedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getCancelled();\n\n            case 2:\n              result = _context.sent;\n              organisedData = [];\n              result.data.forEach(function (element) {\n                var dat = {\n                  \"#order\": element.task_id,\n                  \"OrderName\": element.task_name,\n                  \"Title\": element.task_title,\n                  \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge badge-danger\",\n                    children: element.task_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 32\n                  }, _this),\n                  \"Created\": element.task_created_date,\n                  \"Deadline\": element.task_deadline,\n                  \"Service\": element.task_service,\n                  \"Pages\": element.pages,\n                  \"Action\": /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-info\",\n                    onClick: function onClick() {\n                      return ViewItemDetails(element.task_id);\n                    },\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 39,\n                    columnNumber: 32\n                  }, _this)\n                };\n                organisedData.push(dat);\n              });\n              setRevisions(organisedData);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOrdersInRevision() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getOrdersInRevision();\n  }, []);\n  var columns = [{\n    dataField: '#order',\n    text: '#order'\n  }, {\n    dataField: 'OrderName',\n    text: 'ordername'\n  }, {\n    dataField: 'Title',\n    text: 'title'\n  }, {\n    dataField: 'status',\n    text: 'status'\n  }, {\n    dataField: 'Created',\n    text: 'created'\n  }, {\n    dataField: 'Deadline',\n    text: 'deadline'\n  }, {\n    dataField: 'Pages',\n    text: 'page'\n  }, {\n    dataField: 'Action',\n    text: 'action'\n  }];\n  var data = [{\n    \"#order\": \"committee-c15dw\",\n    \"ordername\": \"editor-ktsjo\",\n    \"title\": 3,\n    \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"badge badge-danger\",\n      children: \"cancelled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }, _this),\n    \"created\": '2021-07-7',\n    \"deadline\": '2021-07-7',\n    \"service\": \"paraprhrasing\",\n    \"page\": \"5\",\n    \"action\": /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-info\",\n      onClick: function onClick() {\n        return handleShowSingleTask(5);\n      },\n      children: \"Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, _this)\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [!isSingleTaskOpen && /*#__PURE__*/_jsxDEV(TableCard, {\n      columns: columns,\n      products: Revisions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 35\n    }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n      isAccept: false,\n      closeTask: handleCloseTask,\n      id: singleTaskId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 34\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(OrdersBeingRedone, \"pWxFlO7SVhs6j5/Ed9RHmQ8D38w=\");\n\n_c = OrdersBeingRedone;\nexport default OrdersBeingRedone;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersBeingRedone\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/Redone/index.js"],"names":["React","useEffect","useState","SingeleTask","TableCard","ApiRequest","OrdersBeingRedone","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","Revisions","setRevisions","handleShowSingleTask","id","handleCloseTask","getOrdersInRevision","getCancelled","result","organisedData","data","forEach","element","dat","task_id","task_name","task_title","task_status","task_created_date","task_deadline","task_service","pages","ViewItemDetails","push","columns","dataField","text"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\n\nconst OrdersBeingRedone =()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [Revisions,setRevisions] = useState([]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const getOrdersInRevision = async ()=>{\n        const result = await ApiRequest.getCancelled();\n\n        const organisedData =[];\n        result.data.forEach(element => {\n                 var dat ={\n                     \"#order\": element.task_id,\n                     \"OrderName\": element.task_name,\n                     \"Title\": element.task_title,\n                     \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                     \"Created\": element.task_created_date,\n                     \"Deadline\": element.task_deadline,\n                     \"Service\": element.task_service,\n                     \"Pages\": element.pages,\n                     \"Action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(element.task_id)}>Details</button> \n                 } \n                 \n                 organisedData.push(dat);\n        });\nsetRevisions(organisedData);\n\n    }\n\n  \n    useEffect(()=>{\n        getOrdersInRevision();\n    },[])\n    \n     \nconst  columns = [\n    {\n        dataField:'#order',\n         text:  '#order',\n    },\n    {\n        dataField:'OrderName',\n         text:  'ordername',\n    },\n    {\n        dataField:'Title',\n         text:  'title',\n    },\n    {\n        dataField:'status',\n         text:  'status',\n    },\n    {\n        dataField:'Created',\n         text:  'created',\n    },\n    {\n        dataField:'Deadline',\n         text:  'deadline',\n    },\n   \n    {\n        dataField:'Pages',\n         text:  'page',\n    },\n    \n    {\n        dataField:'Action',\n         text:  'action',\n    },\n \n]\n     const data=[\n         {\n            \"#order\": \"committee-c15dw\",\n            \"ordername\": \"editor-ktsjo\",\n            \"title\": 3,\n            \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n            \"created\": '2021-07-7',\n            \"deadline\": '2021-07-7',\n            \"service\": \"paraprhrasing\",\n            \"page\": \"5\",\n            \"action\": <button className=\"btn btn-info\" onClick={()=>handleShowSingleTask(5)}>Details</button>\n         }\n     ]\n    return <React.Fragment>\n            {!isSingleTaskOpen && <TableCard columns={columns} products={Revisions}/>}\n            {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n        </React.Fragment> \n}\n\nexport default OrdersBeingRedone;"]},"metadata":{},"sourceType":"module"}