{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tony/Documents/Projects/react/Writer/writer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/unpaid/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport Invoice from \"../../Invoice/invoice\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\"; //import TableCard from \"../../Table/tableCard\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar UnpaidOrders = function UnpaidOrders() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSingleTaskOpen = _useState2[0],\n      setShowSingleTask = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      singleTaskId = _useState4[0],\n      setSingleTaskId = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UnpaidOrders = _useState6[0],\n      setUnpaid = _useState6[1];\n\n  var handleShowSingleTask = function handleShowSingleTask(id) {\n    setSingleTaskId(id);\n    setShowSingleTask(true);\n  };\n\n  var handleCloseTask = function handleCloseTask() {\n    setSingleTaskId('');\n    setShowSingleTask(false);\n  };\n\n  var getUnpaidOrders = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, organisedData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return ApiRequest.getUnpaidOrders();\n\n            case 2:\n              result = _context.sent;\n              console.log(result.data);\n              organisedData = [];\n              result.data.forEach(function (element) {\n                var dat = {\n                  \"#order\": element.task_id,\n                  \"OrderName\": element.task_name,\n                  \"Title\": element.task_title,\n                  \"status\": /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge badge-danger\",\n                    children: element.task_status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 30\n                  }, _this),\n                  \"Created\": element.task_created_date,\n                  \"Deadline\": element.task_deadline,\n                  \"Service\": element.task_service,\n                  \"Pages\": element.pages,\n                  \"Action\": /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: function onClick() {\n                      return handleShowSingleTask(element.task_id);\n                    },\n                    children: \"Details\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 29\n                  }, _this)\n                };\n                organisedData.push(dat);\n              });\n              setUnpaid(organisedData);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getUnpaidOrders() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getUnpaidOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"60px\"\n      },\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"10px\",\n          marginBottom: \"2px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: \" Payment Of this Order is Expected To Done By (January 18,2021)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid jumbotron card bg-white text-dark\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [!isSingleTaskOpen && /*#__PURE__*/_jsxDEV(Invoice, {\n            tableData: UnpaidOrders,\n            showSingleTask: handleShowSingleTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 37\n          }, _this), isSingleTaskOpen && /*#__PURE__*/_jsxDEV(SingeleTask, {\n            isAccept: false,\n            closeTask: handleCloseTask,\n            id: singleTaskId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 35\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(UnpaidOrders, \"+rUFaiVknfDo+iHL9lHLywfraL8=\");\n\n_c = UnpaidOrders;\nexport default UnpaidOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"UnpaidOrders\");","map":{"version":3,"sources":["/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/unpaid/index.js"],"names":["React","useEffect","useState","ApiRequest","Invoice","SingeleTask","UnpaidOrders","isSingleTaskOpen","setShowSingleTask","singleTaskId","setSingleTaskId","setUnpaid","handleShowSingleTask","id","handleCloseTask","getUnpaidOrders","result","console","log","data","organisedData","forEach","element","dat","task_id","task_name","task_title","task_status","task_created_date","task_deadline","task_service","pages","push","height","marginLeft","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nimport Invoice from \"../../Invoice/invoice\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\n//import TableCard from \"../../Table/tableCard\";\n\nconst UnpaidOrders=()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [UnpaidOrders,setUnpaid] = useState([]);\n\n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n\n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    \n\n    const getUnpaidOrders =async ()=>{\n      const result = await ApiRequest.getUnpaidOrders();\n   console.log(result.data);\n       const organisedData =[];\n      result.data.forEach(element => {\n               var dat ={\n                   \"#order\": element.task_id,\n                   \"OrderName\": element.task_name,\n                   \"Title\": element.task_title,\n                   \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                   \"Created\": element.task_created_date,\n                   \"Deadline\": element.task_deadline,\n                   \"Service\": element.task_service,\n                   \"Pages\": element.pages,\n                   \"Action\":<button onClick={()=>handleShowSingleTask(element.task_id)}>Details</button>\n               } \n               \n               organisedData.push(dat);\n      });\n\n      setUnpaid(organisedData);\n}\n\n\n\n\nuseEffect(()=>{\n getUnpaidOrders()\n},[]);\n  return<> \n        <div style={{height:\"60px\"}} className=\"card\">\n            <h4 style={{marginLeft:\"10px\",marginTop:\"10px\",marginBottom:\"2px\"}}>\n               <center> Payment Of this Order is Expected To Done By (January 18,2021)</center>\n            </h4>\n        </div>\n      <div className=\"container-fluid jumbotron card bg-white text-dark\">\n           <div>\n          <React.Fragment> \n              {!isSingleTaskOpen && <Invoice tableData={UnpaidOrders} showSingleTask={handleShowSingleTask}/>}\n              {isSingleTaskOpen &&<SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n          </React.Fragment>\n           </div>\n         \n      </div>\n        </>\n}\n\nexport default UnpaidOrders;"]},"metadata":{},"sourceType":"module"}