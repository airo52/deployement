[{"/Users/tony/Documents/Projects/react/Writer/writer/src/index.js":"1","/Users/tony/Documents/Projects/react/Writer/writer/src/store.js":"2","/Users/tony/Documents/Projects/react/Writer/writer/src/serviceWorker.js":"3","/Users/tony/Documents/Projects/react/Writer/writer/src/App.js":"4","/Users/tony/Documents/Projects/react/Writer/writer/src/polyfill.js":"5","/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/index.js":"6","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/page500/Page500.js":"7","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/login/Login.js":"8","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/page404/Page404.js":"9","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/register/Register.js":"10","/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/sygnet.js":"11","/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/logo-negative.js":"12","/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/logo.js":"13","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheLayout.js":"14","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/index.js":"15","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheSidebar.js":"16","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownTasks.js":"17","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdown.js":"18","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeader.js":"19","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheFooter.js":"20","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownNotif.js":"21","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownMssg.js":"22","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheContent.js":"23","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/_nav.js":"24","/Users/tony/Documents/Projects/react/Writer/writer/src/routes.js":"25","/Users/tony/Documents/Projects/react/Writer/writer/src/views/users/Users.js":"26","/Users/tony/Documents/Projects/react/Writer/writer/src/views/users/User.js":"27","/Users/tony/Documents/Projects/react/Writer/writer/src/views/widgets/Widgets.js":"28","/Users/tony/Documents/Projects/react/Writer/writer/src/views/dashboard/Dashboard.js":"29","/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/Charts.js":"30","/Users/tony/Documents/Projects/react/Writer/writer/src/views/theme/colors/Colors.js":"31","/Users/tony/Documents/Projects/react/Writer/writer/src/views/theme/typography/Typography.js":"32","/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/modals/Modals.js":"33","/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/toaster/Toaster.js":"34","/Users/tony/Documents/Projects/react/Writer/writer/src/views/icons/brands/Brands.js":"35","/Users/tony/Documents/Projects/react/Writer/writer/src/views/icons/coreui-icons/CoreUIIcons.js":"36","/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/alerts/Alerts.js":"37","/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/button-groups/ButtonGroups.js":"38","/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/buttons/Buttons.js":"39","/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/button-dropdowns/ButtonDropdowns.js":"40","/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/brand-buttons/BrandButtons.js":"41","/Users/tony/Documents/Projects/react/Writer/writer/src/views/icons/flags/Flags.js":"42","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/breadcrumbs/Breadcrumbs.js":"43","/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/badges/Badges.js":"44","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/tables/Tables.js":"45","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/collapses/Collapses.js":"46","/Users/tony/Documents/Projects/react/Writer/writer/src/views/widgets/WidgetsBrand.js":"47","/Users/tony/Documents/Projects/react/Writer/writer/src/views/widgets/WidgetsDropdown.js":"48","/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/MainChartExample.js":"49","/Users/tony/Documents/Projects/react/Writer/writer/src/views/users/UsersData.js":"50","/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/ChartBarSimple.js":"51","/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/ChartLineSimple.js":"52","/Users/tony/Documents/Projects/react/Writer/writer/src/reusable/index.js":"53","/Users/tony/Documents/Projects/react/Writer/writer/src/reusable/DocsLink.js":"54","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/NewTask.js":"55","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/taskCard.js":"56","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/index.js":"57","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/taskDetails/singleTaskDetails.js":"58","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/cancelled/index.js":"59","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/assigned/index.js":"60","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/Redone/index.js":"61","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/completed/index.js":"62","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/in-review/index.js":"63","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/inprogress/index.js":"64","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/unpaid(next-period)/index.js":"65","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/paymentHistory/index.js":"66","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/unpaid/index.js":"67","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Table/table.js":"68","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Table/tableCard.js":"69","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Invoice/invoice.js":"70","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Profile/profile.js":"71","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/authThenticateToken.js":"72","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/config.js":"73","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/activate/forgot.js":"74","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/activate/activate.js":"75","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/auth/auth.js":"76","/Users/tony/Documents/Projects/react/Writer/writer/src/views/table/TableCard.js":"77","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/Requests/Apirequest.js":"78","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Modal/Modal.js":"79","/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/index.js":"80","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Currency/currency.js":"81","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Profile/CreateAdmins.js":"82","/Users/tony/Documents/Projects/react/Writer/writer/src/idleTimeDetection.js":"83","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/Home/home.js":"84","/Users/tony/Documents/Projects/react/Writer/writer/src/Freezer.js":"85","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/urls.js":"86","/Users/tony/Documents/Projects/react/Writer/writer/src/views/ChatBox/ChatBox.js":"87","/Users/tony/Documents/Projects/react/Writer/writer/src/views/supportCenter/support.js":"88","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/auth/UrlParams.js":"89","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/Home/Terms.js":"90","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/activate/ConfirmPayment.js":"91"},{"size":735,"mtime":1629834944000,"results":"92","hashOfConfig":"93"},{"size":324,"mtime":1629834944000,"results":"94","hashOfConfig":"93"},{"size":4686,"mtime":1629834944000,"results":"95","hashOfConfig":"93"},{"size":4736,"mtime":1638019464736,"results":"96","hashOfConfig":"93"},{"size":1895,"mtime":1629834944000,"results":"97","hashOfConfig":"93"},{"size":3813,"mtime":1629834944000,"results":"98","hashOfConfig":"93"},{"size":1313,"mtime":1629834944000,"results":"99","hashOfConfig":"100"},{"size":3768,"mtime":1636971315175,"results":"101","hashOfConfig":"93"},{"size":1294,"mtime":1629834944000,"results":"102","hashOfConfig":"100"},{"size":2864,"mtime":1629834944000,"results":"103","hashOfConfig":"100"},{"size":978,"mtime":1629834944000,"results":"104","hashOfConfig":"93"},{"size":6933,"mtime":1629834944000,"results":"105","hashOfConfig":"93"},{"size":6920,"mtime":1629834944000,"results":"106","hashOfConfig":"93"},{"size":1101,"mtime":1637593490779,"results":"107","hashOfConfig":"93"},{"size":596,"mtime":1629834944000,"results":"108","hashOfConfig":"93"},{"size":1389,"mtime":1636974458428,"results":"109","hashOfConfig":"93"},{"size":2253,"mtime":1629834944000,"results":"110","hashOfConfig":"93"},{"size":1952,"mtime":1637227326633,"results":"111","hashOfConfig":"93"},{"size":2958,"mtime":1637593585237,"results":"112","hashOfConfig":"93"},{"size":539,"mtime":1634409264437,"results":"113","hashOfConfig":"93"},{"size":2543,"mtime":1629834944000,"results":"114","hashOfConfig":"93"},{"size":4306,"mtime":1638040287734,"results":"115","hashOfConfig":"93"},{"size":2163,"mtime":1638039358462,"results":"116","hashOfConfig":"93"},{"size":3202,"mtime":1637623403433,"results":"117","hashOfConfig":"93"},{"size":2393,"mtime":1637638253536,"results":"118","hashOfConfig":"93"},{"size":2132,"mtime":1629834944000,"results":"119","hashOfConfig":"100"},{"size":1200,"mtime":1629834944000,"results":"120","hashOfConfig":"100"},{"size":12301,"mtime":1629834944000,"results":"121","hashOfConfig":"100"},{"size":1497,"mtime":1636979639484,"results":"122","hashOfConfig":"93"},{"size":5779,"mtime":1629834944000,"results":"123","hashOfConfig":"100"},{"size":3685,"mtime":1629834944000,"results":"124","hashOfConfig":"100"},{"size":7000,"mtime":1629834944000,"results":"125","hashOfConfig":"100"},{"size":10997,"mtime":1629834944000,"results":"126","hashOfConfig":"100"},{"size":5328,"mtime":1629834944000,"results":"127","hashOfConfig":"100"},{"size":963,"mtime":1629834944000,"results":"128","hashOfConfig":"100"},{"size":606,"mtime":1629834944000,"results":"129","hashOfConfig":"100"},{"size":5910,"mtime":1629834944000,"results":"130","hashOfConfig":"100"},{"size":6169,"mtime":1629834944000,"results":"131","hashOfConfig":"100"},{"size":33216,"mtime":1629834944000,"results":"132","hashOfConfig":"100"},{"size":16489,"mtime":1629834944000,"results":"133","hashOfConfig":"100"},{"size":15401,"mtime":1629834944000,"results":"134","hashOfConfig":"100"},{"size":590,"mtime":1629834944000,"results":"135","hashOfConfig":"100"},{"size":1727,"mtime":1629834944000,"results":"136","hashOfConfig":"100"},{"size":3605,"mtime":1629834944000,"results":"137","hashOfConfig":"100"},{"size":5048,"mtime":1629834944000,"results":"138","hashOfConfig":"93"},{"size":4744,"mtime":1634244272226,"results":"139","hashOfConfig":"100"},{"size":4597,"mtime":1634243176086,"results":"140","hashOfConfig":"100"},{"size":4147,"mtime":1636979474740,"results":"141","hashOfConfig":"93"},{"size":2486,"mtime":1629834944000,"results":"142","hashOfConfig":"100"},{"size":2442,"mtime":1629834944000,"results":"143","hashOfConfig":"93"},{"size":1545,"mtime":1629834944000,"results":"144","hashOfConfig":"93"},{"size":3294,"mtime":1629834944000,"results":"145","hashOfConfig":"93"},{"size":56,"mtime":1629834944000,"results":"146","hashOfConfig":"93"},{"size":581,"mtime":1629834944000,"results":"147","hashOfConfig":"93"},{"size":778,"mtime":1637048148772,"results":"148","hashOfConfig":"93"},{"size":1692,"mtime":1634304159758,"results":"149","hashOfConfig":"100"},{"size":840,"mtime":1634302322505,"results":"150","hashOfConfig":"93"},{"size":10539,"mtime":1637765005443,"results":"151","hashOfConfig":"93"},{"size":3153,"mtime":1637137257411,"results":"152","hashOfConfig":"93"},{"size":4821,"mtime":1637059069924,"results":"153","hashOfConfig":"93"},{"size":2550,"mtime":1637238568653,"results":"154","hashOfConfig":"93"},{"size":3671,"mtime":1637064858092,"results":"155","hashOfConfig":"93"},{"size":3191,"mtime":1637108047276,"results":"156","hashOfConfig":"93"},{"size":5946,"mtime":1637945210911,"results":"157","hashOfConfig":"93"},{"size":1184,"mtime":1634377382499,"results":"158","hashOfConfig":"93"},{"size":5913,"mtime":1637191406430,"results":"159","hashOfConfig":"93"},{"size":3275,"mtime":1637192434167,"results":"160","hashOfConfig":"93"},{"size":7752,"mtime":1634329969294,"results":"161","hashOfConfig":"100"},{"size":4269,"mtime":1634336225033,"results":"162","hashOfConfig":"93"},{"size":3460,"mtime":1637191868271,"results":"163","hashOfConfig":"93"},{"size":13402,"mtime":1638050758281,"results":"164","hashOfConfig":"93"},{"size":3546,"mtime":1636972466568,"results":"165","hashOfConfig":"93"},{"size":461,"mtime":1637798833060,"results":"166","hashOfConfig":"93"},{"size":3110,"mtime":1637634596929,"results":"167","hashOfConfig":"93"},{"size":3069,"mtime":1637635017275,"results":"168","hashOfConfig":"93"},{"size":2408,"mtime":1636970819399,"results":"169","hashOfConfig":"93"},{"size":1578,"mtime":1636975598483,"results":"170","hashOfConfig":"93"},{"size":16982,"mtime":1638037410977,"results":"171","hashOfConfig":"93"},{"size":758,"mtime":1637094688224,"results":"172","hashOfConfig":"93"},{"size":231,"mtime":1629834944000,"results":"173","hashOfConfig":"100"},{"size":689,"mtime":1637191799295,"results":"174","hashOfConfig":"93"},{"size":12523,"mtime":1637224409939,"results":"175","hashOfConfig":"93"},{"size":538,"mtime":1637227452910,"results":"176","hashOfConfig":"93"},{"size":6518,"mtime":1638039071430,"results":"177","hashOfConfig":"93"},{"size":638,"mtime":1637251568173,"results":"178","hashOfConfig":"93"},{"size":539,"mtime":1638048592231,"results":"179","hashOfConfig":"93"},{"size":8283,"mtime":1638040564649,"results":"180","hashOfConfig":"93"},{"size":2684,"mtime":1637624386896,"results":"181","hashOfConfig":"93"},{"size":487,"mtime":1637625577662,"results":"182","hashOfConfig":"93"},{"size":23135,"mtime":1638039051044,"results":"183","hashOfConfig":"93"},{"size":1639,"mtime":1638037918611,"results":"184","hashOfConfig":"93"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kyatj3",{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1372021",{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"243"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"309"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":53,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376"},{"filePath":"377","messages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"384"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391"},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"400"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403"},"/Users/tony/Documents/Projects/react/Writer/writer/src/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/store.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/serviceWorker.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/App.js",["404","405","406"],"import React, { Component } from 'react';\nimport { HashRouter, Route, Switch,useHistory } from 'react-router-dom';\nimport { requestRefreshToken, veryAccessTokens } from './Api/authThenticateToken';\nimport './scss/style.scss';\n\nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n// Containers\nconst TheLayout = React.lazy(() => import('./containers/TheLayout'));\nconst Login = React.lazy(() => import('./views/pages/login/Login'));\nconst Activate = React.lazy(()=>import('./views/pages/activate/activate'));\nconst Forgot = React.lazy(()=>import('./views/pages/activate/forgot'));\nconst Home = React.lazy(()=>import('./views/pages/Home/home'));\nconst Terms = React.lazy(()=>import('./views/pages/Home/Terms'));\nconst ConfirmPayment = React.lazy(()=>import('./views/pages/activate/ConfirmPayment'));\n// Pages\n/*\n\nconst Register = React.lazy(() => import('./views/pages/register/Register'));\nconst Page404 = React.lazy(() => import('./views/pages/page404/Page404'));\nconst Page500 = React.lazy(() => import('./views/pages/page500/Page500'));\n*/\n\n\nfunction NotFound(){\n  \n  let history = useHistory();\n  return <div style={{margin:\"300px auto\"}} className=\"page-wrap d-flex flex-row align-items-center\">\n  <div className=\"container\">\n      <div className=\"row justify-content-center\">\n          <div className=\"col-md-12 text-center\">\n              <span className=\"display-1 d-block\">404</span>\n              <div className=\"mb-4 lead\">The page you are looking for was not found.</div>\n              \n              <button className=\"btn btn-simple\" onClick={() => history.goBack()}>Go Back</button>\n          </div>\n      </div>\n  </div>\n</div>\n}\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n         username:\"\",\n         profile:\"\",\n         home:false,\n         email:'',\n         ENDPOINT:'localhost:4000',\n    }\n\n  }\n  \n\n  handleProfile=(data)=>{\n      \n    const {username,profile,email} = data;\n  \n    //alert(username)\n    this.setState({username:username,profile:profile,home:true,email:email});\n   \n }\n\n\n route =async ()=>{\n   \n  //this.state.home == true?\"\":window.location.href=\"/#/auth\";\n    var ta= localStorage.getItem('wat');\n    var tr = localStorage.getItem('wtr');\n     \n      const check = await veryAccessTokens(ta,this.handleProfile);//authenTicateWebRefresh(ta,tr,this.handleProfile);\n      \n      \n      \n      if(check == true){\n          this.setState({home:true})\n      }else if( check == false){\n        const checkRefresh = await requestRefreshToken(tr,this.handleProfile);\n        if(checkRefresh == true){\n          this.setState({home:true});\n        }\n      }\n  if(!this.state.home){\n      window.location.href=\"/#/\"\n  }\n }\n\n  componentDidMount=()=>{\n    const url = window.location.href.split('/#/')[1];\n   \n    if(url === \"auth/activate\"){}\n    else if(url === \"confirm\"){\n\n    }\n    else{\n      \n     if(url.split('?')[0] === \"auth/activate\"){\n       \n      //console.log(url);\n     }\n     else if(url.split('?')[0] === \"confirm\"){\n\n     }\n     else{\n       \n       this.route();\n     }\n    }\n\n  }\n\n  render() {\n\n    \n    return (\n      <HashRouter>\n          <React.Suspense fallback={loading}>\n            <Switch>\n            {!this.state.home && <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login Profile={this.handleProfile} {...props}/>} />}\n           {!this.state.home &&<Route exact path=\"/\" name=\"Home Page\" render={props => <Home  {...props}/>} />}\n           {!this.state.home && <Route exact path=\"/auth/ForgotPassWord\" name=\"Forgot\" render={props => <Forgot {...props}/>} />}\n           {!this.state.home &&<Route exact path=\"/auth/activate\" name=\"Login Page\" render={props => <Activate {...props}/>} />}\n           {/*\n              <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} />\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n            */}\n            {this.state.home &&  <Route path=\"/\" name=\"Home\" render={props => <TheLayout email={this.state.email} Uname={this.state.username} Pfile={this.state.profile} {...props}/>} />}\n            {!this.state.home &&<Route exact path=\"/Terms\" name=\"Home Page\" render={props => <Terms  {...props}/>} />}\n            \n            {!this.state.home && <Route exact path=\"/confirm\" name=\"confirm\" render={props => <ConfirmPayment {...props}/>}/>}\n            {!this.state.home && <Route component={NotFound} />}\n            </Switch>\n          </React.Suspense>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","/Users/tony/Documents/Projects/react/Writer/writer/src/polyfill.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/page500/Page500.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/login/Login.js",["407","408","409","410"],"import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport swal from \"sweetalert\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { Loginn } from 'src/Api/auth/auth';\n\n\nconst Login = ({Profile}) => {\n  const [email,setEmail] = useState('');\n    const [password,setPassword] = useState('');\n    const [err,setErr] = useState('');\n    const [Err,setEr] = useState(false);\n    const [save,SetSave] = useState(false);\n\n    function showError(data){\n     // alert(data);\n       // swal(\"LOGIN FAILED\",data,'error','1000');\n       swal({\n        title: \"LOGIN FAILED\",\n        text: data,\n        icon: \"error\",\n        timer: 3000\n     });\n    }\n\n    async function  handLogin(e){\n        SetSave(true)\n     e.preventDefault();\n     \n       const result = await Loginn(email,password,Profile);\n       //alert(result)\n       \n      if(result == true){\n        \n         setEmail('');\n         setPassword('');\n         SetSave(false)\n \n         \n \n     }else{\n         showError(result)\n         setErr(result);\n         setEr(true);\n         SetSave(false)\n       \n     }\n \n    }\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"8\">\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm>\n                    <h1>Login</h1>\n                    <p className=\"text-muted\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-user\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\" autoComplete=\"username\" />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupPrepend>\n                        <CInputGroupText>\n                          <CIcon name=\"cil-lock-locked\" />\n                        </CInputGroupText>\n                      </CInputGroupPrepend>\n                      <CInput type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\" autoComplete=\"current-password\" />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs=\"6\">\n                        <CButton onClick={(e)=>handLogin(e)} color=\"primary\" className=\"px-4\">Login</CButton>\n                      </CCol>\n                      <CCol xs=\"6\" className=\"text-right\">\n                          <Link to=\"/auth/ForgotPassWord\">\n                        <CButton color=\"link\" className=\"px-0\">Forgot password?</CButton>\n                        </Link>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                  <h2>Sign in</h2>\n                    <p>\n                     Welcome To peak writers\n                       Login To continue With your task\n                      .</p>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/page404/Page404.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/register/Register.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/sygnet.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/logo-negative.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/assets/icons/logo.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheLayout.js",["411"],"import React, { useEffect, useState } from 'react'\nimport inactivityTime from 'src/idleTimeDetection'\nimport {\n  TheContent,\n  TheSidebar,\n  TheFooter,\n  TheHeader\n} from './index'\n\nconst TheLayout = ({Uname,Pfile,email,sockett}) => {\n\n  const [notificationCount,setNotificationCount] = useState();\n  const [message,setMessages] =useState([]);\n  const [sockets,setSockets] = useState('');\n  const [state,setState] = useState(false);\n\n  const setSocket=(socket)=>{\n    setSockets(socket);\n   \n    setState(true);\n}\n\nuseEffect(()=>{\n  inactivityTime();\n},[])\n  return (\n    <div className=\"c-app c-default-layout\">\n     <TheSidebar username={Uname}/>\n      <div className=\"c-wrapper\">\n        <TheHeader state={state} socket={sockets} Messages={message} notificationCount={notificationCount}  profile={Pfile}/>\n        <div className=\"c-body\">\n        <TheContent setSocket={setSocket} Messages={setMessages} notificationCount={setNotificationCount} email={email} name={Uname} profile={Pfile} profile={Pfile}/>\n        </div>\n        <TheFooter/>\n      </div>\n    </div>\n  )\n}\n\nexport default TheLayout\n","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheSidebar.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownTasks.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdown.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeader.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheFooter.js",["412"],"import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst TheFooter = () => {\n  return (\n    <CFooter fixed={false}>\n      <div>\n        <a href=\"https://softonica.buzz\" target=\"_blank\" rel=\"noopener noreferrer\">Writer</a>\n        <span className=\"ml-1\">&copy; 2020 softonica.</span>\n      </div>\n      <div className=\"mfs-auto\">\n        <span className=\"mr-1\">Powered by</span>\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">Writer</a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(TheFooter)\n","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownNotif.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheHeaderDropdownMssg.js",["413","414","415","416","417"],"import React, { useEffect, useState } from 'react'\nimport {\n  CBadge,\n  CDropdown,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ChatBox from 'src/views/ChatBox/ChatBox';\n\nconst TheHeaderDropdownMssg = ({socket,state}) => {\n  const notify = (data) => toast(data);\n  \n\n  const [open,setOpen]=useState(false);\n  const [email,setEmail] = useState('');\n  const [taskid,setTaskid] =useState('');\n  const [newMessage,setNewMessage] = useState([]);\n  const [itemsCount,setItemCount] = useState(0);\n  const Open=(mail,taskid)=>{\n    setTaskid(taskid);\n    setEmail(mail);\n    setOpen(!open);\n\n    var lists = newMessage.filter(x => {\n      return x.task_id != taskid;\n    })\n\n   // console.log(lists)\n    setNewMessage(lists);\n\n    setTimeout(() => {\n     // Count()\n     var legth = lists.length;\n\n     setItemCount(legth);\n   }, 1200);\n   }\n\n\n   const notifY=()=>{\n    if(state){\n     \n      socket.on('newMessage',(message)=>{\n        //console.log(message);\n          notify('you have a new message from '+message.username+\"...\"+message.message.substring(0, 100));\n  \n         // setNewMessage([...newMessage,message]);\n        //alert(test)\n      })\n     }\n   }\n\n   useEffect(()=>{\n    notifY();\n   },[]);\n\n\n   useEffect(()=>{\n     notifY();\n   },[]);\n   const Count = ()=>{\n    var legth = newMessage.length;\n\n  setItemCount(legth +1);\n}\n\nif(state){\n  socket.on('newMessage',(message)=>{\n    //console.log(message);\n        //clearTimeout(Alert);\n        //Alert(message)\n\n        const found = newMessage.some(item=>item.task_id === message.task_id);\n        \n        if(found == false){\n        /*  this.setState({people: this.state.people.filter(function(person) { \n            return person !== e.target.value \n        })});*/\n        var Newt = newMessage.filter(function(item) { \n          return item.task_id !== message.task_id \n      })\n          setNewMessage([...Newt,message]);\n        }\n        setTimeout(() => {\n           Count()\n        }, 1200);\n\n       \n    \n  },[]);\n }\n/*\n   if(state){\n    socket.on('newMessage',(message)=>{\n     console.log(message);\n        notify('you have a new message from '+message.username+\"...\"+message.message.substring(0, 100));\n      //alert(test)\n    })\n   }*/\n  //const itemsCount = 4\n  return (\n    <>\n    <CDropdown\n      inNav\n      className=\"c-header-nav-item mx-2\"\n      direction=\"down\"\n    >\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n        <CIcon name=\"cil-envelope-open\" /><CBadge shape=\"pill\" color=\"info\">{itemsCount}</CBadge>\n      </CDropdownToggle>\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n        <CDropdownItem\n          header\n          tag=\"div\"\n          color=\"light\"\n        >\n          <strong>You have {itemsCount} messages</strong>\n        </CDropdownItem>\n      \n        {newMessage.map((item)=>{\n         return <>\n                   <CDropdownItem onClick={()=>Open(item.sender_id,item.task_id)} href=\"#\">\n          <div className=\"message\">\n            <div className=\"pt-3 mr-3 float-left\">\n              <div className=\"c-avatar\">\n                <CImg\n                 style={{width:\"40px\",height:\"40px\",borderRadius:\"20px\"}}\n                  src={item.Imageurl}\n                  className=\"c-avatar-img\"\n                  alt=\"admin@bootstrapmaster.com\"\n                />\n                <span className=\"c-avatar-status bg-warning\"></span>\n              </div>\n            </div>\n            <div>\n              <small className=\"text-muted\">{item.username}</small>\n              <small className=\"text-muted float-right mt-1\">5 minutes ago</small>\n            </div>\n            <div className=\"text-truncate font-weight-bold\"></div>\n            <br/>\n            <div className=\"small text-muted text-truncate\">\n              <p>{item.message}</p>\n            </div>\n            <br/>\n          </div>\n        </CDropdownItem>\n                </>\n       })}\n       \n      </CDropdownMenu>\n    </CDropdown>\n    {open && <ChatBox\n    open={open}\n    SetOpen={Open}\n    email={email}\n    socket={socket}\n    taskid={taskid}\n   />}\n    </>\n  )\n}\n\nexport default TheHeaderDropdownMssg","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/TheContent.js",["418","419"],"import React, { Suspense, useEffect, useState } from 'react';\nimport io from 'socket.io-client';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Urls from 'src/Api/urls';\nimport {\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n  \nconst loading = (\n  <div className=\"pt-3 text-center\">\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\n  </div>\n)\n\n\nlet socket = io(Urls.baseUrl, {transports: ['websocket']});\nconst TheContent = ({email,name,notificationCount,Messages,setSocket}) => {\n  const ENDPOINT = 'localhost:4000';\n  const notify = (data) => toast(data);\n  const [click,setClick] = useState(false);\n\n\n  useEffect(()=>{\n     //  socket = io.connect(ENDPOINT);\n   \n    setSocket(socket);\n\n    let room = email;\n    localStorage.setItem('mail',room);\n \n     socket.emit('joins',{name,room}, () =>{\n      });\n       \n      setSocket(socket)\n \n     \n \n      socket.on('newNotification',(notification)=>{\n       notificationCount(notification[0].count);\n        Messages(notification[0].data);\n        setTimeout(() => {\n         setClick(true);\n         notify(notification[0].count+\" New Notifications\");\n        }, 2000);\n    \n          // console.log(notification);\n      })\n      \n  },[ENDPOINT]);\n\n\n \n  return (\n    <main className=\"c-main\">\n      <CContainer fluid>\n        <Suspense fallback={loading}>\n          <Switch>\n            {routes.map((route, idx) => {\n              return route.component && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                    <CFade>\n                      <route.component socket={socket} {...props} />\n                    </CFade>\n                  )} />\n              )\n            })}\n            <Redirect from=\"/\" to=\"/dashboard\" />\n          </Switch>\n        </Suspense>\n      </CContainer>\n      <ToastContainer />\n    </main>\n  )\n}\n\nexport default React.memo(TheContent)\n","/Users/tony/Documents/Projects/react/Writer/writer/src/containers/_nav.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/routes.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/users/Users.js",[],["420","421"],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/users/User.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/widgets/Widgets.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/dashboard/Dashboard.js",["422","423"],"import React, { lazy, useEffect, useState } from 'react'\nimport ApiRequest from 'src/Api/Requests/Apirequest.js';\n\nimport NewTask from '../base/NewTask/NewTask.js'\nimport SingeleTask from '../base/NewTask/taskDetails/singleTaskDetails.js';\nimport AssignedOrders from '../base/Orders/assigned/index.js';\n\n\n\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\n//const WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\n\nconst Dashboard = () => {\n\n  \n  const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n  const [singleTaskId,setSingleTaskId] = useState();\n\n  const [dashboard,setDashBoard]= useState([]);\n  const [set,setSet]=useState(false);\n\n  const HandleDashBoard=async ()=>{\n   var data= await ApiRequest.DashBoardData();\n    console.log(data.data)\n   setDashBoard([data.data]);\n   setSet(true);\n  }\n\n\n  useEffect(()=>{\n    \n    HandleDashBoard();\n  },[]);\n\n  const handleShowSingleTask=(id)=>{\n    \n    \n        setSingleTaskId(id);\n        setShowSingleTask(true);\n  }\n\n  const handleCloseTask=()=>{\n     setSingleTaskId('');\n     setShowSingleTask(false);\n  }\n  return (\n    <React.Fragment>\n      {!isSingleTaskOpen && set &&  <WidgetsDropdown dashboard={dashboard}/>}\n     \n       {<AssignedOrders/>}\n      {/*!isSingleTaskOpen && <NewTask showSingleTask={handleShowSingleTask}/>*/}\n      {isSingleTaskOpen && <SingeleTask closeTask={handleCloseTask} id={singleTaskId}/>}\n      \n\n     \n    </React.Fragment>\n  )\n}\n\nexport default Dashboard\n","/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/Charts.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/theme/colors/Colors.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/theme/typography/Typography.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/modals/Modals.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/toaster/Toaster.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/icons/brands/Brands.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/icons/coreui-icons/CoreUIIcons.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/alerts/Alerts.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/button-groups/ButtonGroups.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/buttons/Buttons.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/button-dropdowns/ButtonDropdowns.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/brand-buttons/BrandButtons.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/icons/flags/Flags.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/breadcrumbs/Breadcrumbs.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/notifications/badges/Badges.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/tables/Tables.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/collapses/Collapses.js",["424","425","426","427","428"],"import React, { useState } from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CCollapse,\n  CFade,\n  CRow \n} from '@coreui/react';\nimport { DocsLink } from 'src/reusable'\n\nconst Collapses = () => {\n\n  const [collapse, setCollapse] = useState(false)\n  const [collapseMulti, setCollapseMulti] = useState([false, false])\n  const [accordion, setAccordion] = useState(1)\n  const [fade, setFade] = useState(true)\n\n  const toggle = (e) => {\n    setCollapse(!collapse)\n    e.preventDefault()\n  }\n\n  const toggleMulti = (type) => {\n    let newCollapse = collapseMulti.slice()\n    switch (type) {\n      case \"left\":\n        newCollapse[0] = !collapseMulti[0];\n        break;\n      case \"right\":\n        newCollapse[1] = !collapseMulti[1];\n        break;\n      case \"both\":\n        newCollapse[0] = !collapseMulti[0];\n        newCollapse[1] = !collapseMulti[1];\n        break;\n      default:\n    }\n    setCollapseMulti(newCollapse)\n  }\n\n  const toggleFade = () => {\n    setFade(!fade)\n  }\n\n  return (\n    <CRow>\n      <CCol xl=\"6\">\n        <CCard>\n          <CCardHeader>\n            Collapse\n            <DocsLink name=\"CCollapse\"/>\n          </CCardHeader>\n          <CCollapse show={collapse}>\n            <CCardBody>\n              <p>\n                Anim pariatur cliche reprehenderit,\n                enim eiusmod high life accusamus terry richardson ad squid. Nihil\n                anim keffiyeh helvetica, craft beer labore wes anderson cred\n                nesciunt sapiente ea proident.\n              </p>\n              <p>\n                Donec molestie odio id nisi malesuada, mattis tincidunt velit egestas. Sed non pulvinar risus. Aenean\n                elementum eleifend nunc, pellentesque dapibus arcu hendrerit fringilla. Aliquam in nibh massa. Cras\n                ultricies lorem non enim volutpat, a eleifend urna placerat. Fusce id luctus urna. In sed leo tellus.\n                Mauris tristique leo a nisl feugiat, eget vehicula leo venenatis. Quisque magna metus, luctus quis\n                sollicitudin vel, vehicula nec ipsum. Donec rutrum commodo lacus ut condimentum. Integer vel turpis\n                purus. Etiam vehicula, nulla non fringilla blandit, massa purus faucibus tellus, a luctus enim orci non\n                augue. Aenean ullamcorper nisl urna, non feugiat tortor volutpat in. Vivamus lobortis massa dolor, eget\n                faucibus ipsum varius eget. Pellentesque imperdiet, turpis sed sagittis lobortis, leo elit laoreet arcu,\n                vehicula sagittis elit leo id nisi.\n              </p>\n            </CCardBody>\n          </CCollapse>\n          <CCardFooter>\n            <CButton\n              color=\"primary\"\n              onClick={toggle}\n              className={'mb-1'}\n            >Toggling button</CButton>\n          </CCardFooter>\n        </CCard>\n\n        \n      </CCol>\n      <CCol xl=\"6\">\n      <CCard>\n          <CCardHeader>\n            Collapse\n            <DocsLink name=\"CCollapse\"/>\n          </CCardHeader>\n          <CCollapse show={collapse}>\n            <CCardBody>\n              <p>\n                Anim pariatur cliche reprehenderit,\n                enim eiusmod high life accusamus terry richardson ad squid. Nihil\n                anim keffiyeh helvetica, craft beer labore wes anderson cred\n                nesciunt sapiente ea proident.\n              </p>\n              <p>\n                Donec molestie odio id nisi malesuada, mattis tincidunt velit egestas. Sed non pulvinar risus. Aenean\n                elementum eleifend nunc, pellentesque dapibus arcu hendrerit fringilla. Aliquam in nibh massa. Cras\n                ultricies lorem non enim volutpat, a eleifend urna placerat. Fusce id luctus urna. In sed leo tellus.\n                Mauris tristique leo a nisl feugiat, eget vehicula leo venenatis. Quisque magna metus, luctus quis\n                sollicitudin vel, vehicula nec ipsum. Donec rutrum commodo lacus ut condimentum. Integer vel turpis\n                purus. Etiam vehicula, nulla non fringilla blandit, massa purus faucibus tellus, a luctus enim orci non\n                augue. Aenean ullamcorper nisl urna, non feugiat tortor volutpat in. Vivamus lobortis massa dolor, eget\n                faucibus ipsum varius eget. Pellentesque imperdiet, turpis sed sagittis lobortis, leo elit laoreet arcu,\n                vehicula sagittis elit leo id nisi.\n              </p>\n            </CCardBody>\n          </CCollapse>\n          <CCardFooter>\n            <CButton\n              color=\"primary\"\n              onClick={toggle}\n              className={'mb-1'}\n            >Toggling button</CButton>\n          </CCardFooter>\n        </CCard>\n\n        \n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Collapses\n","/Users/tony/Documents/Projects/react/Writer/writer/src/views/widgets/WidgetsBrand.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/widgets/WidgetsDropdown.js",["429"],"import React from 'react'\nimport {\n  CWidgetDropdown,\n  CRow,\n  CCol,\n\n} from '@coreui/react'\n\nimport ChartLineSimple from '../charts/ChartLineSimple'\nimport ChartBarSimple from '../charts/ChartBarSimple';\n\n\nconst WidgetsDropdown = ({dashboard}) => {\n  var data = dashboard[0];\n  // render\n  return (\n    <CRow>\n      <CCol sm=\"6\" lg=\"6\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n          header={data.assignedOrders[0].count}\n          text=\"Assigned Orders\"\n          width=\"200px\"\n          footerSlot={\n            \n            <ChartBarSimple\n              pointed\n              className=\"c-chart-wrapper mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={data.assignedOrders[0].points}\n              pointHoverBackgroundColor=\"primary\"\n              label=\"Orders %\"\n              labels=\"months\"\n            />\n          }\n        >\n         \n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"6\">\n        <CWidgetDropdown\n          color=\"gradient-info\"\n          \n          text=\"0rders in Progress\"\n         \n          header={data.assignedOrders[0].count}\n        \n          width=\"200px\"\n          footerSlot={\n            \n            <ChartBarSimple\n              pointed\n              className=\"c-chart-wrapper mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={data.assignedOrders[0].points}\n              pointHoverBackgroundColor=\"primary\"\n              label=\"Orders %\"\n              labels=\"months\"\n            />\n          }\n\n        >\n         \n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-warning\"\n         \n          text=\"Completed Orders\"\n          header={data.completedOrders[0].count}\n         \n          footerSlot={\n            <ChartBarSimple\n              pointed\n              className=\"c-chart-wrapper mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={data.completedOrders[0].points}\n              pointHoverBackgroundColor=\"primary\"\n              label=\"Completed Orders\"\n              labels=\"months\"\n            />\n          }\n        >\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-info\"\n         \n          text=\"Orders being Reviewed\"\n          header={data.pendingReviews[0].count}\n          \n          footerSlot={\n            <ChartBarSimple\n              pointed\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={data.pendingReviews[0].points}\n              pointHoverBackgroundColor=\"info\"\n              options={{ elements: { line: { tension: 0.00001 }}}}\n              label=\"Pending\"\n              labels=\"months\"\n            />\n          }\n        >\n        </CWidgetDropdown>\n      </CCol>\n\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-success\"\n         \n          text=\"Orders Being Redone\"\n          header={data.ordersBeingRedone[0].count}\n          \n          footerSlot={\n            <ChartBarSimple\n              className=\"mt-3\"\n              style={{height: '70px'}}\n              backgroundColor=\"rgba(255,255,255,.2)\"\n              dataPoints={data.ordersBeingRedone[0].points}\n              options={{ elements: { line: { borderWidth: 2.5 }}}}\n              pointHoverBackgroundColor=\"warning\"\n              label=\"Revisions\"\n              labels=\"months\"\n            />\n          }\n        >\n        </CWidgetDropdown>\n      </CCol>\n      <CCol sm=\"6\" lg=\"3\">\n        <CWidgetDropdown\n          color=\"gradient-primary\"\n         \n          header={data.cancelledOrders[0].count}\n          text=\"Cancelled Orders\"\n          footerSlot={\n            <ChartBarSimple\n              className=\"mt-3 mx-3\"\n              style={{height: '70px'}}\n              dataPoints={data.cancelledOrders[0].points}\n              backgroundColor=\"rgb(250, 152, 152)\"\n              label=\"Cancelled\"\n              labels=\"months\"\n            />\n          }\n        >\n        </CWidgetDropdown>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default WidgetsDropdown\n","/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/MainChartExample.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/users/UsersData.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/ChartBarSimple.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/charts/ChartLineSimple.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/reusable/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/reusable/DocsLink.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/NewTask.js",["430"],"import React from 'react'\nimport {\n  \n    CRow,\n   \n  } from  '@coreui/react'\n // import CIcon from '@coreui/icons-react'\n//import { DocsLink } from 'src/reusable'\n//import TaskCard from './taskCard'\nimport AssignedOrders from '../Orders/assigned'\nconst NewTask =({limit,showSingleTask})=>{\n   /* const [collapsed, setCollapsed] = React.useState(false)\n    const [showCard, setShowCard] = React.useState(false);\n    const [id,setId] = React.useState('');\n\n    const handleCollapse=(id)=>{\n       setId(id);\n       \n       setCollapsed(!collapsed);\n       setShowCard(true);\n    }\n\n    const handleShowCard=(id)=>{\n      setId(id);\n      setShowCard(!showCard);\n    }*/\n  \n    return (\n      <>\n      \n         <AssignedOrders/>\n      \n      </>\n    )\n}\n\nexport default NewTask;\n","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/taskCard.js",["431","432","433","434"],"import {\n    CBadge,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CRow,\n    CCollapse,\n    CFade,\n    CSwitch,\n    CLink\n  } from  '@coreui/react'\n  import CIcon from '@coreui/icons-react'\nconst TaskCard =({stateId,id,showcard,collapse,handleCollapse,handleShowCard,showDetails})=>{\n   return <CCol xs=\"12\" sm=\"6\" md=\"4\">\n   <CFade in={stateId===id?showcard:true}>\n     <CCard>\n       <CCardHeader>\n         Card actions\n         <div className=\"card-header-actions\">\n           <CLink className=\"card-header-action\">\n             <CIcon name=\"cil-settings\" />\n           </CLink>\n           <CLink className=\"card-header-action\" onClick={() => handleCollapse(id)}>\n             <CIcon name={collapse ? 'cil-chevron-bottom':'cil-chevron-top'} />\n           </CLink>\n           <CLink className=\"card-header-action\" onClick={() => handleShowCard(id)}>\n             <CIcon name=\"cil-x-circle\" />\n           </CLink>\n         </div>\n       </CCardHeader>\n       <CCollapse show={stateId == id?collapse:false}>\n         <CCardBody>\n           Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut\n           laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation\n           ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.\n         </CCardBody>\n       </CCollapse>\n\n       <CCardFooter>\n         \n           &nbsp; fixed-price($200)&nbsp;|| &nbsp;\n           <button style={{float:'right'}} onClick={()=>showDetails(id)} className=\"btn btn-info\">Full Details</button>\n       </CCardFooter>\n     </CCard>\n   </CFade>\n </CCol>\n}\n\nexport default TaskCard;",["435","436"],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/NewTask/taskDetails/singleTaskDetails.js",["437","438"],"import { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport Urls from \"src/Api/urls\";\n\nconst SingeleTask=({id,closeTask,isAccept=true,acceptTask})=>{\n  const [details,setDetails] = useState([]);\n  const [view,setView] = useState(false);\n\n  const getDetails=async()=>{\n    try {\n      \n      const result = await ApiRequest.getSingleTaskFullDetails(id);\n\n      setDetails(result.data);\n    //  console.log(result.data); \n      setView(true);\n    } catch (error) {\n         \n    }\n  \n   // await ApiRequest.fileDownload(\"http://localhost:4000/files/Task367960GRADUATION LIST- DEC 2021 FOR NOTICE BOARD.pdf\");\n  }\n\n  const statusMode=(status)=>{\n    if(status === \"new\"){\n     return <span className=\"badge badge-info\">{status}</span>\n    }\n    if(status === \"cancelled\"){\n     return <span className=\"badge badge-warning\">{status}</span>\n    }\n  if(status === \"completed\"){\n    return <span className=\"badge badge-success\">{status}</span>\n  }\n  if(status === \"in-progress\"){\n    return <span className=\"badge badge-primary\">{status}</span>\n  }\n}\n\nuseEffect(()=>{\n  // downloadFile(\"new.pdf\");\n  getDetails();\n},[]);\n\n   // alert(id);\n    \n   return <>\n  {view && <section>\n     <div style={{height:'60px',display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}} className=\"card\">\n          <div style={{marginTop:\"20px\",marginLeft:\"10px\"}}><h5>ORDER DETAILS &nbsp;({details.result[0].task_title})</h5></div>\n         <div>\n             click here to go back {\"->\"}&nbsp;\n             <button onClick={()=>closeTask(id)} className=\"fa fa-history\"  style={style.button}>\n        \n             </button></div>\n      </div>\n     <hr/>\n <div className=\"jumbotron jumbotron-fluid card\">\n         <div className=\"container\">\n         <div style={{height:'60px',display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}} className=\"card\">\n          <div style={{marginTop:\"20px\",marginLeft:\"10px\"}}>\n          <div>\n             <th>\n            \n                    Order Status\n                </th>\n                <td>&nbsp;&nbsp;{statusMode(details.result[0].task_status)}</td>\n             </div>\n          </div>\n         \n          </div>\n            \n            \n \n         <div className=\"container\">\n      \n                <div className=\"row\">\n                             <div className=\"col-md-4\">\n                             <strong>Order Name</strong> <p>{details.result[0].task_title}</p>\n                             <strong>Order ID</strong> <p>{details.result[0].task_id}</p>\n                             <strong>Order Title</strong> <p>{details.result[0].task_title}</p>\n                             <strong>Work Type</strong> <p>{details.result[0].task_work_type}</p>\n                             </div>\n                             <div className=\"col-md-4\">\n                             <strong>Service</strong> <p>{details.result[0].task_service}</p>\n                             <strong>Discipline</strong> <p>{details.result[0].task_Descipline}</p>\n                             <strong>Created date</strong> <p>{details.result[0].task_created_date}</p>\n                             <strong style={{color:\"brown\"}}><h3>DEADLINE</h3></strong> <p className=\"badge badge-info\">{details.result[0].task_deadline}</p>\n                             </div>\n                             <div className=\"col-md-3\">\n                                 <div className=\"btn-group-vertical btn-block\">\n                                   \n                                 </div>\n                             </div>\n                 </div>\n        </div>\n \n \n      </div>\n </div>\n \n \n   <div  className=\"box box-solid card\">\n                     <div style={{marginLeft:\"10px\"}} className=\"box-header with-border\">\n \n                       <h3 className=\"box-title\">Order details</h3>\n                     </div>\n                     \n                       <div  style={{marginLeft:\"10px\"}}className=\"dl-horizontal row\">\n                           <div className=\"col-md-11\" dangerouslySetInnerHTML={{ __html: details.result[0].task_description }} >\n                           \n                           </div>\n                           \n                       </div>\n     </div>\n     <div  className=\"box box-solid card\">\n                     <div style={{marginLeft:\"10px\"}} className=\"box-header with-border\">\n \n                       <h3 className=\"box-title\">Other Information</h3>\n                     </div>\n                     \n                       <div  style={{marginLeft:\"10px\"}}className=\"dl-horizontal row\">\n                           <div className=\"col-md-4\">\n                             <dt>Price per page:</dt>\n                             <dd>{details.result[0].price_per_page}</dd>\n                               <dt>Price:</dt>\n                               <dd>{details.result[0].price}</dd>\n                           </div>\n                           <div className=\"col-md-4\">\n \n                            \n                             <dt>Pages Number:</dt>\n                             <dd>{details.result[0].pages}</dd>\n                           </div>\n \n                          \n                       </div>\n     </div>\n \n \n     <div className=\"box box-solid card\">\n                     <div style={{marginLeft:\"10px\"}} className=\"box-header with-border\">\n \n                         <h3 className=\"box-title\">Writer Details</h3>\n                     </div>\n                     \n                     <div style={{marginLeft:\"10px\"}} className=\"box-body\">\n                   \n                    <div className=\"row\">\n                             <div className=\"col-md-4\">\n                                 <h4>Name:  <span className=\"text-info\">{Object.keys(details.writerDetails[0]).length!==0?details.writerDetails[0].name:\"\"}</span> </h4>\n                             </div>\n                             <div className=\"col-md-4\">\n                                 <h4>Phone:  <span className=\"text-info\">{Object.keys(details.writerDetails[0]).length !==0?details.writerDetails[0].phone.replace(\"254\",'0'):\"\"}</span> </h4>\n                             </div>\n                             <div className=\"col-md-4\">\n                                 <h4>Email:  <span className=\"text-info\">{Object.keys(details.writerDetails[0]).length!==0?details.writerDetails[0].email:\"\"}</span> </h4>\n                             </div>\n                         </div>\n                     </div>\n                    \n                 </div>\n \n \n                 <div className=\"box box-solid card\">\n                     <div style={{marginLeft:\"10px\"}} className=\"box-header\">\n                       <h3 className=\"box-title\">Order Files</h3>\n                     </div>\n                    \n                     <div className=\"box-body\">\n                         <table className=\"table\">\n                                 <tbody><tr>\n                                   <th style={{width:\"10px\"}}>#</th>\n                                   <th>File Name</th>\n                                   <th>Action</th>\n                                 </tr>\n                                 {details.orderFiles.map((item,index)=>{\n                                    return    <tr>\n                                        <td>{index +1}</td>\n                                        <td>{item.filename}</td>\n                                        <td>\n                                      <a href={Urls.fileDownloadUrl+item.path}>Download</a></td>\n                              </tr>\n                                 })}\n                              \n                                  \n                                     \n                               </tbody>\n                           </table>\n                     </div>\n                   \n                   </div>  \n \n                   <div className=\"box box-solid card\">\n                     <div style={{marginLeft:\"10px\"}} className=\"box-header\">\n                       <h3 className=\"box-title\">Writer submited Files</h3>\n                     </div>\n                    \n                     <div className=\"box-body\">\n                         <table className=\"table\">\n                                 <tbody><tr>\n                                   <th style={{width:\"10px\"}}>#</th>\n                                   <th>File Name</th>\n                                   <th>Action</th>\n                                 </tr>\n \n                                 <tr>\n                                 {details.witerSubmitedFiles.map((item,index)=>{\n                                    return    <tr>\n                                        <td>{index +1}</td>\n                                        <td>{item.filename}</td>\n                                        <td>\n                                      <a href={Urls.fileDownloadUrl+item.path}>Download</a></td>\n                              </tr>\n                                 })}\n                                 </tr>\n                                  \n                                     \n                               </tbody>\n                           </table>\n                     </div>\n                   \n                   </div>  \n \n                 \n     <div style={{backgroundColor:\"#000\"}}  className=\"box box-solid card\">\n                    \n      <div  style={{marginLeft:\"10px\"}}className=\"dl-horizontal row\">\n                          \n          {isAccept &&  <div className=\"col-md-10\">\n                               <dt style={{\n                                     marginTop:\"10px\",\n                                     marginBottom:\"10px\",\n                                     marginLeft:\"40%\",\n                                     width:\"50%\",\n                                     margin:\"10x 10px auto\"\n                               }}>\n                                    <button onClick={()=>acceptTask(id)} style={{width:'80%'}} className=\"btn btn-primary\">\n                                        Accept Task\n                                    </button>\n                               </dt>\n                                \n                         </div>}\n             </div>        \n     </div>\n </section>}\n\n   </>\n}\n\nconst style={\n     button:{\n        marginTop:\"10px\",\n        marginRight:'10px',\n        border:\"0px\",\n        outline:\"0px\",\n        height:\"40px\",\n        width:\"40px\",\n        borderRadius:\"20px\",\n        border:\"1px solid #ecff\"\n     }\n}\n\nexport default SingeleTask;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/cancelled/index.js",["439"],"import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst CancelledOrders=()=>{\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n  const [cancelledTask,setCancelled] = useState([]);\n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n\n\n    const getCancelledTask = async ()=>{\n        const result = await ApiRequest.getCancelled();\n\n        const organisedData =[];\n        result.data.forEach(element => {\n                 var dat ={\n                     \"#order\": element.task_id,\n                     \"OrderName\": element.task_name,\n                     \"Title\": element.task_title,\n                     \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                     \"Created\": element.task_created_date,\n                     \"Deadline\": element.task_deadline,\n                     \"Service\": element.task_service,\n                     \"Pages\": element.pages,\n                     \"Action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(element.task_id)}>Details</button> \n                 } \n                 \n                 organisedData.push(dat);\n        });\nsetCancelled(organisedData);\n\n    }\n  \n    useEffect(()=>{\n        getCancelledTask();\n    },[])\n    \nconst  columns = [\n                  {\n                      dataField:'#order',\n                       text:  '#order',\n                  },\n                  {\n                      dataField:'OrderName',\n                       text:  'ordername',\n                  },\n                  {\n                      dataField:'Title',\n                       text:  'title',\n                  },\n                  {\n                      dataField:'status',\n                       text:  'status',\n                  },\n                  {\n                      dataField:'Created',\n                       text:  'created',\n                  },\n                  {\n                      dataField:'Deadline',\n                       text:  'deadline',\n                  },\n                 \n                  {\n                      dataField:'Pages',\n                       text:  'page',\n                  },\n                  \n                  {\n                      dataField:'Action',\n                       text:  'action',\n                  },\n               \n              ]\n          \n       \n     \n  \n      return <React.Fragment>\n      {!isSingleTaskOpen && <TableCard columns={columns} products={cancelledTask} title={\"Cancelled Orders\"}/>}\n      {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n      </React.Fragment> \n}\n\nexport default CancelledOrders;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/assigned/index.js",["440"],"\nimport React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\n//import TableCard from \"../../Table/tableCard\";\nimport TableCard from '../../../table/TableCard';\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport swal from \"sweetalert\";\n\nconst AssignedOrders = ()=>{\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n\n    const [assignedTask,setAssignedTask] = useState([]);\n\n\n    const HandleAssignedTask = async ()=>{\n        const result = await ApiRequest.getAssignedTask();\n          var organisedData = [];\n         // console.log(result.data)\n        result.data.forEach(element => {\n             var dat ={\n                    \"#order\": element.task_id,\n                    \"OrderName\":element.task_name,\n                    \"Title\": element.task_title,\n                    \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                    \"created\": element.task_created_date,\n                    \"deadline\": element.task_deadline,\n                    \"Service\": element.task_service,\n                    \"page\": element.pages,\n                    \"Action\": Buttons(element.task_id)\n                 }\n\n                 organisedData.push(dat);\n             \n        });\n\n        setAssignedTask(organisedData);\n\n       \n    }\n    \n    useEffect(()=>{\n      HandleAssignedTask();\n    },[]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n const ViewItemDetails =(id)=>{\n    handleShowSingleTask(id)\n    //alert(id);\n}\nconst Reject=async (id)=>{\n    const result = await ApiRequest.RejectTask(id);\n    if(result.data === \"done\"){\n        swal('success','Task Rejected succesfully','success');\n        HandleAssignedTask();\n    }\n\n}\n\nconst Accept = async (id)=>{\n     const result = await ApiRequest.AcceptTask(id);\n\n     if(result.data === \"done\"){\n         swal('success','Task accepted succesfully','success');\n         HandleAssignedTask();\n     }\n}\n\nconst RejectOrder = (id)=>{\n\n    swal(`Are You Sure To Reject This Task!?`, {\n        buttons: {\n          cancel: \"Dont Proceed!\",\n          delete: {\n            text: \"Reject Task\",\n            value: \"reasign\",\n          },\n         \n        },\n      })\n      .then((value) => {\n        switch (value) {\n       \n         \n       \n          case \"reasign\":\n              Reject(id);\n              // assignTask(user_id,task_id)\n            //swal(`task`, \"Re-assigned Successfully\", \"success\");\n            break;\n       \n          default:\n            swal(\"Process Canceled Succesfully!\");\n        }\n      });\n    //alert(id);\n}\n\nconst acceptTask = (id)=>{\n    swal(`Are You Sure To Accept This Task!?`, {\n        buttons: {\n          cancel: \"Dont Proceed!\",\n          delete: {\n            text: \"Accept Task\",\n            value: \"reasign\",\n          },\n         \n        },\n      })\n      .then((value) => {\n        switch (value) {\n       \n         \n       \n          case \"reasign\":\n              Accept(id)\n              // assignTask(user_id,task_id)\n            //swal(`task`, \"Re-assigned Successfully\", \"success\");\n            break;\n       \n          default:\n            swal(\"Process Canceled Succesfully!\");\n        }\n      });\n}\n\nconst Buttons =(Ids)=>{\n   // alert(id)\n    return <React.Fragment>\n         <button className=\"btn btn-danger\" onClick={()=>RejectOrder(Ids)}>Reject</button>&nbsp;\n         <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(Ids)}>Details</button>\n    </React.Fragment>\n}\n\n\n\n\n const columns = [\n    \n        {\n            dataField: '#order',\n           text: '#order',\n        },\n        {\n            dataField: 'OrderName',\n           text: 'ordername',\n        },\n        {\n            dataField: 'Title',\n           text: 'title',\n        },\n        {\n            dataField: 'status',\n           text: 'status',\n        },\n        {\n            dataField: 'created',\n           text: 'created',\n        },\n        {\n            dataField: 'deadline',\n           text: 'deadline',\n        },\n        {\n            dataField: 'Service',\n           text: 'service',\n        },\n        {\n            dataField: 'page',\n           text: 'page',\n        },\n        \n        {\n            dataField: 'Action',\n           text: 'action',\n\n        },\n    \n ]\n\n\nreturn <React.Fragment>\n{!isSingleTaskOpen && <TableCard title={\"assigned Orders\"} columns={columns} products={assignedTask}/>}\n{isSingleTaskOpen && <SingeleTask acceptTask={acceptTask} closeTask={handleCloseTask} id={singleTaskId}/>}\n</React.Fragment> \n}\nexport default AssignedOrders;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/Redone/index.js",["441"],"import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\n\nconst OrdersBeingRedone =()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [Revisions,setRevisions] = useState([]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const getOrdersInRevision = async ()=>{\n        const result = await ApiRequest.getOrdersInRevision();\n       \n\n        const organisedData =[];\n        result.data.forEach(element => {\n                 var dat ={\n                     \"#order\": element.task_id,\n                     \"OrderName\": element.task_name,\n                     \"Title\": element.task_title,\n                     \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                     \"Created\": element.task_created_date,\n                     \"Deadline\": element.task_deadline,\n                     \"Service\": element.task_service,\n                     \"Pages\": element.pages,\n                     \"Action\": <button className=\"btn btn-info\" onClick={()=>handleShowSingleTask(element.task_id)}>Details</button> \n                 } \n                 \n                 organisedData.push(dat);\n        });\nsetRevisions(organisedData);\n\n    }\n\n  \n    useEffect(()=>{\n        getOrdersInRevision();\n    },[])\n    \n     \nconst  columns = [\n    {\n        dataField:'#order',\n         text:  '#order',\n    },\n    {\n        dataField:'OrderName',\n         text:  'ordername',\n    },\n    {\n        dataField:'Title',\n         text:  'title',\n    },\n    {\n        dataField:'status',\n         text:  'status',\n    },\n    {\n        dataField:'Created',\n         text:  'created',\n    },\n    {\n        dataField:'Deadline',\n         text:  'deadline',\n    },\n   \n    {\n        dataField:'Pages',\n         text:  'page',\n    },\n    \n    {\n        dataField:'Action',\n         text:  'action',\n    },\n \n]\n   \n    return <React.Fragment>\n            {!isSingleTaskOpen && <TableCard columns={columns} products={Revisions}/>}\n            {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n        </React.Fragment> \n}\n\nexport default OrdersBeingRedone;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/completed/index.js",["442","443"],"import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\n//import TableCard from \"../../Table/tableCard\";\nimport TablCard from '../../../table/TableCard';\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst CompletedOrders = ()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [completed,setCompleted] = useState([]);\n\n    const getCompletedTask =async ()=>{\n             const result = await ApiRequest.getCompletedTask();\n               var organisedData =[];\n            result.data.forEach(element => {\n                  var dat= {\n                  \"#order\": '#'+element.task_id,\n                  \"OrderName\": element.task_name,\n                  \"Title\": element.task_title,\n                  \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                  \"Createdon\":element.task_created_date,\n                  \"Deadline\":element.task_deadline,\n                  \"Service\":element.task_service,\n                  \"Pages\":element.pages,\n                  \"Action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(element.task_id)}>Details</button>\n            }\n\n            organisedData.push(dat);\n            });\n\n            setCompleted(organisedData)\n    }\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n    useEffect(()=>{\n           getCompletedTask();\n    },[]);\n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n\n    \n\n  \n     const columns= [\n                {\n                    dataField: '#order',\n                    text:'#order',\n                },\n                {\n                    dataField: 'OrderName',\n                    text:'ordername',\n                },\n                {\n                    dataField: 'Title',\n                    text:'title',\n                },\n                {\n                    dataField: 'status',\n                    text:'status',\n                },\n                {\n                    dataField: 'Createdon',\n                    text:'created',\n                },\n                {\n                    dataField: 'Deadline',\n                    text:'deadline',\n                },\n                {\n                    dataField: 'Service',\n                    text:'service',\n                },\n                {\n                    dataField: 'Pages',\n                    text:'page',\n                },\n                \n                {\n                    dataField: 'Action',\n                    text:'action',\n                },\n\n               \n             \n            ]\n       \n       \n   \n\n     const data=[\n         {\n            \"#order\": \"committee-c15dw\",\n            \"ordername\": \"editor-ktsjo\",\n            \"title\": 3,\n            \"status\": <span className=\"badge badge-danger\">cancelled</span>,\n            \"created\": '2021-07-7',\n            \"deadline\": '2021-07-7',\n            \"service\": \"paraprhrasing\",\n            \"page\": \"5\",\n            \"action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(5)}>Details</button>\n         }\n     ]\n    return <React.Fragment>\n\n    {!isSingleTaskOpen && <TablCard title={\"COMPLETED ORDERS\"} columns={columns} products={completed}/>}\n    {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n</React.Fragment> \n}\n\nexport default CompletedOrders;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/in-review/index.js",["444"],"import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nconst OrdersBeingReviewed = ()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [taskBeingReviewed,setTaskBeingReviewed] = useState([]);\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n\n    const getTaskBeingReviewed = async ()=>{\n        const result = await ApiRequest.getTaskBeingReviewed();\n\n        const organisedData =[];\n        result.data.forEach(element => {\n                 var dat ={\n                     \"#order\": element.task_id,\n                     \"OrderName\": element.task_name,\n                     \"Title\": element.task_title,\n                     \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                     \"Created\": element.task_created_date,\n                     \"Deadline\": element.task_deadline,\n                     \"Service\": element.task_service,\n                     \"Pages\": element.pages,\n                     \"Action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(element.task_id)}>Details</button> \n                 } \n                 \n                 organisedData.push(dat);\n        });\nsetTaskBeingReviewed(organisedData);\n\n    }\n    \nuseEffect(()=>{\n     getTaskBeingReviewed();\n},[])\n \n         const columns= [\n                {\n                    dataField:'#order',\n                    text: '#order',\n                },\n                {\n                    dataField:'OrderName',\n                    text: 'ordername',\n                },\n                {\n                    dataField:'Title',\n                    text: 'title',\n                },\n                {\n                    dataField:'status',\n                    text: 'status',\n                },\n                {\n                    dataField:'Created',\n                    text: 'created',\n                },\n                {\n                    dataField:'Deadline',\n                    text: 'deadline',\n                },\n                {\n                    dataField:'Service',\n                    text: 'service',\n                },\n                {\n                    dataField:'Pages',\n                    text: 'page',\n                },\n                \n                {\n                    dataField:'Action',\n                    text: 'action',\n                },\n             \n            ]\n      \n\n    return <React.Fragment>\n    {!isSingleTaskOpen && <TableCard title={\"Orders Pending Review\"} columns={columns} products={taskBeingReviewed}/>}\n    {isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n    </React.Fragment> \n}\n\nexport default OrdersBeingReviewed;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Orders/inprogress/index.js",["445","446","447","448","449","450"],"import React, { useEffect, useState } from \"react\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\nimport swal from \"sweetalert\";\nimport ModalCard from \"../../Modal/Modal\";\nimport Frezer from \"src/Freezer\";\n\n\n\nconst OrdersInProgress =()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [inprogress,setInprogress] = useState([]);\n    const [image,setImage] = useState('');\n    const [profile,setProfile] = useState('');\n    const [taskId,setTaskId] = useState('');\n\n    const [show, setShow] = useState(false);\n    const [isShowLoader,setShowLoader] = useState(false);\n\n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n\n    \n    const getTaskInprogress =async ()=>{\n     <Frezer/>\n           const result = await ApiRequest.getOrdersInprogress();\n        \n            const organisedData =[];\n            \n           result.data.forEach(element => {\n                    var dat ={\n                        \"#order\": element.task_id,\n                        \"OrderName\": element.task_name,\n                        \"Title\": element.task_title,\n                        \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                        \"Created\": element.task_created_date,\n                        \"Deadline\": element.task_deadline,\n                        \"Service\": element.task_service,\n                        \"Pages\": element.pages,\n                        \"Action\": Buttons(element.task_id)\n                    } \n                    \n                    organisedData.push(dat);\n           });\n\n           setInprogress(organisedData);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    useEffect(()=>{\n      getTaskInprogress();\n    },[]);\n    const HandleSubmitTask=(task_id)=>{\n      setTaskId(task_id);\n     setShow(true);\n    }\n\n    const ViewItemDetails =(id)=>{\n       // alert(id);\n       handleShowSingleTask(id);\n    }\n  \n \n\nconst CancelOrder = async (id)=>{\n    const result = await ApiRequest.cancelOrder(id);\n     if(result.data == true){\n         swal('success','Task canceled successfully','success');\n     }else{\n        swal('Error','Process failed','error');\n     }\n}\n\nconst Buttons =(id)=>{\n    return <React.Fragment>\n        <button className=\"btn btn-danger\" onClick={()=>HandleSubmitTask(id)}>Submit Order</button>&nbsp;\n         <button className=\"btn btn-danger\" onClick={()=>CancelOrder(id)}>cancel Order</button>&nbsp;\n         <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(id)}>Details</button>\n    </React.Fragment>\n}\n\nconst Close=()=>{\n    setShow(false)\n  }\n  const SubmitTask=async ()=>{\n       if(profile !== ''){\n\n        const result = await ApiRequest.SubmitTask2(profile);\n\n        if(result !==false){\n            const results = await ApiRequest.SubmitTask(result,taskId);\n           \n            if(results == true){\n                swal('success','Task submited succesfully','success');\n                getTaskInprogress();\n            }else{\n                swal('Error','Proccess Failed','error');\n            }\n        }\n\n           /*const result = await ApiRequest.SubmitTask(profile,taskId);\n           \n            if(result == true){\n                swal('success','Task submited succesfully','success');\n                getTaskInprogress();\n            }else{\n                swal('Error','Proccess Failed','error');\n            }*/\n       }else{\n           swal('Error','Provide file to submit','error');\n       }\n      //alert('submit')\n      \n  }\n\n  const Content=()=>{\n      \n\n    const HandleImage =async  (event)=>{\n\n      //  unction  FileRead(event) {\n            var file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = function(event) {\n            \n             const resul= event.target.result;\n        \n             setImage(resul);\n            // setImage(file);\n\n            setProfile(file);\n\n                \n             \n            };\n            reader.readAsDataURL(file);\n  \n    }\n\n    return <>\n   \n             <form>\n  <div class=\"form-group\">\n      <label for=\"exampleFormControlFile1\">Click To Select Your Profile</label>\n       <input type=\"file\" onChange={(e)=>HandleImage(e)} class=\"form-control-file\" id=\"exampleFormControlFile1\"/>\n   </div>\n    </form>\n          </>\n  }\n\n\nconst columns = [\n            {\n                dataField:'#order',\n                text: '#order',\n            },\n            {\n                dataField:'OrderName',\n                text: 'ordername',\n            },\n            {\n                dataField:'Title',\n                text: 'title',\n            },\n            {\n                dataField:'status',\n                text: 'status',\n            },\n            {\n                dataField:'Created',\n                text: 'created',\n            },\n            {\n                dataField:'Deadline',\n                text: 'deadline',\n            },\n            {\n                dataField:'Service',\n                text: 'service',\n            },\n            {\n                dataField:'Pages',\n                text: 'page',\n            },\n            \n            {\n                dataField:'Action',\n                text: 'action',\n\n            },\n\n           \n         \n        ]\n\nreturn <React.Fragment>\n{!isSingleTaskOpen && <TableCard title={\"Order in progress\"} columns={columns} products={inprogress}/>}\n{isSingleTaskOpen && <SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n\n<ModalCard \nClose={Close}\ncontent={Content()}\nButtonName={\"Submit Task\"}\nShow={show} \n Save={SubmitTask}\n/>\n\n</React.Fragment> \n}\n\nexport default OrdersInProgress;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/unpaid(next-period)/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/paymentHistory/index.js",["451","452","453","454"],"import React, { useEffect, useState } from \"react\";\nimport Invoice from \"../../Invoice/invoice\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../../table/TableCard\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\n\n\n\nconst Invoices = ({showSingleTasks,closeTask,invoiceId})=>{\n      const [InvoiceData,setInVoiceDat] = useState([]);\n      const [email,setEmail] = useState('');\n      const [date,setDate] = useState('');\n      const [Paid,setPaid] = useState('');\n      const [unPaid,setunPaid] = useState(0);\n      const [PaidTotal,setPaidTotal] = useState(0);\n\n      const getInVoiceData=async ()=>{\n           const result = await ApiRequest.LoadInvoicesData(invoiceId);\n\n           \n       const organisedData =[];\n       var date = '';\n       var email ='';\n       var paid =0;\n       var Unpaid =0;\n       var total = 0;\n      result.data.forEach(element => {\n               var dat ={\n                   \"#order\": element.task_id,\n                   \"OrderName\": element.task_name,\n                   \"Title\": element.task_title,\n                   \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                   \"pstatus\":<span className=\"badge badge-danger\">{element.payment_status}</span>,\n                   \"Created\": element.task_created_date,\n                   \"Deadline\": element.task_deadline,\n                   \"Service\": element.task_service,\n                   \"Pages\": element.pages,\n                   \"amount\":element.payment_expected_amount,\n                   \"Action\":<button className=\"btn btn-primary\" onClick={()=>showSingleTasks(element.task_id)}>Details</button>\n               } \n\n             email=element.writer_email;\n             date = element.end_date;\n             if(element.payment_status === 'unpaid'){\n                 Unpaid = Unpaid + Number(element.payment_expected_amount);\n             }\n             if(element.payment_status === 'paid'){\n                paid = paid + Number(element.payment_expected_amount);\n            }\n\n               \n               organisedData.push(dat);\n      });\n      total = paid +Unpaid;\n      setPaidTotal(total);\n      setunPaid(Unpaid);\n      setPaid(paid);\n      setEmail(email);\n      setDate(date);\n      setInVoiceDat(organisedData);\n      }\n\n      useEffect(()=>{\n         getInVoiceData();\n      },[]);\n       \n    return <>\n         <div style={{height:'60px',display:\"flex\",flexDirection:\"row\",justifyContent:\"space-between\"}} className=\"card\">\n         <div style={{marginTop:\"20px\",marginLeft:\"10px\"}}><h5> &nbsp;</h5></div>\n        <div>\n            click here to go back {\"->\"}&nbsp;\n            <button onClick={()=>closeTask()} className=\"fa fa-history\"  style={style.button}>\n       \n            </button></div>\n     </div>\n  <div className=\"container-fluid jumbotron card bg-white text-dark\">\n       <div>\n       <Invoice total={PaidTotal} unpaid={unPaid} paid={Paid} writerEmail={email} tableData={InvoiceData} InvoiceEndate={date} showSingleTask={showSingleTasks}/>\n       </div>\n     \n  </div>\n    </>\n}\nconst PaymentHistory=()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n  \n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n    \n  \n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    const closeTask =()=>{\n        setShowSingleTask(false);\n        setShowInvoice(false)\n    }\n\n    const [isShowInvoice,setShowInvoice]=useState(false);\n    const [InvoiceId,setInvoiceId] = useState('');\n    \n    const [Invoiced,setInvoices]= useState([]);\n    const ViewItemDetails =(id)=>{\n       //alert(id);\n       setInvoiceId(id);\n       setShowInvoice(true);\n    }\n\n\n\n    const LoadInvoices = async ()=>{\n        \n        const data = await ApiRequest.LoadInvoices();\n        console.log(data.data)\n         var organisedData=[];\n        data.data.forEach(element => {\n             var dat ={\n              invoiceId:element.Invoice,\n              created:element.created_date,\n              pdate:element.end_date,\n              Action: <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(element.invoice_id)}>Details</button>\n            \n             }\n\n             organisedData.push(dat);\n        });\n\n        setInvoices(organisedData);\n        \n        //console.log(data.data);\n   }\n\n   useEffect(()=>{\n      LoadInvoices();\n   },[]);\n    \n\n    const columns = [\n      \n        {\n          dataField: \"invoiceId\",\n          text: \"#Invoice Id\",\n       \n        },\n      \n        {\n          \n            dataField: \"created\",\n            text: \"Created Date\",\n          \n          \n        },\n        {\n          \n          dataField: \"pdate\",\n          text: \"Paid-Date\",\n       },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n\n\n     const data=[\n         {\n            \"#invoice\": \"committee-c15dw\",\n            \"writername\": \"editor-ktsjo\",\n            \"datepaid\": \"2021-07-7\",\n            \"action\": <button className=\"btn btn-info\" onClick={()=>ViewItemDetails(5)}>Details</button>\n         }\n     ]\n    return <React.Fragment>\n        {!isShowInvoice &&<TableCard products={Invoiced} columns={columns} />}\n        {isShowInvoice && !isSingleTaskOpen && <Invoices invoiceId={InvoiceId} closeTask={closeTask} showSingleTasks={handleShowSingleTask}/>}\n        {isSingleTaskOpen &&<SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n    </React.Fragment>\n}\n\nconst style={\n    button:{\n       marginTop:\"10px\",\n       marginRight:'10px',\n       border:\"0px\",\n       outline:\"0px\",\n       height:\"40px\",\n       width:\"40px\",\n       borderRadius:\"20px\",\n       border:\"1px solid #ecff\"\n    }\n}\n\nexport default PaymentHistory;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Finaces/unpaid/index.js",["455","456","457"],"import React, { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\nimport Invoice from \"../../Invoice/invoice\";\nimport SingeleTask from \"../../NewTask/taskDetails/singleTaskDetails\";\nimport TableCard from \"../../Table/tableCard\";\n\nconst UnpaidOrders=()=>{\n\n    const [isSingleTaskOpen,setShowSingleTask] = useState(false);\n    const [singleTaskId,setSingleTaskId] = useState();\n    const [UnpaidOrders,setUnpaid] = useState([]);\n    const [email,setEmail] = useState('');\n    const [date,setDate] = useState('');\n    const [Paid,setPaid] = useState('');\n      const [unPaid,setunPaid] = useState(0);\n      const [PaidTotal,setPaidTotal] = useState(0);\n\n    const handleShowSingleTask=(id)=>{\n      \n          setSingleTaskId(id);\n          setShowSingleTask(true);\n    }\n\n    const handleCloseTask=()=>{\n       setSingleTaskId('');\n       setShowSingleTask(false);\n    }\n\n    \n\n    const getUnpaidOrders =async ()=>{\n      const result = await ApiRequest.getUnpaidOrders();\n \n       const organisedData =[];\n       var date = '';\n       var email ='';\n       var paid =0;\n       var Unpaid =0;\n       var total = 0;\n      result.data.forEach(element => {\n               var dat ={\n                   \"#order\": element.task_id,\n                   \"OrderName\": element.task_name,\n                   \"Title\": element.task_title,\n                   \"status\": <span className=\"badge badge-danger\">{element.task_status}</span>,\n                   \"pstatus\":<span className=\"badge badge-danger\">{element.payment_status}</span>,\n                   \"Created\": element.task_created_date,\n                   \"Deadline\": element.task_deadline,\n                   \"Service\": element.task_service,\n                   \"Pages\": element.pages,\n                   \"amount\":element.payment_expected_amount,\n                   \"Action\":<button className=\"btn btn-primary\" onClick={()=>handleShowSingleTask(element.task_id)}>Details</button>\n               } \n\n             email=element.writer_email;\n             date = element.end_date;\n             if(element.payment_status === 'unpaid'){\n              Unpaid = Unpaid + Number(element.payment_expected_amount);\n          }\n          if(element.payment_status === 'paid'){\n             paid = paid + Number(element.payment_expected_amount);\n         }\n\n               \n               organisedData.push(dat);\n      });\n      if(paid == '0'){\n        total = paid;\n        \n      }else{\n        total = paid +Unpaid;\n      }\n      \n      setPaidTotal(total);\n      setunPaid(Unpaid);\n      setPaid(paid);\n       \n     \n      setEmail(email);\n      setDate(date);\n      setUnpaid(organisedData);\n}\n\n\n\n\nuseEffect(()=>{\n getUnpaidOrders()\n},[]);\n  return<> \n    \n      <div className=\"container-fluid jumbotron card bg-white text-dark\">\n           <div>\n          <React.Fragment> \n              {!isSingleTaskOpen && <Invoice total={PaidTotal} unpaid={unPaid} paid={Paid} writerEmail={email} InvoiceEndate={date} tableData={UnpaidOrders} showSingleTask={handleShowSingleTask}/>}\n              {isSingleTaskOpen &&<SingeleTask isAccept={false} closeTask={handleCloseTask} id={singleTaskId}/>}\n          </React.Fragment>\n           </div>\n         \n      </div>\n        </>\n}\n\nexport default UnpaidOrders;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Table/table.js",["458","459","460","461","462","463"],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Table/tableCard.js",["464","465","466","467","468","469"],"import React from \"react\";\n\nimport { useTable, usePagination } from 'react-table';\n//import 'bootstrap/dist/css/bootstrap.min.css';\nconst TableCard = ({ columns, data })=>{\n       // Use the state and functions returned from useTable to build your UI\n       const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        prepareRow,\n        page,\n        canPreviousPage,\n        canNextPage,\n        pageOptions,\n        pageCount,\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n        state: { pageIndex, pageSize },\n    } = useTable(\n        {\n            columns,\n            data,\n            initialState: { pageIndex: 0, pageSize: 10 },\n        },\n        usePagination\n    )\n\n    // Render the UI for your table\n    return (\n        <div style={{overflow:\"scroll\"}}  className=\"container card table-responsive\">\n          \n            <table   className=\"table  table-striped\" {...getTableProps()}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody  {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {row.cells.map(cell => {\n                                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            {/* \n      \n      */}\n            <ul style={{width:\"100%\"}} className=\"pagination\">\n                <li className=\"page-item\" onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n                    <a className=\"page-link\">First</a>\n                </li>\n                <li className=\"page-item\" onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    <a className=\"page-link\">{'<'}</a>\n                </li>\n                <li className=\"page-item\" onClick={() => nextPage()} disabled={!canNextPage}>\n                    <a className=\"page-link\">{'>'}</a>\n                </li>\n                <li className=\"page-item\" onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n                    <a className=\"page-link\">Last</a>\n                </li>\n                <li>\n                    <a className=\"page-link\">\n                        Page{' '}\n                        <strong>\n                            {pageIndex + 1} of {pageOptions.length}\n                        </strong>{' '}\n                    </a>\n                </li>\n                <li>\n                    <a className=\"page-link\">\n                        <input\n                            className=\"form-control\"\n                            type=\"number\"\n                            defaultValue={pageIndex + 1}\n                            onChange={e => {\n                                const page = e.target.value ? Number(e.target.value) - 1 : 0\n                                gotoPage(page)\n                            }}\n                            style={{ width: '100px', height: '20px' }}\n                        />\n                    </a>\n                </li>{' '}\n                <select\n                    className=\"form-control\"\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                    style={{ width: '120px', height: '38px' }}\n                >\n                    {[5, 10, 20, 30, 40, 50].map(pageSize => (\n                        <option key={pageSize} value={pageSize}>\n                            Show {pageSize}\n                        </option>\n                    ))}\n                </select>\n            </ul>\n        </div >\n    )\n}\nexport default TableCard;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Invoice/invoice.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Profile/profile.js",["470","471","472","473","474","475"],"/Users/tony/Documents/Projects/react/Writer/writer/src/Api/authThenticateToken.js",["476","477","478"],"import Axios from \"./config\";\nasync function UpdateToken(refreshToken){\n    try {\n        const endPoint ='refreshToken?refreshToken='+refreshToken;\n       \n        const result = await Axios.post(endPoint);\n        \n        if(result.data == false){\n          \n         window.location.href=\"/#/login\";\n        }else{\n           \n            if(result.data.type === \"writer\" ){\n                \n                const { accessToken,refreshToken } = result.data.tokens;\n                \n                const ta=accessToken;\n                const tr=refreshToken;\n                \n                \n                localStorage.setItem('wat',ta);\n                localStorage.setItem('wtr',tr);\n               \n                return true;\n            }\n            //console.log(result.data)\n            \n        }\n    } catch (error) {\n        console.log(error);\n    } \n}\n\nasync function requestRefreshToken(refreshToken,Profile){\n    try {\n        const endPoint ='refreshToken?refreshToken='+refreshToken;\n       \n        const result = await Axios.post(endPoint);\n        \n        if(result.data == false){\n          \n         window.location.href=\"/#/login\";\n        }else{\n           \n            if(result.data.type === \"writer\" ){\n                \n                const { accessToken,refreshToken } = result.data.tokens;\n                \n                const ta=accessToken;\n                const tr=refreshToken;\n                \n                \n                localStorage.setItem('wat',ta);\n                localStorage.setItem('wtr',tr);\n               // localStorage.setItem('gh',tr);\n               \n                Profile(result.data.data);\n                return true;\n            }\n            //console.log(result.data)\n            \n        }\n    } catch (error) {\n        console.log(error);\n    }\n   \n}\n/*async function verifyAccessToken(accessToken,Profile){\n\n   try {\n          \n           const endPoint ='veryAccessToken?accessToken='+accessToken;\n           const result = await Axios.post(endPoint);\n           console.log(result)\n\n           if(result.data.success !==undefined && result.data.success == true){\n            if(result.data.type === \"writer\"){\n          \n              const { accessToken,refreshToken } = result.data.tokens;\n                \n              const ta=accessToken;\n              const tr=refreshToken;\n             // console.log(result.data.tokens);\n              \n              localStorage.setItem('wat',ta);\n              localStorage.setItem('wtr',tr);\n  \n  \n              Profile(result.data.data);\n               return result.data.success;\n            }\n          }else{ return false;}\n\n\n          \n   } catch (error) {\n         console.log(error)\n  }\n\n}*/\n\nasync function veryAccessTokens(accessToken,Profile){\n    try {\n          \n        const endPoint ='veryAccessToken?accessToken='+accessToken;\n        const result = await Axios.post(endPoint);\n      //  console.log(result)\n\n        if(result.data.success !==undefined && result.data.success == true){\n         if(result.data.user.type === \"writer\"){\n           \n           \n\n\n            Profile(result.data.user);\n            return result.data.user;\n         }\n       }else{ return false;}\n\n\n       \n} catch (error) {\n      console.log(error)\n}\n}\n\n\n\nconst Tokens = function(){\n    const accessToken = localStorage.getItem('wat');\n    const refreshToken = localStorage.getItem('wtr');\n\n    //alert(accessToken)\n\n    return {accessToken,refreshToken};\n}\n\nexport {requestRefreshToken,Tokens,veryAccessTokens,UpdateToken}","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/config.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/activate/forgot.js",["479","480"],"import '../login/login.css';\nimport swal from \"sweetalert\";\nimport Loader from 'react-loader-spinner';\nimport ApiRequest from 'src/Api/Requests/Apirequest';\nimport { useEffect, useState } from 'react';\nconst Forgot=()=>{\n    const [Key,setKey] = useState('');\n    const [btn,setBtn] = useState(false);\n    const [save,SetSave] = useState(false);\n    function showError(data){\n        // alert(data);\n          // swal(\"LOGIN FAILED\",data,'error','1000');\n          swal({\n           title: \"password retrival Failed\",\n           text: data,\n           icon: \"error\",\n           timer: 3000\n        });\n        setBtn(false);\n       }\n\n       const HandleFunc =async (Key)=>{\n        try {\n            var result = await ApiRequest.ForgotPassword(Key);\n              SetSave(false);\n              setBtn(true);\n            if(result.data === 'done'){\n                swal('success','pasword reset success ..chehck email','success');\n                SetSave(false);\n                setTimeout(() => {\n                    window.location.href=\"/#/Login\"\n               }, 2000);\n\n            } else{\n                showError(result.data);\n            }\n          } catch (error) {\n             console.log(error) \n          }\n       }\n    const ActivateAccount=(e)=>{\n        if(e !==undefined){\n            e.preventDefault();\n        };\n              SetSave(true);\n              setBtn(true);\n              setTimeout(() => {\n                  //if(Key !==''){\n                     HandleFunc(Key);\n                    \n                     \n                     \n                //  }\n                  //showError('wrong key')\n                 // SetSave(false);\n              }, 2000);\n\n    }\n    return <>   \n    <div  id=\"myModal\" class=\"show\">\n  <div style={{backgroundColor:\"#f1f1\",marginTop:\"10%\"}} class=\"modal-dialog modal-login\">\n      <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <div class=\"avatar\">\n                  <img src=\"https://www.tutorialrepublic.com/examples/images/avatar.png\" alt=\"Avatar\"/>\n              </div>\t\t\t\t\n              <h4 class=\"modal-title\">Forgot Password</h4>\t\n              <button onClick={()=>window.location.href=\"/#/\"} type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n          </div>\n          <div class=\"modal-body\">\n              <form action=\"\" method=\"post\">\n                \n                  <div class=\"form-group\">\n                      <input type=\"email\" class=\"form-control\" onChange={(e)=>setKey(e.target.value)} name=\"email\" placeholder=\"Email\" required=\"required\"/>\t\n                  </div>        \n                  <div class=\"form-group\">\n                      <button type=\"submit\" onClick={(e)=>ActivateAccount(e)}  class=\"btn btn-primary btn-lg btn-block login-btn\">Get password</button>\n                  </div>\n              </form>\n          </div>\n        \n      </div>\n  </div>\n</div>   \n{ save && <div className=\"spinner\">\n    \n  \n    <Loader\n  type=\"Circles\"\n  color=\"#00BFFF\"\n  height={100}\n  width={100}\n  //3 secs\n  />\n  </div>\n}\n</>\n}\n\nexport default Forgot;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/activate/activate.js",["481","482"],"import { useEffect, useState } from 'react';\nimport { UrlParams } from 'src/Api/auth/UrlParams';\nimport '../login/login.css';\nimport swal from \"sweetalert\";\nimport Loader from 'react-loader-spinner';\nimport ApiRequest from 'src/Api/Requests/Apirequest';\nconst Activate=()=>{\n    const [Key,setKey] = useState('');\n    const [btn,setBtn] = useState(false);\n    const [save,SetSave] = useState(false);\n\n\nfunction showError(data){\n   // alert(data);\n     // swal(\"LOGIN FAILED\",data,'error','1000');\n     swal({\n      title: \"Activation Failed\",\n      text: data,\n      icon: \"error\",\n      timer: 3000\n   });\n   setBtn(false);\n  }\n\n  const HandleFunc =async (Key)=>{\n   try {\n       var result = await ApiRequest.ActivateAcount(Key);\n         SetSave(false);\n         setBtn(true);\n       if(result.data === 'done'){\n           swal('success','Account activated successfully','success');\n           SetSave(false);\n           setTimeout(() => {\n            window.location.href='/#/Login';\n          }, 2000);\n\n       } else{\n           showError(result.data);\n       }\n     } catch (error) {\n        console.log(error) \n     }\n  }\nconst ActivateAccount=(e)=>{\n   if(e !==undefined){\n       e.preventDefault();\n   };\n         SetSave(true);\n         setBtn(true);\n         setTimeout(() => {\n             //if(Key !==''){\n                HandleFunc(Key);\n               \n                \n                \n           //  }\n             //showError('wrong key')\n            // SetSave(false);\n         }, 2000);\n\n}\n\nconst Check=()=>{\n   const Key = UrlParams('Key');\n   \n   if(!Key==false){\n       setKey(Key);\n       setBtn(true);\nHandleFunc(Key);\n     //ActivateAccount(Key);\n   }\n}\n\nuseEffect(()=>{\n Check();\n  //alert(Key);\n},[])\n\n    return <>   \n    <div  id=\"myModal\" class=\"show\">\n  <div style={{backgroundColor:\"#f1f1\",marginTop:\"10%\"}} class=\"modal-dialog modal-login\">\n      <div class=\"modal-content\">\n          <div class=\"modal-header\">\n              <div class=\"avatar\">\n                  <img src=\"https://www.tutorialrepublic.com/examples/images/avatar.png\" alt=\"Avatar\"/>\n              </div>\t\t\t\t\n              <h4 class=\"modal-title\">Activate Account</h4>\t\n              \n              \n          </div>\n          <div class=\"modal-body\">\n              <form action=\"\" method=\"post\">\n                \n                  <div class=\"form-group\">\n                      <input type=\"number\" value={Key} onChange={(e)=>setKey(e.target.value)} class=\"form-control\" name=\"key\" placeholder=\"Activation Key\" required=\"required\"/>\t\n                  </div>        \n                  <div class=\"form-group\">\n                      <button type=\"submit\" onClick={(e)=>ActivateAccount(e)} disabled={btn} class=\"btn btn-primary btn-lg btn-block login-btn\">Activate Account</button>\n                  </div>\n              </form>\n          </div>\n        \n      </div>\n  </div>\n</div>  \n{ save && <div className=\"spinner\">\n    \n  \n    <Loader\n  type=\"Circles\"\n  color=\"#00BFFF\"\n  height={100}\n  width={100}\n  //3 secs\n  />\n  </div>\n  } \n</>\n}\n\nexport default Activate;","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/auth/auth.js",["483","484","485","486"],"import Axios from \"../config\";\n\nfunction validateEmail(email){\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\nfunction validateLogin (email,password){\n    if(email !==\"\"){\n        if(validateEmail(email)){\n            if(password !==\"\"){\n                  return true;\n            }else{return \"password is required\"}\n        }else{ return \"wrong email format\"}\n    }else{ return \"email is required\"}\n }\n\n const Loginn = async (email,password,Profile)=>{\n    try {\n         var res = validateLogin(email,password);\n         if(res == true){\n            var data = \"password=\"+password+\"&email=\"+email\n        const endPoint =`Login?${data}`;\n\n       // console.log(endPoint)\n       \n       const result = await Axios.post(endPoint);\n       \n       if(result.data.success !==undefined && result.data.success == true){\n          if(result.data.type === \"writer\"){\n              \n            const { accessToken,refreshToken } = result.data.tokens;\n            \n            const ta=accessToken;\n            const tr=refreshToken;\n            \n            localStorage.setItem('wat',ta);\n            localStorage.setItem('wtr',tr);\n            //localStorage.setItem('if',JSON.stringify(result.data.data));\n\n\n            Profile(result.data.data);\n            return(result.data.success);\n            //window.location.href=\"/#/home\";\n\n          }\n        }else{ return result.data;}\n      \n                  // return false;\n       // return result.data;\n        }else{\n            return res;\n        }\n   } catch (error) {\n         console.log(error)\n   }\n}\n\nconst Activate = async (Key)=>{\n    const key = parseInt(Key);\n   \n\n    const endPoint =`/writer/api/c2/activate/${key}`;\n\n    const result = await Axios.post(endPoint);\n   \n    return result.data;\n\n}\n\nconst Logout = async ()=>{\n    const accessToken = localStorage.getItem('wat');\n    const refreshToken = localStorage.getItem('wtr');\n\n     const endPoint = `Logout/${refreshToken}`;\n\n     const result = await Axios.post(endPoint);\n      \n     if(result.data == true){\n        \n         localStorage.clear();\n         window.location.reload();\n     }\n  //  localStorage.setItem('ta',ta);\n   // localStorage.setItem('tr',tr);\n}\n\nexport {\n    Loginn,\n    Logout,\n    Activate\n}","/Users/tony/Documents/Projects/react/Writer/writer/src/views/table/TableCard.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/Api/Requests/Apirequest.js",["487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539"],"import Invoice from \"src/views/base/Invoice/invoice\";\nimport Axios from \"../config\";\nimport axios from 'axios';\nimport Urls from \"../urls\";\n\nconst { Tokens, UpdateToken } = require(\"../authThenticateToken\");\n\n//import Axios from \"../config\";\n\n\nconst body =()=>{\n     return{  \n        \"x-access-key\": Tokens().accessToken,\n        \"x-access-token\": Tokens().refreshToken\n      }\n    }\n\nconst ApiRequest ={\n    DashBoardData:async()=>{\n        try {\n            const endPoint =`Dashboard`;\n\n            const result = await Axios.post(endPoint,body());\n            if(result.data == false)\n            {\n                const data = await UpdateToken(Tokens().refreshToken);\n                if(data == true)\n                {\n                  const Result = await Axios.post(endPoint,body());\n                  return Result;\n                }\n            }\n            else{\n                return result;\n            }\n     } catch (error) {\n         // //console.log(error)\n     }\n       },\n\n   getAssignedTask:async()=>{\n    //assigned\n    try {\n        const endPoint =`assigned`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n   },\n   getSingleTaskFullDetails:async(task_id)=>{\n    //  getSingleTaskDetails\n    \n    try {\n      const endPoint =`getSingleTaskDetails/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    \n    RejectTask:async (task_id)=>{\n          \n    try {\n      const endPoint =`RejectTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n\n    AcceptTask:async (task_id)=>{\n            \n    try {\n      const endPoint =`AcceptTask/${task_id}`;//user_id,task_id\n\n      const result = await Axios.post(endPoint,body());\n      \n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n\n    }catch(e){\n       \n      console.log(e);\n      return [];\n     }\n    },\n    getCompletedTask:async ()=>{\n      try {\n        const endPoint =`completedTask`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n    getOrdersInprogress:async ()=>{\n      //inprogress\n      try {\n        const endPoint =`inprogress`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n    cancelOrder:async(task_id)=>{\n      try {\n        const endPoint =`cancelOrder/${task_id}`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n\n    uploadFiles:async (task_id,validFiles) => {\n      //try {\n        \n    \n          var formData = new FormData();\n          formData.append('files', validFiles);\n          formData.append( \"x-access-key\", Tokens().accessToken)\n          formData.append(\"x-access-token\",Tokens().refreshToken);\n\n\n          await axios.post(Urls.fileUploadUrl, formData,{\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        })\n        .then(async (resp)=>{\n           // alert(resp.data);\n           var {error,url} = resp.data;\n           formData.append('path',url);\n\n\n           if(!error){\n            const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n            try {\n      \n    \n              const result = await Axios.post(endPoint,formData);\n             \n              \n              if(result.data == false)\n              {\n                  const data = await UpdateToken(Tokens().refreshToken);\n\n                  if(data == true)\n                  {\n                    const Result = await Axios.post(endPoint,formData);\n                    \n                    formData=\"\";\n                    return Result.data;\n                  }\n              }\n              else{\n                formData=\"\";\n                    return result.data;\n                }\n                  \n              \n            } catch (error) {\n              formData=\"\";\n              //  console.log(error);\n            }\n           }\n\n          // console.log(resp.data);\n\n          \n          })\n             //await sendUpload(endPoint,formData);\n           \n       \n         \n       // }\n\n       \n    // }catch(e){\n       \n    //  console.log(e);\n    //  return [];\n   //  }\n      \n       \n        },\n\n        SubmitTask2:async(file)=>{\n          var formData = new FormData();\n          formData.append('files', file);\n          formData.append('control','submitTask');\n      \n           const result = await axios.post(Urls.fileUploadUrl,formData);\n          \n      \n        if(result.data.status  === \"success\"){\n            var ImagePath = result.data.url;\n            return ImagePath;\n        }\n        else{\n          return false;\n        }\n        },\n\n\n\n\n    SubmitTask:async (file,task_id)=>{\n      var data = \"?FilePath=\"+file+\"&task_id=\"+task_id;\n      const endPoint =`SubmitTask`+data;//user_id,task_id\n\n\n     \n       \n           // alert(resp.data);\n          \n        \n\n\n           \n            //const endPoint =`FileUpload/${task_id}`;//user_id,task_id\n            try {\n      \n    \n              const result = await Axios.post(endPoint,body());\n             \n              \n              if(result.data == false)\n              {\n                  const data = await UpdateToken(Tokens().refreshToken);\n\n                  if(data == true)\n                  {\n                    const Result = await Axios.post(endPoint,body());\n                    \n                   // formData=\"\";\n                    return Result.data;\n                  }\n              }\n              else{\n               // formData=\"\";\n                    return result.data;\n                }\n                  \n              \n            } catch (error) {\n              //formData=\"\";\n              //  console.log(error);\n            }\n           \n\n        \n    },\n\n    getTaskBeingReviewed:async ()=>{\n      //TaskBeingReviewd\n      try {\n        const endPoint =`TaskBeingReviewd`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n    getCancelled:async ()=>{\n      try {\n        const endPoint =`Cancelled`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n    getOrdersInRevision:async ()=>{\n      try {\n        const endPoint =`Revision`;\n\n        const result = await Axios.post(endPoint,body());\n        if(result.data == false)\n        {\n            const data = await UpdateToken(Tokens().refreshToken);\n            if(data == true)\n            {\n              const Result = await Axios.post(endPoint,body());\n              return Result;\n            }\n        }\n        else{\n            return result;\n        }\n } catch (error) {\n      //console.log(error)\n }\n    },\n\n  getUnpaidOrders:async()=>{\n   // Unpaid\n   try {\n    const endPoint =`Unpaid`;\n\n    const result = await Axios.post(endPoint,body());\n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n} catch (error) {\n  //console.log(error)\n}\n  },\n  LoadInvoices:async ()=>{\n    try {\n      const endPoint =`LoadInvoices`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  LoadInvoicesData:async(invoiceId)=>{\n    //LoadInvoiceData\n   \n    try {\n      const endPoint =`LoadInvoiceData/${invoiceId}`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n  getUserDetails:async()=>{\n\n    try {\n      const endPoint =`getUserDetails`;\n  \n      const result = await Axios.post(endPoint,body());\n      if(result.data == false)\n      {\n          const data = await UpdateToken(Tokens().refreshToken);\n          if(data == true)\n          {\n            const Result = await Axios.post(endPoint,body());\n            return Result;\n          }\n      }\n      else{\n          return result;\n      }\n  } catch (error) {\n    //console.log(error)\n  }\n  },\n\n  UpdateProfile2:async(profile)=>{\n    var formData = new FormData();\n    formData.append('files', profile);\n    formData.append('control','writerProfile');\n    //formData.append( \"x-access-key\", Tokens().accessToken)\n   // formData.append(\"x-access-token\",Tokens().refreshToken);\n      \n     const result = await axios.post(Urls.fileUploadUrl,formData);\n    \n\n  if(result.data.status  === \"success\"){\n      var ImagePath = result.data.url;\n      return ImagePath;\n  }\n  else{\n    return false;\n  }\n\n  },\n  \n  UpdateProfile:async (profile)=>{\n     var data = \"?imagePath=\"+profile;\n    const endPoint =`updateProfile`+data;//user_id,task_id\n   \n     \n         //await sendUpload(endPoint,formData);\n         try {\n  \n\n          const result = await Axios.post(endPoint,body());\n         // console.log(result.data)\n          \n          if(result.data == false)\n          {\n              const data = await UpdateToken(Tokens().refreshToken);\n\n              if(data == true)\n              {\n                const Result = await Axios.post(endPoint,body());\n                \n               // formData=\"\";\n                return Result.data;\n              }\n          }\n          else{\n           // formData=\"\";\n              return result.data;\n              \n          }\n        } catch (error) {\n          //ormData=\"\";\n          //  //console.log(error)\n        }\n  },\n  UpdateData:async (data)=>{\n        \n    const endPoint =`UpdateProfileData?`+data;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    console.log(e);\n    return [];\n   }\n  },\n  clearReadNotification:async (notification_id)=>{\n    const endPoint =`clearReadNotification/${notification_id}`;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    //console.log(e);\n    return [];\n   }\n   },\n   loadChatUsers:async (sender,receiver,taskid)=>{\n    const endPoint =`chatUsers/${sender}/${receiver}/${taskid}`;//user_id,task_id\n    //?invoice=${invoice}&task_id=${task_id}\n   try{\n    const result = await Axios.post(endPoint,body());\n    \n    if(result.data == false)\n    {\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true)\n        {\n          const Result = await Axios.post(endPoint,body());\n          return Result;\n        }\n    }\n    else{\n        return result;\n    }\n\n  }catch(e){\n     \n    //console.log(e);\n    return [];\n   }\n   },\n   getOpenTickets:async()=>{\n    try {\n      const endPoint = `Tickets`;\n      const result = await Axios.post(endPoint,body());\n     \n      if(result.data == false){\n       const data = await UpdateToken(Tokens().refreshToken);\n       if(data == true){\n         const Result = await Axios.post(endPoint,body());\n           //console.log(Result)\n         return Result;\n       }\n      }else{\n       \n          return result;\n      }\n} catch (error) {\n      return[];\n     console.log(error);\n}\n   },\n   ActivateAcount:async(Key)=>{\n    try {\n     // alert(Key)\n      const endPoint = `activate/${Key}`;\n      const result = await Axios.post(endPoint,body());\n     \n      if(result.data == false){\n       const data = await UpdateToken(Tokens().refreshToken);\n       if(data == true){\n         const Result = await Axios.post(endPoint,body());\n           //console.log(Result)\n         return Result;\n       }\n      }else{\n       \n          return result;\n      }\n   } catch (error) {\n      //return[];\n     console.log(error);\n}\n   },\n   ForgotPassword:async(email)=>{\n    try {\n      const endPoint = `Forgot/${email}`;\n      const result = await Axios.post(endPoint,body());\n      //console.log(result)\n     \n      if(result.data == false){\n       const data = await UpdateToken(Tokens().refreshToken);\n       if(data == true){\n         const Result = await Axios.post(endPoint,body());\n           //console.log(Result)\n         return Result;\n       }\n      }else{\n       \n          return result;\n      }\n} catch (error) {\n      return[];\n     console.log(error);\n}\n   },\n\n   sendPaymentConfirmation:async (Key)=>{\n    try {\n      // alert(Key)\n       const endPoint = `ConfirmPayMent/${Key}`;\n       const result = await Axios.post(endPoint,body());\n      \n       if(result.data == false){\n        const data = await UpdateToken(Tokens().refreshToken);\n        if(data == true){\n          const Result = await Axios.post(endPoint,body());\n            //console.log(Result)\n          return Result;\n        }\n       }else{\n        \n           return result;\n       }\n    } catch (error) {\n       //return[];\n      console.log(error);\n   }\n  }\n\n} \n\nexport  default ApiRequest;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Modal/Modal.js",["540"],"import { useState } from \"react\";\nimport { Button,Modal } from \"react-bootstrap\";\n\nconst ModalCard=({Show,Close,Save,ButtonName,content,isShowLoader,style,showBtn=true,Buttons})=>{\n  \n\nreturn (\n  <>\n   \n\n    <Modal style={style} show={Show} onHide={Close}>\n      <Modal.Header closeButton>\n        <Modal.Title>{ButtonName}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n          {content}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={Close}>\n          Close\n        </Button>\n       {showBtn &&<Button variant=\"primary\" disabled={isShowLoader} onClick={Save}>\n          {ButtonName}\n        </Button>}\n        {!showBtn && Buttons() }\n      </Modal.Footer>\n    </Modal>\n  </>\n);\n}\n\nexport default ModalCard;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/buttons/index.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Currency/currency.js",["541","542"],"var Currency =function formatMoney(number, decPlaces, decSep, thouSep) {\n    decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces;\n    decSep = typeof decSep === \"undefined\" ? \".\" : decSep;\n    thouSep = typeof thouSep === \"undefined\" ? \",\" : thouSep;\n    var sign = number < 0 ? \"-\" : \"\";\n    var i = String(parseInt(number = Math.abs(Number(number) || 0).toFixed(decPlaces)));\n    var j = (j = i.length) > 3 ? j % 3 : 0;\n\n    return sign +\n        (j ? i.substr(0, j) + thouSep : \"\") +\n        i.substr(j).replace(/(\\decSep{3})(?=\\decSep)/g, \"$1\" + thouSep) +\n        (decPlaces ? decSep + Math.abs(number - i).toFixed(decPlaces).slice(2) : \"\");\n}\n\nexport default Currency;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/base/Profile/CreateAdmins.js",["543"],"import Loader from \"react-loader-spinner\";\n\n\nconst CreateAdmin = ({isShowLoader,\n    email,\n    setEmail,\n    password,\n    setPassword,\n    ConfirmPassword,\n    setConfirmPassword,\n    country,\n    setCountry,\n    address,\n    setAdress,\n    phone,\n    setPhone,\n    category,\n    setCategory,\n    username,\n    setUsername,\n    isShowButton=false,\n    Save\n    })=>{\n    \n    return <>\n         <form>\n             \n             <div style={{\n                  display:\"block\",\n                  cursor:\"pointer\",\n                   zIndex:99,\n                  position:\"absolute\",\n                  top:\"40%\",\n                  left:'40%',\n                  right:\"40%\",\n                  \n             }}>\n                 \n                {isShowLoader &&  <Loader\n                   type=\"Circles\"\n                   color=\"#00BFFF\"\n                    height={100}\n                    width={100}\n      \n                  />}\n               \n             </div>\n        \n  <div className=\"form-row\">\n    <div className=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Email</label>\n      <input type=\"email\" className=\"form-control\" id=\"inputEmail4\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\"/>\n    </div>\n    <div className=\"form-group col-md-6\">\n      <label for=\"inputPassword4\">Username</label>\n      <input type=\"text\" className=\"form-control\" value={username} onChange={(e)=>setUsername(e.target.value)} id=\"inputPassword4\" placeholder=\"Username\"/>\n    </div>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-6\">\n      <label for=\"inputEmail4\">Password</label>\n      <input type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} className=\"form-control\" id=\"inputEmail4\" placeholder=\"password\"/>\n    </div>\n    <div className=\"form-group col-md-6\">\n      <label for=\"inputPassword5\">Confirm Password</label>\n      <input type=\"password\" className=\"form-control\" value={ConfirmPassword} onChange={(e)=>setConfirmPassword(e.target.value)} id=\"inputPassword5\" placeholder=\"ConfirmPassword\"/>\n    </div>\n  </div>\n  <div className=\"form-group\">\n    <label for=\"inputAddress\">COUNTRY</label>\n   \n    <input  value={country} type=\"text\" className=\"form-control\"   onChange={(e)=>setCountry(e.target.value)} style={{height:\"50px\"}}   list=\"country\" name=\"country\" placeholder=\"Country\" className=\"form-control me-2\" />\n   <datalist id=\"country\">\n        <option value=\"Afghanistan\" />\n        <option value=\"Albania\" />\n        <option value=\"Algeria\" />\n        <option value=\"American Samoa\" />\n        <option value=\"Andorra\" />\n        <option value=\"Angola\" />\n        <option value=\"Anguilla\" />\n        <option value=\"Antarctica\" />\n        <option value=\"Antigua and Barbuda\" />\n        <option value=\"Argentina\" />\n        <option value=\"Armenia\" />\n        <option value=\"Aruba\" />\n        <option value=\"Australia\" />\n        <option value=\"Austria\" />\n        <option value=\"Azerbaijan\" />\n        <option value=\"Bahamas\" />\n        <option value=\"Bahrain\" />\n        <option value=\"Bangladesh\" />\n        <option value=\"Barbados\" />\n        <option value=\"Belarus\" />\n        <option value=\"Belgium\" />\n        <option value=\"Belize\" />\n        <option value=\"Benin\" />\n        <option value=\"Bermuda\" />\n        <option value=\"Bhutan\" />\n        <option value=\"Bolivia\" />\n        <option value=\"Bosnia and Herzegovina\" />\n        <option value=\"Botswana\" />\n        <option value=\"Bouvet Island\" />\n        <option value=\"Brazil\" />\n        <option value=\"British Indian Ocean Territory\" />\n        <option value=\"Brunei Darussalam\" />\n        <option value=\"Bulgaria\" />\n        <option value=\"Burkina Faso\" />\n        <option value=\"Burundi\" />\n        <option value=\"Cambodia\" />\n        <option value=\"Cameroon\" />\n        <option value=\"Canada\" />\n        <option value=\"Cape Verde\" />\n        <option value=\"Cayman Islands\" />\n        <option value=\"Central African Republic\" />\n        <option value=\"Chad\" />\n        <option value=\"Chile\" />\n        <option value=\"China\" />\n        <option value=\"Christmas Island\" />\n        <option value=\"Cocos (Keeling) Islands\" />\n        <option value=\"Colombia\" />\n        <option value=\"Comoros\" />\n        <option value=\"Congo\" />\n        <option value=\"Congo, The Democratic Republic of The\" />\n        <option value=\"Cook Islands\" />\n        <option value=\"Costa Rica\" />\n        <option value=\"Cote D'ivoire\" />\n        <option value=\"Croatia\" />\n        <option value=\"Cuba\" />\n        <option value=\"Cyprus\" />\n        <option value=\"Czech Republic\" />\n        <option value=\"Denmark\" />\n        <option value=\"Djibouti\" />\n        <option value=\"Dominica\" />\n        <option value=\"Dominican Republic\" />\n        <option value=\"Ecuador\" />\n        <option value=\"Egypt\" />\n        <option value=\"El Salvador\" />\n        <option value=\"Equatorial Guinea\" />\n        <option value=\"Eritrea\" />\n        <option value=\"Estonia\" />\n        <option value=\"Ethiopia\" />\n        <option value=\"Falkland Islands (Malvinas)\" />\n        <option value=\"Faroe Islands\" />\n        <option value=\"Fiji\" />\n        <option value=\"Finland\" />\n        <option value=\"France\" />\n        <option value=\"French Guiana\" />\n        <option value=\"French Polynesia\" />\n        <option value=\"French Southern Territories\" />\n        <option value=\"Gabon\" />\n        <option value=\"Gambia\" />\n        <option value=\"Georgia\" />\n        <option value=\"Germany\" />\n        <option value=\"Ghana\" />\n        <option value=\"Gibraltar\" />\n        <option value=\"Greece\" />\n        <option value=\"Greenland\" />\n        <option value=\"Grenada\" />\n        <option value=\"Guadeloupe\" />\n        <option value=\"Guam\" />\n        <option value=\"Guatemala\" />\n        <option value=\"Guinea\" />\n        <option value=\"Guinea-bissau\" />\n        <option value=\"Guyana\" />\n        <option value=\"Haiti\" />\n        <option value=\"Heard Island and Mcdonald Islands\" />\n        <option value=\"Holy See (Vatican City State)\" />\n        <option value=\"Honduras\" />\n        <option value=\"Hong Kong\" />\n        <option value=\"Hungary\" />\n        <option value=\"Iceland\" />\n        <option value=\"India\" />\n        <option value=\"Indonesia\" />\n        <option value=\"Iran, Islamic Republic of\" />\n        <option value=\"Iraq\" />\n        <option value=\"Ireland\" />\n        <option value=\"Israel\" />\n        <option value=\"Italy\" />\n        <option value=\"Jamaica\" />\n        <option value=\"Japan\" />\n        <option value=\"Jordan\" />\n        <option value=\"Kazakhstan\" />\n        <option value=\"Kenya\" />\n        <option value=\"Kiribati\" />\n        <option value=\"Korea, Democratic People's Republic of\" />\n        <option value=\"Korea, Republic of\" />\n        <option value=\"Kuwait\" />\n        <option value=\"Kyrgyzstan\" />\n        <option value=\"Lao People's Democratic Republic\" />\n        <option value=\"Latvia\" />\n        <option value=\"Lebanon\" />\n        <option value=\"Lesotho\" />\n        <option value=\"Liberia\" />\n        <option value=\"Libyan Arab Jamahiriya\" />\n        <option value=\"Liechtenstein\" />\n        <option value=\"Lithuania\" />\n        <option value=\"Luxembourg\" />\n        <option value=\"Macao\" />\n        <option value=\"Macedonia, The Former Yugoslav Republic of\" />\n        <option value=\"Madagascar\" />\n        <option value=\"Malawi\" />\n        <option value=\"Malaysia\" />\n        <option value=\"Maldives\" />\n        <option value=\"Mali\" />\n        <option value=\"Malta\" />\n        <option value=\"Marshall Islands\" />\n        <option value=\"Martinique\" />\n        <option value=\"Mauritania\" />\n        <option value=\"Mauritius\" />\n        <option value=\"Mayotte\" />\n        <option value=\"Mexico\" />\n        <option value=\"Micronesia, Federated States of\" />\n        <option value=\"Moldova, Republic of\" />\n        <option value=\"Monaco\" />\n        <option value=\"Mongolia\" />\n        <option value=\"Montserrat\" />\n        <option value=\"Morocco\" />\n        <option value=\"Mozambique\" />\n        <option value=\"Myanmar\" />\n        <option value=\"Namibia\" />\n        <option value=\"Nauru\" />\n        <option value=\"Nepal\" />\n        <option value=\"Netherlands\" />\n        <option value=\"Netherlands Antilles\" />\n        <option value=\"New Caledonia\" />\n        <option value=\"New Zealand\" />\n        <option value=\"Nicaragua\" />\n        <option value=\"Niger\" />\n        <option value=\"Nigeria\" />\n        <option value=\"Niue\" />\n        <option value=\"Norfolk Island\" />\n        <option value=\"Northern Mariana Islands\" />\n        <option value=\"Norway\" />\n        <option value=\"Oman\" />\n        <option value=\"Pakistan\" />\n        <option value=\"Palau\" />\n        <option value=\"Palestinian Territory, Occupied\" />\n        <option value=\"Panama\" />\n        <option value=\"Papua New Guinea\" />\n        <option value=\"Paraguay\" />\n        <option value=\"Peru\" />\n        <option value=\"Philippines\" />\n        <option value=\"Pitcairn\" />\n        <option value=\"Poland\" />\n        <option value=\"Portugal\" />\n        <option value=\"Puerto Rico\" />\n        <option value=\"Qatar\" />\n        <option value=\"Reunion\" />\n        <option value=\"Romania\" />\n        <option value=\"Russian Federation\" />\n        <option value=\"Rwanda\" />\n        <option value=\"Saint Helena\" />\n        <option value=\"Saint Kitts and Nevis\" />\n        <option value=\"Saint Lucia\" />\n        <option value=\"Saint Pierre and Miquelon\" />\n        <option value=\"Saint Vincent and The Grenadines\" />\n        <option value=\"Samoa\" />\n        <option value=\"San Marino\" />\n        <option value=\"Sao Tome and Principe\" />\n        <option value=\"Saudi Arabia\" />\n        <option value=\"Senegal\" />\n        <option value=\"Serbia and Montenegro\" />\n        <option value=\"Seychelles\" />\n        <option value=\"Sierra Leone\" />\n        <option value=\"Singapore\" />\n        <option value=\"Slovakia\" />\n        <option value=\"Slovenia\" />\n        <option value=\"Solomon Islands\" />\n        <option value=\"Somalia\" />\n        <option value=\"South Africa\" />\n        <option value=\"South Georgia and The South Sandwich Islands\" />\n        <option value=\"Spain\" />\n        <option value=\"Sri Lanka\" />\n        <option value=\"Sudan\" />\n        <option value=\"Suriname\" />\n        <option value=\"Svalbard and Jan Mayen\" />\n        <option value=\"Swaziland\" />\n        <option value=\"Sweden\" />\n        <option value=\"Switzerland\" />\n        <option value=\"Syrian Arab Republic\" />\n        <option value=\"Taiwan, Province of China\" />\n        <option value=\"Tajikistan\" />\n        <option value=\"Tanzania, United Republic of\" />\n        <option value=\"Thailand\" />\n        <option value=\"Timor-leste\" />\n        <option value=\"Togo\" />\n        <option value=\"Tokelau\" />\n        <option value=\"Tonga\" />\n        <option value=\"Trinidad and Tobago\" />\n        <option value=\"Tunisia\" />\n        <option value=\"Turkey\" />\n        <option value=\"Turkmenistan\" />\n        <option value=\"Turks and Caicos Islands\" />\n        <option value=\"Tuvalu\" />\n        <option value=\"Uganda\" />\n        <option value=\"Ukraine\" />\n        <option value=\"United Arab Emirates\" />\n        <option value=\"United Kingdom\" />\n        <option value=\"United States\" />\n        <option value=\"United States Minor Outlying Islands\" />\n        <option value=\"Uruguay\" />\n        <option value=\"Uzbekistan\" />\n        <option value=\"Vanuatu\" />\n        <option value=\"Venezuela\" />\n        <option value=\"Viet Nam\" />\n        <option value=\"Virgin Islands, British\" />\n        <option value=\"Virgin Islands, U.S\" />\n        <option value=\"Wallis and Futuna\" />\n        <option value=\"Western Sahara\" />\n        <option value=\"Yemen\" />\n        <option value=\"Zambia\" />\n        <option value=\"Zimbabwe\" />\n    </datalist>\n                  \n\n\n  </div>\n  <div className=\"form-group\">\n    <label for=\"inputAddress2\">Address 2</label>\n    <input type=\"text\" className=\"form-control\" value={address} onChange={(e)=>setAdress(e.target.value)} id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\"/>\n  </div>\n  <div className=\"form-row\">\n    <div className=\"form-group col-md-12\">\n      <label for=\"inputCity\">Phone</label>\n      <input type=\"tel\" value={phone} onChange={(e)=>setPhone(e.target.value)} className=\"form-control\" placeholder=\"phone\" id=\"inputCity\"/>\n    </div>\n   \n   \n  </div>\n  {isShowButton && <button type=\"button\" onClick={()=>Save()} className=\"btn btn-info\">UPDATE DETAILS</button>}\n \n</form>\n    </>\n}\n\nexport default CreateAdmin;","/Users/tony/Documents/Projects/react/Writer/writer/src/idleTimeDetection.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/Home/home.js",["544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"import './style.css';\nconst Home =()=>{\n\n    \n\n   return <>\n           \n        <a href=\"#\" class=\"scrolltop\" id=\"scroll-top\">\n            <i class='bx bx-up-arrow-alt scrolltop__icon'></i>\n        </a>\n       \n\n        <header class=\"l-header\" id=\"header\">\n            <nav class=\"nav bd-container\">\n                <a href=\"#\" class=\"nav__logo\">PeakWriters</a>\n\n                <div class=\"nav__menu show-menu\" id=\"nav-menu\">\n                    <ul class=\"nav__list\">\n                        <li class=\"nav__item\"><a href=\"/#/\" class=\"nav__link active-link\">Home</a></li>\n                        <li class=\"nav__item\"><a href=\"/#/\" class=\"nav__link\">#</a></li>\n                        <li class=\"nav__item\"><a href=\"/#/Terms\" class=\"nav__link\">terms & conditions</a></li>\n                        <li class=\"nav__item\"><a href=\"#Login\" class=\"button nav__link\">Login</a></li>\n\n                        <li><i class='bx bx-toggle-left change-theme' id=\"theme-button\"></i></li>\n                    </ul>\n                </div>\n\n                <div class=\"nav__toggle\" id=\"nav-toggle\">\n                    <i class='bx bx-grid-alt'></i>\n                </div>\n            </nav>\n        </header>\n\n        <main class=\"l-main\">\n         \n\n\n            <section class=\"share section bd-container\" id=\"share\">\n                <div class=\"share__container bd-grid\">\n                    <div class=\"share__data\">\n                        <h2 class=\"section-title-center\">PeakWriters <br/> Abouts Us</h2>\n                        <p class=\"share__description\"><small>We believe ideas come from everyone, everywhere. At Kate Consultancy, everyone within our agency walls is a writer in their own right. And there are a few principles we believe—and we believe everyone should believe—about our writings. These truths drive us, motivate us, and ultimately help us redefine the power of words..</small></p>\n                        <a href=\"https://wa.me/254708405852\" target=\"_blank\" class=\"button\"> Contact (±254708405852)</a>\n                    </div>\n\n                    <div class=\"share__img\">\n                        <img src=\"https://media.istockphoto.com/photos/female-translator-working-on-a-document-picture-id1280363533?b=1&k=20&m=1280363533&s=170667a&w=0&h=W7CaYTeouaiCoACwrUhH8GmMErOZWNWYDxzoaB1WgTY=\" alt=\"\"/>\n                    </div>\n                </div>\n            </section>\n\n           \n            <section class=\"decoration section bd-container\" id=\"decoration\">\n                <h2 class=\"section-title\">Services <br/> @Writers</h2>\n                <div class=\"decoration__container bd-grid\">\n                    <div class=\"decoration__data\">\n                        <img src={require('./img/decoration1.png').default} alt=\"\" class=\"decoration__img\"/>\n                        <h3 class=\"decoration__title\">Writing</h3>\n                        <a href=\"#\" class=\"button button-link\"><small>\n                    \n                            Writing is our core business. We strive to get the best quality writers for you. Isn't is just better to leave it to Professionals?\n                            </small></a>\n                    </div>\n\n                    <div class=\"decoration__data\">\n                        <img src={require('./img/decoration2.png').default} alt=\"\" class=\"decoration__img\"/>\n                        <h3 class=\"decoration__title\">SUPPORT</h3>\n\n\n                    <a href=\"#\" class=\"button button-link\"><small>We provide support to both our writers and customers. Advice and feedback are critical in our system. Kindly support us as we support you.</small>\n    </a>\n                    </div>\n\n                    <div class=\"decoration__data\">\n                        <img src={require('./img/decoration3.png').default} alt=\"\" class=\"decoration__img\"/>\n                        <h3 class=\"decoration__title\">Passion</h3>\n                        <a href=\"#\" class=\"button button-link\"><small>\n                       \nWe love what we do and strive to provide the best quality material. You should also be passionate before joining.\n                            </small></a>\n                    </div>\n                </div>\n            </section>\n\n          \n\n          \n        </main>\n\n        \n        <footer class=\"footer section\">\n            <div class=\"footer__container bd-container bd-grid\">\n                <div class=\"footer__content\">\n                    <h3 class=\"footer__title\">\n                        <a href=\"#\" class=\"footer__logo\">PeakWriters</a>\n                    </h3>\n                    <p class=\"footer__description\"><small>We believe ideas come from everyone, everywhere. At Kate Consultancy, everyone within our agency walls is a writer in their own right. And there are a few principles we believe—and we believe everyone should believe—about our writings. These truths drive us, motivate us, and ultimately help us redefine the power of words.</small></p>\n                </div>\n\n                <div class=\"footer__content\">\n                    <h3 class=\"footer__title\">Our Services</h3>\n                    <small>\n                    <ul>\n                        <li><a href=\"#\" class=\"footer__link\">Writing And research work </a></li>\n                        <li><a href=\"#\" class=\"footer__link\">Coding/Programming </a></li>\n                        <li><a href=\"#\" class=\"footer__link\">Design </a></li>\n                        <li><a href=\"#\" class=\"footer__link\">Online classes </a></li>\n                        <li><a href=\"#\" class=\"footer__link\">Live tutoring </a></li>\n                       \n                    </ul>\n                    </small>\n                </div>\n\n                <div class=\"footer__content\">\n                    <h3 class=\"footer__title\">Our Company</h3>\n                    <ul>\n                        <li><a href=\"#\" class=\"footer__link\">PeakWriters</a></li>\n                       \n                    </ul>\n                </div>\n\n                <div class=\"footer__content\">\n                    <h3 class=\"footer__title\">Social</h3>\n                    <a href=\"#\" class=\"footer__social\"><i class='bx bxl-facebook-circle '></i></a>\n                    <a href=\"#\" class=\"footer__social\"><i class='bx bxl-twitter'></i></a>\n                    <a href=\"#\" class=\"footer__social\"><i class='bx bxl-instagram-alt'></i></a>\n                </div>\n            </div>\n\n            <p class=\"footer__copy\">&#169; 2021 PeakWriters. All right reserved</p>\n        </footer>\n    </>\n}\n\nexport default Home;","/Users/tony/Documents/Projects/react/Writer/writer/src/Freezer.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/Api/urls.js",[],"/Users/tony/Documents/Projects/react/Writer/writer/src/views/ChatBox/ChatBox.js",["560","561","562","563","564","565","566","567","568","569","570"],"//import { useState } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n//import ApiRequest from 'src/Api/Data/requestApi';\nimport './style.css';\nimport { animateScroll } from 'react-scroll';\nimport ApiRequest from 'src/Api/Requests/Apirequest';\nconst ROOT_CSS=({\n    height: 400,\n    \n  });\n\n\nconst ChatBox = ({open,SetOpen,socket,email,loged,taskid})=>{\n    \n    \n    const [messages,setMessages] = useState([]);\n    const [Loged,setLoged] = useState('');\n    const [receiver,setReceiver] = useState('');\n    const [message,setMessage] = useState('');\n    const [profile,setProfile] = useState('');\n    const [clientProfile,setClientProfile] = useState('');\n    const [senderUsername,setUsername] = useState('');\n    const [Taskid,setTaskId] = useState('');\n    const [writerUsername,setWriterName] =  useState('');\n    const messagesEndRef = useRef(null)\n    \n\n\n   const  scrollToBottom=() =>{\n       animateScroll.scrollToBottom({\n          containerId: \"MessageBox\"\n        });\n    \n    }\n\n    const loadChatClient =async  ()=>{\n        //alert(taskid)\n             //alert(Taskid)\n             var from = localStorage.getItem('mail');\n             \n             const result = await ApiRequest.loadChatUsers(from,email,taskid);\n\n             var data = result.data;\n\n           // console.log(data)\n             setProfile(data.receiver[0].writer_profile);\n            setClientProfile(data.sender[0].user_profile)\n             //writer_display_namewriter_profile\n             setWriterName(data.receiver[0].writer_display_name);\n             setUsername(data.receiver[0].writer_name)\n           \n             setMessages(data.messages);\n\n             \n\n    }\n\n   \n\n    useEffect(()=>{\n        if(open == true){\n            var from = localStorage.getItem('mail');\n            setLoged(from);\n            setReceiver(email);\n            setTaskId(taskid);\n            \n    \n            loadChatClient();\n\n            socket.on('message',(message)=>{\n                setMessages((messages)=>[...messages,message]);\n                setTimeout(() => {\n                  scrollToBottom();\n                }, 100);\n          });\n        }  \n        \n       \n        \n    },[])\n    \n\n\n    const sendMessage =()=>{\n      \n        if(message === ''){\n             setMessage('');\n            return;\n        }\n        var body ={\n            username:senderUsername,\n            Imageurl:profile,\n            message:message,\n            receiver_id:receiver,\n            sender_id:Loged,\n            task_id:taskid,\n        \n     }\n     //\n     socket.emit('sendMessage',{message:body,room:receiver}, () =>{\n    });\n\n     //socket.emit('sendMessage',{body,receiver});\n      setMessages([...messages,body])\n      setMessage('');\n      setTimeout(() => {\n        scrollToBottom();\n      }, 100);\n      \n\n    }\n   // alert(email)\n\n   return <>\n   \n    <div className=\"chat-popup\" style={{display:open?\"block\":\"none\",backgroundColor:\"brown\"}} id=\"myForm\">\n       \n        <div style={{marginBottom:\"5px\"}} className=\"container\">\n        <div class=\"avatar\">\n       \n            <img class=\"img-circle\" style={{width:\"40px\",height:\"40px\",borderRadius:\"20px\"}}  src={clientProfile} />\n           &nbsp; <span className=\"badge badge-warning\">{writerUsername}</span>\n            </div>\n    <button type=\"button\" style={{float:'right',color:\"blue\",\n                   border:\"1px solid green\",\n                   backgroundColor:\"whitesmoke\"\n\n          }} className=\"btn badge-warning fa fa-times\" onClick={()=>SetOpen()}></button>\n       </div>\n    <div style={{maxHeight:'500px',overflowY:'auto'}}  className=\"col-sm-12 col-sm-offset-4 frame\">\n    \n            <ul id=\"MessageBox\" ref={messagesEndRef} style={{maxHeight:'400px',overflowY:'auto'}}>\n           \n                 {\n\n                     messages.map((element)=>{\n                          \n                            if(element.sender_id === Loged){\n                                  return <li style={{width:\"100%\"}}>\n                                  <div class=\"msj-rta macro\">\n                                      <div class=\"text text-r\">\n                                          <p>\n                                         {element.message}\n                                          </p>\n                                          <p><small></small></p>\n                                      </div>\n                                  <div class=\"avatar\" style={{padding:\"0px 0px 0px 10px !important\",width:'40px'}}><img class=\"img-circle\" style={{width:'40px',height:'40px',borderRadius:'20px'}}  src={profile} /></div>                                \n                            </div>\n                            </li>  \n                            }\n                            if(element.receiver_id === receiver){\n                                 return  <li style={{width:\"100%\"}}>\n                                 <div class=\"msj macro\">\n                                 <div class=\"avatar\"><img class=\"img-circle\" style={{width:'40px',height:'40px',borderRadius:'20px'}}  src={clientProfile} /></div>\n                                     <div class=\"text text-l\">\n                                         <p>\n                                         {element.message}\n                                         </p>\n                                         <p><small></small></p>\n                                     </div>\n                                 </div>\n                             </li>\n                            }\n                            if(element.receiver_id === Loged){\n                                return  <li style={{width:\"100%\"}}>\n                                <div class=\"msj macro\">\n                                <div class=\"avatar\"><img class=\"img-circle\" style={{width:'40px',height:'40px',borderRadius:'20px'}}  src={clientProfile} /></div>\n                                    <div class=\"text text-l\">\n                                        <p>\n                                        {element.message}\n                                        </p>\n                                        <p><small></small></p>\n                                    </div>\n                                </div>\n                            </li>\n                           }\n                           if(element.sender_id === receiver){\n                            return <li style={{width:\"100%\"}}>\n                            <div class=\"msj-rta macro\">\n                                <div class=\"text text-r\">\n                                    <p>\n                                   {element.message}\n                                    </p>\n                                    <p><small></small></p>\n                                </div>\n                            <div class=\"avatar\" style={{padding:\"0px 0px 0px 10px !important\"}}><img class=\"img-circle\" style={{width:'40px',height:'40px',borderRadius:'20px'}}  src={profile} /></div>                                \n                      </div>\n                      </li>  \n                      }\n                    \n                     })\n\n\n                  \n                 }\n\n         \n\n\n                     \n            </ul>\n            \n            <div style={{marginBottom:\"5px\"}}>\n                <div className=\"msj-rta macro\">                        \n                    \n                        \n                        <textarea\n                        value={message}\n                        onKeyPress = {event => event.key === 'Enter' ? sendMessage() : null}\n                        onChange={(e)=>setMessage(e.target.value)} style={{width:\"100%\",outline:\"none\"}} className=\"mytext\" placeholder=\"Type a message\"/>\n                    \n\n                </div>\n                <div \n                   onClick={()=>sendMessage()}\n                style={{padding:\"10px\",backgroundColor:\"#cff\",\n                   borderRadius:\"10px\",\n                   marginLeft:\"1px\",\n                   cursor:\"pointer\"\n                 }}>\n                    <span className=\"fa fa-share\"></span>\n                </div>                \n            </div>\n            \n        </div>  \n       \n        \n        </div>\n    \n          </>\n}\n\nexport default ChatBox;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/supportCenter/support.js",["571"],"import { useEffect, useState } from \"react\";\nimport ApiRequest from \"src/Api/Requests/Apirequest\";\n\n\nimport ChatBox from \"../ChatBox/ChatBox\";\nimport TableCard from \"../table/TableCard\";\n\nconst Support = ({socket})=>{\n\n   const [open,setOpen]=useState(false);\n\n   const [TICKETS,setTickects] = useState([]);\n   const [email,setEmail] = useState('');\n  const [taskid,setTaskid] =useState('');\n\n    const getOpentickets = async ()=>{\n            try {\n              \n              const result = await ApiRequest.getOpenTickets();\n              console.log(result)\n              var organisedData =[];\n              result.data.forEach(element => {\n              var dat=  {\n\n                  \"#Id\":element.task_id,\n                   image:ProfileImage(element.user_profile),\n                  \n                   email:element.user_email,\n                   \n                   Odate:element.taskl_accepted_date,\n                   Action:Buttons(element.user_email,element.task_id)\n                }\n                organisedData.push(dat);\n              });\n\n              setTickects(organisedData);\n            } catch (error) {\n               console.log(error)\n            \n            }\n    }\n\n    useEffect(()=>{\n      getOpentickets();\n    },[]);\n\n    const Open=(mail,taskid)=>{\n      setTaskid(taskid);\n      setEmail(mail);\n      setOpen(!open);\n   }\n   const ProfileImage=image=>{\n    \n      return <img \n              style={{\n                width:\"30px\",\n                height:\"30px\",\n                borderRadius:'15px'\n                \n              }}\n          src={image} alt=\"profile\"/>\n    }\n   \n    const Buttons =(email,task_id)=>{\n      return <> \n           <button style={{color:\"blue\"}} onClick={()=>Open(email,task_id)}  className=\"fa fa-reply btn\"></button> \n         \n           \n       </>\n         }\n\n       \n   \n   const columns = [\n        {\n          dataField: \"#Id\",\n          text: \"TicketId(taskid)\",\n         \n        },\n        {\n          dataField: \"image\",\n          text: \"Profile\",\n        \n          sort: true\n        },\n       \n        {\n          dataField: \"email\",\n          text: \"email\",\n        \n        },\n       \n        {\n          \n            dataField: \"Odate\",\n            text: \"OpenDate\",\n          \n          \n        },\n        {\n            dataField: \"Action\",\n            text: \"Action\",\n         \n          }\n      ];\n    \n return <>  \n<div className=\"container card\">\n<TableCard products={TICKETS} columns={columns} title={\"SUPPORT TICKETS\"}/>\n</div>\n     \n{open && <ChatBox\n    open={open}\n    SetOpen={Open}\n    email={email}\n    socket={socket}\n    taskid={taskid}\n   />}\n   </>;\n}\n\nexport default Support;","/Users/tony/Documents/Projects/react/Writer/writer/src/Api/auth/UrlParams.js",["572","573","574","575"],"function UrlParams(param){\n    var query = window.location.href;\n    \n    var vars = query.split(\"&\");\n   \n    for (var i=0;i<vars.length;i++) {\n  \n      if(i ==0){\n         var first = vars[i].split(\"?\");\n         if(first[1] == undefined){ return false;}\n         \n          var pair = first[1].split(\"=\");\n        }else{\n         var pair= vars[i].split(\"=\");\n        }\n        \n    if(pair[0] == param){\n      \n  \n      return pair[1]\n    }\n     }\n  }\n\n  export {\n      UrlParams\n  }","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/Home/Terms.js",["576","577","578","579","580","581","582","583","584"],"const Terms = ()=>{\n    return <>\n             \n             <a href=\"#\" class=\"scrolltop\" id=\"scroll-top\">\n            <i class='bx bx-up-arrow-alt scrolltop__icon'></i>\n        </a>\n        \n\n        <header class=\"l-header\" id=\"header\">\n            <nav class=\"nav bd-container\">\n                <a href=\"#\" class=\"nav__logo\">PeakWriters</a>\n\n                <div class=\"nav__menu\" id=\"nav-menu\">\n                    <ul class=\"nav__list\">\n                        <li class=\"nav__item\"><a href=\"/#/\" class=\"nav__link active-link\">Home</a></li>\n                        <li class=\"nav__item\"><a href=\"/#/\" class=\"nav__link\">#</a></li>\n                        <li class=\"nav__item\"><a href=\"/#/Terms\" class=\"nav__link\">terms & conditions</a></li>\n                        <li class=\"nav__item\"><a href=\"#Login\" class=\"button nav__link\">Login</a></li>\n\n                        <li><i class='bx bx-toggle-left change-theme' id=\"theme-button\"></i></li>\n                    </ul>\n                </div>\n\n                <div class=\"nav__toggle\" id=\"nav-toggle\">\n                    <i class='bx bx-grid-alt'></i>\n                </div>\n            </nav>\n        </header>\n\n        <main class=\"l-main\">\n         \n\n\n            <section class=\"share section bd-container\" id=\"share\">\n                <div class=\"share__container bd-grid\">\n                    <div class=\"share__data\">\n                        <h2 class=\"section-title-center\">PeakWriters <br/> Abouts Us</h2>\n                        <p class=\"share__description\">We believe ideas come from everyone, everywhere. At Kate Consultancy, everyone within our agency walls is a writer in their own right. And there are a few principles we believe—and we believe everyone should believe—about our writings. These truths drive us, motivate us, and ultimately help us redefine the power of words..</p>\n                        <a href=\"https://wa.me/254708405852\" target=\"_blank\" class=\"button\"> Contact (±25407285589)</a>\n                    </div>\n\n                    <div class=\"share__img\">\n                        <img src=\"https://media.istockphoto.com/photos/female-translator-working-on-a-document-picture-id1280363533?b=1&k=20&m=1280363533&s=170667a&w=0&h=W7CaYTeouaiCoACwrUhH8GmMErOZWNWYDxzoaB1WgTY=\" alt=\"\"/>\n                    </div>\n                </div>\n            </section>\n\n\n\n\n            <section class=\"decoration section bd-container\" id=\"decoration\">\n\n            <div class=\"container w\">\n\t\t<div class=\"row\">\n\t\t\t<br/>\n<h2>Definitions</h2>\n<small>\n<ol>\n<li> \"Agreement\" means these Terms and Conditions.</li>\n<li>\"Company\" means the entity that owns the website and engages the Writer for rendition of services according to the defined terms and conditions laid out in this Agreement.</li>\n<li>\"Writer\" is the person who has agreed to render services to the Company on a freelance basis under the terms and conditions laid out in this Agreement.</li>\n<li> \"Order\" means an electronic request of a paid service from the Company for a particular Product.</li>\n<li>\"Product\" is a document in an electronic format that is the final result of processing the Order.</li>\n<li>\"Account\" means electronic record of all Orders processed by the Writer, communication, payments; and personal information about the Writer. </li>\n<li>\"Quality Assurance Department\" or \"QA Department\" signifies that part of the Company organizational structure that ensures delivery of quality Product to the Customer.</li>\n<li>\"Product Quality\" indicates compliance of the Product with all the quality standards of the Company as well as the requirements of the Customer relative to the Order.</li>\n<li>\"Plagiarism\" means to present as new and original a Product or any part thereof with respect to an Order which is found to have been derived from an existing source. This includes Products or any part thereof previously accomplished and submitted by the same Writer.</li>\n<li>\"Reassigned Order\" means an Order which being processed by a Writer is taken and assigned to another Writer for causes set forth in this Agreement.</li>\n<li>\"Termination of Account\" means discontinuation of services of the Writer and any further cooperation with the Company.</li>\n<li>\"Earnings\" are the amount of money that the Writer shall be entitled to for processing a Product.</li>\n<li>\"Due Balance\" is the accumulated amount of pending Earnings at a given time to be paid to the Writer for completed work.</li>\n<li>\"Payout Dates\" are dates when the Company processes the Earnings to the Writer. </li>\n<li>\"Reachable\" means that the Writer will be available for both the Company by phones (cellular) and Internet (Hangouts, Whatsapp, Emails) at any time while they are working on the Order. (The contact information the Writer has on the Account profile enables the Company to get in touch with the Writer in case there are any questions, clarification, or updates on the Order(s) the Writer is working on. </li>\n<li>\"Responsive\" means to provide the Company with the required or requested information while processing the Order. Writers must remain courteous and be professional in their communication with the Company. This entails prompt replies to messages received from the Company.</li>\n</ol>\n\n<h2>Intellectual Property Rights</h2>\n<ol>\n<li>Any developments and innovations conceived in connection to or arising out of the Products completed by the Writer during this engagement relative to the duties under this Agreement shall inure to the benefit of the Company and will be its exclusive property. The Writer hereby adheres to all the rights and serves for the interest of the Company in rendering services under this Agreement.</li>\n<li>Any developments and innovations conceived in connection to or arising out of the Products completed by the Writer prior to the term of this Agreement and utilized by the Writer in rendering duties to the Company are hereby licensed to the Company for use in its operations and for an infinite duration, as may be allowed by law. This license is non-exclusive, and may be assigned by the Company to whomsoever it chooses without the Writer's prior written approval.</li>\n<li>The Writer represents and warrants sole authorship and ownership of the Product to be delivered and assigned to the Company, together with the title to it; the Writer is the sole owner of all rights of any and all kinds whatever in and to the Product, throughout the world; there has been no publication without reservation of copyright within the Writer's knowledge or consent anywhere in the world; the Writer has the sole and exclusive right to dispose of each and every right granted; the Product nor any part of it can lawfully be transferred, conveyed, assigned or otherwise be disposed of; that Writer has in no way conveyed, granted, or hypothecated any rights of any kind or character in or to the Product, or any part of it, to any person, other than the Company, nor have the Writer granted any right, license, or privilege with respect to any of the rights granted to any person other than the Company; and the Writer has not done or caused or permitted to be done any act or thing by which any of the rights granted by this agreement have been in any way impaired.</li>\n<li>Writer shall not at any time execute any further agreement or agreements in conflict with this agreement, nor will Writer in any way attempt to encumber the rights granted by this agreement, nor will Writer do or cause or permit to be done any act or thing by which the rights granted to the Company may in any way be impaired.</li>\n<li>The Writer authorizes the Company to make application in its own name or its assignee as proprietor for copyright registration of the literary property in all countries throughout the world in which copyright has not been obtained. Any such copyrights shall be and remain exclusively in the name of the Company or its assignee and Writer agree to execute any and all documents or instruments in any country in which the same may be necessary to obtain copyright registration.</li>\n<li>The Writer covenants to indemnify the Company against any claim, demand, or recovery finally sustained in any suit that may be brought against the Company in any manner connected with the Product by reason of the following: (1) any violation or infringement of any proprietary right or copyright, (2) any libelous or unlawful matter contained in the Product which is the subject matter of this agreement, (3) Writer's breach of any term, covenant, representation, or warranty of this agreement, or (4) any matter whatever that might prejudice the securing to Company or its assigns of the full benefit of the rights granted in this agreement.</li>\n<li>The Writer shall promptly and diligently defend any claim, demand, or action that may be made or brought against the Company or its assignee, which claim, demand, or action is based on assertions or allegations of infringement or violation of copyright, libel, or unlawful matter in the Product. If Writer fails to discharge this obligation, the Company is granted the right to make any defense necessary, and the costs and attorney fees, together with the amount of any judgment or other recovery for which the Company is liable, shall be charged to and paid by the Writer.</li>\n</ol>\n\n\n<h2>Termination of the Account</h2>\n<ol>\n<li>This Agreement may be terminated in one of the following ways:\n<ul><li>Resignation</li>\n<li>Termination</li></ul>\n</li>\n<li><strong>Resignation.</strong>&nbsp;The Writer may terminate the Agreement by sending a resignation email to the Company one week in advance. Termination of the Agreement will be granted by the Company if all the due Orders under Writer's Account are completed. Only after complying with this written notice and completion of any additional Orders can the Writer maintain a positive history and may be eligible for future engagements with the Company. All Earnings are processed according to the applicable payment terms and conditions. Access to the Account is closed immediately.</li>\n<li><strong>Termination.</strong>&nbsp;The following instances are causes for the Termination of the Account:\n<ul>\n<li><strong>Plagiarism.</strong>&nbsp;Any instance that is classified as&nbsp;\"Plagiarism\"&nbsp;may lead to the termination of the Writer's Account with the Company. The Account undergoes thorough quality check by the Quality Assurance Department. The Writer is reimbursed only for quality orders on the Payout Date on the last payment date scheduled upon the last order successfully completed. Access to Account is closed immediately after the last payment is processed. Reactivation request is not considered by the Quality Assurance Department.</li>\n<li><strong>Quality.</strong>&nbsp;Any instance or multiple cases of Low Quality (Requirements full/partial mismatch) may lead to termination of the Writer's Account with the Company. The Writer is reimbursed only for quality orders on the last payment date scheduled upon the last order successfully completed. Access to Account is closed immediately after the last payment is processed. Reactivation request may be considered by the Quality Assurance Department if reasonable explanation is provided or guarantee of noticeable improvement is substantially established.</li>\n<li><strong>Disappeared.</strong>&nbsp;Single instance of Neglect (Disappearance from the project) may lead to termination of the Writer's Account with the Company. The Writer is reimbursed only for quality orders on the last payment date scheduled upon the last order successfully completed. Access to the Account is closed immediately after the termination date. Reactivation request is not considered.</li>\n<li><strong>Often Late.</strong>&nbsp;Deliberate instant or multiple cases of Neglect (Project uploaded after indicated deadline, Close to deadline reassign request, Failure to complete Multiple choice (time framed) orders, Product/Product revision deadline violation, Violation of \"Report on progress\" requirement) may lead to termination of the Writer's Account with the Company. The Writer is reimbursed only for quality orders on the last payment date scheduled upon the last order successfully completed. Access to the Account is closed immediately after the termination date. Reactivation request is not considered.</li>\n<li><strong>Mandatory termination due to violations of the Agreement.</strong>&nbsp;If at any time the Writer is found to have committed any violation, failure or refusal to fully comply with the written terms and conditions of this Agreement or any reasonable directive or is guilty of serious misconduct in connection with performance of the obligations set forth herein, the Company reserves the right to terminate the Account at any time without prior written notice to the Writer and without being liable for any or all kinds of damages in favor of the Writer. In cases of serious violation or serious misconduct, the Due Balance will not be processed and shall be forfeited.</li>\n</ul>\n</li>\n</ol>\n\n<h2>Product and Service Requirements</h2>\n<ol>\n<li>Requirements: The Product should adhere to quality writing standards that include but are not limited to the following:\n<ul>\n<li>Layout and organization (referencing style, standard formatting, word limit).</li>\n<li>Grammatical resource (accurate use of grammatical rules, spelling, punctuation, sentence structure).</li>\n<li>Lexical resource (word choice, tautology, effective arrangement of words, language flow).</li>\n<li>Diction management (order specifics (tables, graphs, charts etc.), logical arrangement, presentation of own views and ideas, relevance of utterances, redundancy, linking ability).</li>\n<li>0% Plagiarism. It is strictly forbidden to use the Writer's previously completed papers or run the papers through any plagiarism check software. It is also prohibited to use such sources as TermPapers.com, SparkNotes, and Wikipedia etc. All references should be taken from reliable sources.</li>\n</ul>\n</li>\n<li>The Product should be written and delivered according to requirements of the Customer that include but are not limited to the following:\n<ul>\n<li>Topic and Order description, additional files, paper type, number of pages, referencing style, number of sources, academic level.</li>\n<li>Additional requirements through messages/revision instructions/emails.</li>\n<li>Deadline.</li>\n</ul>\n</li>\n\n<li>Compliance with requirements of the Company that include but are not limited to the following:\n<ul>\n<li>On-time submission of current Orders.</li>\n<li>Timely response to all messages and emails, availability for communication over the phone. Writers should be Reachable and Responsive as contemplated under this Agreement.</li>\n<li>Writers who are preparing Orders in their ongoing sections are required to log in to the System every 24 hours to inform the Company about the status of the Order to assure that the Product will be submitted on time. If an Order is not submitted by the deadline, Company may contact the Writer at any given time to check the progress of the Product. It is crucial to submit all Products by the deadline. Company reserves the right to contact the Writer in urgent cases even after business hours, as the case may be.</li>\n<li>If the Writer takes a Reassigned Order that requires revision only, the Writer becomes fully responsible for the completion of the Order. Thus, the Writer must perform further revisions per Customer's request, if revision instructions do not substantially vary from the original ones.</li>\n</ul>\n</li>\n<li>Breach of&nbsp;Product and Service Requirements&nbsp;and any or all its subsections may lead to penalties, fines and/or termination of the Account. In addition to the sanction, the Writer might not be reimbursed for the particular Order. The Writer recognizes the right of the Company to determine and impose the appropriate sanctions depending on the circumstances on each particular case. The following chart contains descriptions of Company violations and fine amounts.\n\n\n\n<h3>Fine Policy</h3>\n<table class=\"table table-striped\">\n  <thead>\n  <tr><td>Fine Type</td>\n\t<td>Description</td>\n\t<td>Order status</td>\n\t<td>Value (% from Order total)</td>\n\t<td>Order compensation</td></tr>\n  </thead>\n  <tbody>\n    <tr><td><strong>Neglect</strong></td>\n\t<td>Product uploaded after indicated deadline</td>\n\t<td>Cancelled</td>\n\t<td>100%</td>\n\t<td>No</td>\n    </tr>\n    <tr><td></td>\n\t<td>Disappearance from the project</td>\n\t<td>Cancelled</td>\n\t<td>100%</td>\n\t<td>No</td>\n    </tr>\n    <tr><td></td>\n\t<td>Close to deadline reassign request</td>\n\t<td>Cancelled</td>\n\t<td>50%</td>\n\t<td>No</td>\n    </tr>\n    <tr><td></td>\n\t<td>Failure to complete mutliple choice (time framed)</td>\n\t<td>Cancelled</td>\n\t<td>100%</td>\n\t<td>No</td>\n    </tr>\n\n    <tr><td><strong>Low Quality</strong></td>\n\t<td>Requirements full mismatch Low quality product</td>\n\t<td>Completed</td>\n\t<td>100%</td>\n\t<td>No</td>\n    </tr>\n    <tr><td></td>\n\t<td>Requirements partial mismatch</td>\n\t<td>Completed</td>\n\t<td>40%</td>\n\t<td>Yes</td>\n    </tr>\n    <tr><td></td>\n\t<td>Proofread. Minor Errors detected.</td>\n\t<td>Completed</td>\n\t<td>5%</td>\n\t<td>Yes</td>\n    </tr>\n    <tr><td></td>\n\t<td>Proofread. Major Errors detected.</td>\n\t<td>Completed</td>\n\t<td>10%</td>\n\t<td>Yes</td>\n    </tr>\n\n    <tr><td></td>\n\t<td>Proofread. Substandard Quality\n\t\t<ol>\n\t\t\t<li>the order was returned to the Writer by the Quality Assurance Dept for further revision</li>\n\t\t\t<li>the order has been assessed as \"low quality product\" by the Quality Assurance Department</li>\n\t\t</ol>\n\t</td>\n\t<td>Completed</td>\n\t<td><ol><li>15%</li><li>40%</li></ol></td>\n\t<td>Yes</td>\n    </tr>\n\n    <tr><td><strong>Plagiarism</strong></td>\n\t<td>Plagiarism detected. Paper cannot be used.</td>\n\t<td>Cancelled</td>\n\t<td>110%</td>\n\t<td>No</td>\n    </tr>\n    <tr><td></td>\n\t<td>Plagiarism detected. Paper is partially usable</td>\n\t<td>Completed</td>\n\t<td>30%</td>\n\t<td>Yes</td>\n    </tr>\n\n    <tr><td><strong>Late order submission</strong></td>\n\t<td>Product deadline violation</td>\n\t<td>Completed</td>\n\t<td>10%</td>\n\t<td>Yes</td>\n    </tr>\n    <tr><td></td>\n\t<td>Product revision deadline violation.</td>\n\t<td>Completed</td>\n\t<td>10%</td>\n\t<td>Yes</td>\n    </tr>\n\n    <tr><td><strong>other</strong></td>\n\t<td>Violation of \"Report on progress\" requirement***</td>\n\t<td>Preparing/Completed</td>\n\t<td>from 10% and up</td>\n\t<td>Yes</td>\n    </tr>\n    <tr><td></td>\n\t<td>Deadline recalculation. The order was partially refunded due to deadline extension request\n\t</td>\n\t<td>Completed</td>\n\t<td>from 10% and up</td>\n\t<td>Yes</td>\n    </tr>\n    <tr><td></td>\n\t<td>Abuse of communication tools. Multiple duplicate requests, follow ups through various communication tools without sound ground\n</td>\n\t<td>Completed</td>\n\t<td>from 10% and up</td>\n\t<td>Yes</td>\n    </tr>\n\n  </tbody>\n</table>\n\n** The paper is considered to be partially usable when 15% - 40% of plagiarism is detected and the Customer agreed to accept the Product on condition of partial refund.\n\n</li>\n<li><strong>Dispute.</strong>&nbsp;The Writer has a right to dispute any sanction incurred. All fine disputes should be submitted within five (5) days prior to the scheduled Payout Dates. The Writer should state the reasons for reconsideration of the dispute through an email to the Company. The investigation conducted by Company usually takes up to three (3) business days from the time the dispute was submitted. Writer shall abide by the decision of the Company, which decision shall be considered final.</li>\n</ol>\n\n<h2>Payment terms and conditions</h2>\n<ol>\n<li>Payment basis\n<ol>\n<li> The Writer is entitled to the Earnings for each completed Order that is in conformity with Product and Service Requirements of this Agreement. The Earnings for any particular order depend on the Product complexity and the urgency.</li>\n<li> The Company has a monthly payout system for all orders that have matured. Orders take 2 weeks to mature. Orders done between 16th of one month to 15th of the following month will be paid at the end of the following month. For example; orders done between 16th Jan and 15th Feb are paid at end of Feb. Those done between 16th Feb and 15th March are paid at end of March, and so on and so forth.  </li>\n<li> All payments will be paid by latest 5th of the next month when they are due as the Company may at times experience sudden/unexpected circumstances/technical difficulties. Writers will be duly informed in case of such. </li>\n</ol>\n</li>\n\n<li>Advance Payment<br/>\nEvery writer is entitled to advance payment once every month. The advance payment cannot be more than half what the writer is due at the end of the month. For instance; if at the time of the advance request the earnings of the writer is 10,000 he will be entitled to an advance payment not exceeding 5000. The advance request must be made through an email to the Company and will be processed as soon as possible.</li>\n<li>Payment Processing\n<ol>\n<li> Writers are responsible for submitting valid Payment Details. </li>\n<li> Upon completion of the order, the system automatically calculates your payment for the paper as the total price for the order minus fines or plus bonuses, if any.&nbsp;</li>\n<li> You can check your earnings at Invoices.</li>\n<li> Exceptional work will be rewarded from time to time through our bonus system.</li>\n\n</ol>\n\t\t</li></ol>\n        </small>\n        </div>\n\t\t<br/>\n\t\t<br/>\n\t</div>\n\n\n</section>\n\n\n\n\n   \n            </main>\n\n        \n<footer class=\"footer section\">\n    <div class=\"footer__container bd-container bd-grid\">\n        <div class=\"footer__content\">\n            <h3 class=\"footer__title\">\n                <a href=\"#\" class=\"footer__logo\">PeakWriters</a>\n            </h3>\n            <p class=\"footer__description\"><small>We believe ideas come from everyone, everywhere. At Kate Consultancy, everyone within our agency walls is a writer in their own right. And there are a few principles we believe—and we believe everyone should believe—about our writings. These truths drive us, motivate us, and ultimately help us redefine the power of words.</small></p>\n        </div>\n\n        <div class=\"footer__content\">\n            <h3 class=\"footer__title\">Our Services</h3>\n            <ul>\n                <li><a href=\"#\" class=\"footer__link\">WRITING</a></li>\n             \n            </ul>\n        </div>\n\n        <div class=\"footer__content\">\n            <h3 class=\"footer__title\">Our Company</h3>\n            <ul>\n                <li><a href=\"#\" class=\"footer__link\">PeakWriters</a></li>\n               \n            </ul>\n        </div>\n\n        <div class=\"footer__content\">\n            <h3 class=\"footer__title\">Social</h3>\n            <a href=\"#\" class=\"footer__social\"><i class='bx bxl-facebook-circle '></i></a>\n            <a href=\"#\" class=\"footer__social\"><i class='bx bxl-twitter'></i></a>\n            <a href=\"#\" class=\"footer__social\"><i class='bx bxl-instagram-alt'></i></a>\n        </div>\n    </div>\n\n    <p class=\"footer__copy\">&#169; 2021 PeakWriters. All right reserved</p>\n</footer>\n    </>\n}\n\nexport default Terms;","/Users/tony/Documents/Projects/react/Writer/writer/src/views/pages/activate/ConfirmPayment.js",["585","586","587"],"import '../login/login.css';\nimport swal from \"sweetalert\";\nimport Loader from 'react-loader-spinner';\nimport ApiRequest from 'src/Api/Requests/Apirequest';\nimport { useEffect, useState } from 'react';\nimport { UrlParams } from 'src/Api/auth/UrlParams';\n\nconst ConfirmPayment = ()=>{\n    const [Key,setKey] = useState('');\n   \n    const [save,SetSave] = useState(false);\n\n    const sendConfirmationRequest = async(key)=>{\n       // Payment confirmed     \n       const result = await ApiRequest.sendPaymentConfirmation(key);\n       \n       if(result.data === \"Payment confirmed \"){\n           swal('success','payment confirmed','success');\n           setTimeout(()=>{\n            window.location.href=\"/#/\";\n       },2000) \n       } else{\n           swal('error',result.data,'error');\n           setTimeout(()=>{\n            window.location.href=\"/#/\";\n       },2000) \n       }\n\n\n\n    }\n\n    useEffect(()=>{\n        const key = UrlParams('Key');\n        setTimeout(() => {\n               if(key == false){\n                  swal('error','process failed','error');\n                  setTimeout(()=>{\n                       window.location.href=\"/#/\";\n                  },1000) \n               }else{\n                   //setKey(key);\n                   setTimeout(()=>{\n                    sendConfirmationRequest(key);\n               },1000) \n                   \n               }\n        }, 2000);\n        SetSave(true);\n    },[])\n    return <>\n       { save && <div className=\"spinner\">\n    \n  \n    <Loader\n  type=\"Circles\"\n  color=\"#00BFFF\"\n  height={100}\n  width={100}\n  //3 secs\n  />\n  </div>\n}\n    </>\n}\n\nexport default ConfirmPayment;",{"ruleId":"588","severity":1,"message":"589","line":80,"column":16,"nodeType":"590","messageId":"591","endLine":80,"endColumn":18},{"ruleId":"588","severity":1,"message":"589","line":82,"column":23,"nodeType":"590","messageId":"591","endLine":82,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":84,"column":25,"nodeType":"590","messageId":"591","endLine":84,"endColumn":27},{"ruleId":"592","severity":1,"message":"593","line":25,"column":12,"nodeType":"594","messageId":"595","endLine":25,"endColumn":15},{"ruleId":"592","severity":1,"message":"596","line":26,"column":12,"nodeType":"594","messageId":"595","endLine":26,"endColumn":15},{"ruleId":"592","severity":1,"message":"597","line":27,"column":12,"nodeType":"594","messageId":"595","endLine":27,"endColumn":16},{"ruleId":"588","severity":1,"message":"589","line":47,"column":17,"nodeType":"590","messageId":"591","endLine":47,"endColumn":19},{"ruleId":"598","severity":1,"message":"599","line":32,"column":150,"nodeType":"600","messageId":"601","endLine":32,"endColumn":165},{"ruleId":"602","severity":1,"message":"603","line":13,"column":9,"nodeType":"604","endLine":13,"endColumn":63},{"ruleId":"592","severity":1,"message":"605","line":11,"column":10,"nodeType":"594","messageId":"595","endLine":11,"endColumn":24},{"ruleId":"588","severity":1,"message":"606","line":30,"column":24,"nodeType":"590","messageId":"591","endLine":30,"endColumn":26},{"ruleId":"607","severity":1,"message":"608","line":60,"column":6,"nodeType":"609","endLine":60,"endColumn":8,"suggestions":"610"},{"ruleId":"607","severity":1,"message":"608","line":65,"column":6,"nodeType":"609","endLine":65,"endColumn":8,"suggestions":"611"},{"ruleId":"588","severity":1,"message":"589","line":80,"column":18,"nodeType":"590","messageId":"591","endLine":80,"endColumn":20},{"ruleId":"592","severity":1,"message":"612","line":27,"column":10,"nodeType":"594","messageId":"595","endLine":27,"endColumn":15},{"ruleId":"607","severity":1,"message":"613","line":56,"column":5,"nodeType":"609","endLine":56,"endColumn":15,"suggestions":"614"},{"ruleId":"615","replacedBy":"616"},{"ruleId":"617","replacedBy":"618"},{"ruleId":"592","severity":1,"message":"619","line":4,"column":8,"nodeType":"594","messageId":"595","endLine":4,"endColumn":15},{"ruleId":"592","severity":1,"message":"620","line":36,"column":9,"nodeType":"594","messageId":"595","endLine":36,"endColumn":29},{"ruleId":"592","severity":1,"message":"621","line":10,"column":3,"nodeType":"594","messageId":"595","endLine":10,"endColumn":8},{"ruleId":"592","severity":1,"message":"622","line":19,"column":10,"nodeType":"594","messageId":"595","endLine":19,"endColumn":19},{"ruleId":"592","severity":1,"message":"623","line":19,"column":21,"nodeType":"594","messageId":"595","endLine":19,"endColumn":33},{"ruleId":"592","severity":1,"message":"624","line":27,"column":9,"nodeType":"594","messageId":"595","endLine":27,"endColumn":20},{"ruleId":"592","severity":1,"message":"625","line":45,"column":9,"nodeType":"594","messageId":"595","endLine":45,"endColumn":19},{"ruleId":"592","severity":1,"message":"626","line":9,"column":8,"nodeType":"594","messageId":"595","endLine":9,"endColumn":23},{"ruleId":"592","severity":1,"message":"627","line":4,"column":5,"nodeType":"594","messageId":"595","endLine":4,"endColumn":9},{"ruleId":"592","severity":1,"message":"628","line":2,"column":5,"nodeType":"594","messageId":"595","endLine":2,"endColumn":11},{"ruleId":"592","severity":1,"message":"627","line":8,"column":5,"nodeType":"594","messageId":"595","endLine":8,"endColumn":9},{"ruleId":"592","severity":1,"message":"629","line":11,"column":5,"nodeType":"594","messageId":"595","endLine":11,"endColumn":12},{"ruleId":"588","severity":1,"message":"589","line":33,"column":33,"nodeType":"590","messageId":"591","endLine":33,"endColumn":35},{"ruleId":"615","replacedBy":"630"},{"ruleId":"617","replacedBy":"631"},{"ruleId":"607","severity":1,"message":"632","line":42,"column":3,"nodeType":"609","endLine":42,"endColumn":5,"suggestions":"633"},{"ruleId":"634","severity":1,"message":"635","line":259,"column":9,"nodeType":"636","messageId":"591","endLine":259,"endColumn":15},{"ruleId":"607","severity":1,"message":"637","line":53,"column":7,"nodeType":"609","endLine":53,"endColumn":9,"suggestions":"638"},{"ruleId":"607","severity":1,"message":"639","line":44,"column":7,"nodeType":"609","endLine":44,"endColumn":9,"suggestions":"640"},{"ruleId":"607","severity":1,"message":"641","line":52,"column":7,"nodeType":"609","endLine":52,"endColumn":9,"suggestions":"642"},{"ruleId":"607","severity":1,"message":"643","line":43,"column":7,"nodeType":"609","endLine":43,"endColumn":9,"suggestions":"644"},{"ruleId":"592","severity":1,"message":"645","line":104,"column":12,"nodeType":"594","messageId":"595","endLine":104,"endColumn":16},{"ruleId":"607","severity":1,"message":"646","line":54,"column":3,"nodeType":"609","endLine":54,"endColumn":5,"suggestions":"647"},{"ruleId":"592","severity":1,"message":"648","line":16,"column":12,"nodeType":"594","messageId":"595","endLine":16,"endColumn":17},{"ruleId":"592","severity":1,"message":"649","line":21,"column":12,"nodeType":"594","messageId":"595","endLine":21,"endColumn":24},{"ruleId":"592","severity":1,"message":"650","line":21,"column":25,"nodeType":"594","messageId":"595","endLine":21,"endColumn":38},{"ruleId":"607","severity":1,"message":"651","line":63,"column":7,"nodeType":"609","endLine":63,"endColumn":9,"suggestions":"652"},{"ruleId":"588","severity":1,"message":"589","line":78,"column":21,"nodeType":"590","messageId":"591","endLine":78,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":104,"column":24,"nodeType":"590","messageId":"591","endLine":104,"endColumn":26},{"ruleId":"607","severity":1,"message":"653","line":66,"column":9,"nodeType":"609","endLine":66,"endColumn":11,"suggestions":"654"},{"ruleId":"607","severity":1,"message":"655","line":143,"column":6,"nodeType":"609","endLine":143,"endColumn":8,"suggestions":"656"},{"ruleId":"592","severity":1,"message":"645","line":174,"column":12,"nodeType":"594","messageId":"595","endLine":174,"endColumn":16},{"ruleId":"634","severity":1,"message":"635","line":198,"column":8,"nodeType":"636","messageId":"591","endLine":198,"endColumn":14},{"ruleId":"592","severity":1,"message":"657","line":6,"column":8,"nodeType":"594","messageId":"595","endLine":6,"endColumn":17},{"ruleId":"588","severity":1,"message":"589","line":68,"column":15,"nodeType":"590","messageId":"591","endLine":68,"endColumn":17},{"ruleId":"607","severity":1,"message":"658","line":90,"column":3,"nodeType":"609","endLine":90,"endColumn":5,"suggestions":"659"},{"ruleId":"602","severity":1,"message":"660","line":66,"column":21,"nodeType":"604","endLine":66,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":69,"column":21,"nodeType":"604","endLine":69,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":72,"column":21,"nodeType":"604","endLine":72,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":75,"column":21,"nodeType":"604","endLine":75,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":78,"column":21,"nodeType":"604","endLine":78,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":86,"column":21,"nodeType":"604","endLine":86,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":63,"column":21,"nodeType":"604","endLine":63,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":66,"column":21,"nodeType":"604","endLine":66,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":69,"column":21,"nodeType":"604","endLine":69,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":72,"column":21,"nodeType":"604","endLine":72,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":75,"column":21,"nodeType":"604","endLine":75,"endColumn":46},{"ruleId":"602","severity":1,"message":"660","line":83,"column":21,"nodeType":"604","endLine":83,"endColumn":46},{"ruleId":"592","severity":1,"message":"650","line":13,"column":23,"nodeType":"594","messageId":"595","endLine":13,"endColumn":36},{"ruleId":"592","severity":1,"message":"661","line":21,"column":10,"nodeType":"594","messageId":"595","endLine":21,"endColumn":18},{"ruleId":"592","severity":1,"message":"662","line":21,"column":19,"nodeType":"594","messageId":"595","endLine":21,"endColumn":30},{"ruleId":"592","severity":1,"message":"663","line":23,"column":10,"nodeType":"594","messageId":"595","endLine":23,"endColumn":16},{"ruleId":"592","severity":1,"message":"664","line":23,"column":17,"nodeType":"594","messageId":"595","endLine":23,"endColumn":26},{"ruleId":"592","severity":1,"message":"648","line":24,"column":10,"nodeType":"594","messageId":"595","endLine":24,"endColumn":15},{"ruleId":"588","severity":1,"message":"589","line":8,"column":24,"nodeType":"590","messageId":"591","endLine":8,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":40,"column":24,"nodeType":"590","messageId":"591","endLine":40,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":109,"column":68,"nodeType":"590","messageId":"591","endLine":109,"endColumn":70},{"ruleId":"592","severity":1,"message":"665","line":5,"column":10,"nodeType":"594","messageId":"595","endLine":5,"endColumn":19},{"ruleId":"592","severity":1,"message":"666","line":8,"column":12,"nodeType":"594","messageId":"595","endLine":8,"endColumn":15},{"ruleId":"588","severity":1,"message":"589","line":66,"column":11,"nodeType":"590","messageId":"591","endLine":66,"endColumn":13},{"ruleId":"607","severity":1,"message":"667","line":77,"column":3,"nodeType":"609","endLine":77,"endColumn":5,"suggestions":"668"},{"ruleId":"588","severity":1,"message":"589","line":20,"column":17,"nodeType":"590","messageId":"591","endLine":20,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":28,"column":67,"nodeType":"590","messageId":"591","endLine":28,"endColumn":69},{"ruleId":"592","severity":1,"message":"669","line":71,"column":11,"nodeType":"594","messageId":"595","endLine":71,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":78,"column":21,"nodeType":"590","messageId":"591","endLine":78,"endColumn":23},{"ruleId":"592","severity":1,"message":"670","line":1,"column":8,"nodeType":"594","messageId":"595","endLine":1,"endColumn":15},{"ruleId":"588","severity":1,"message":"589","line":24,"column":28,"nodeType":"590","messageId":"591","endLine":24,"endColumn":30},{"ruleId":"588","severity":1,"message":"589","line":27,"column":25,"nodeType":"590","messageId":"591","endLine":27,"endColumn":27},{"ruleId":"588","severity":1,"message":"589","line":47,"column":24,"nodeType":"590","messageId":"591","endLine":47,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":50,"column":21,"nodeType":"590","messageId":"591","endLine":50,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":71,"column":22,"nodeType":"590","messageId":"591","endLine":71,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":74,"column":19,"nodeType":"590","messageId":"591","endLine":74,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":98,"column":22,"nodeType":"590","messageId":"591","endLine":98,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":101,"column":19,"nodeType":"590","messageId":"591","endLine":101,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":125,"column":22,"nodeType":"590","messageId":"591","endLine":125,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":128,"column":19,"nodeType":"590","messageId":"591","endLine":128,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":149,"column":24,"nodeType":"590","messageId":"591","endLine":149,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":152,"column":21,"nodeType":"590","messageId":"591","endLine":152,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":171,"column":24,"nodeType":"590","messageId":"591","endLine":171,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":174,"column":21,"nodeType":"590","messageId":"591","endLine":174,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":193,"column":24,"nodeType":"590","messageId":"591","endLine":193,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":196,"column":21,"nodeType":"590","messageId":"591","endLine":196,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":240,"column":30,"nodeType":"590","messageId":"591","endLine":240,"endColumn":32},{"ruleId":"588","severity":1,"message":"589","line":244,"column":27,"nodeType":"590","messageId":"591","endLine":244,"endColumn":29},{"ruleId":"588","severity":1,"message":"589","line":324,"column":30,"nodeType":"590","messageId":"591","endLine":324,"endColumn":32},{"ruleId":"588","severity":1,"message":"589","line":328,"column":27,"nodeType":"590","messageId":"591","endLine":328,"endColumn":29},{"ruleId":"588","severity":1,"message":"589","line":357,"column":24,"nodeType":"590","messageId":"591","endLine":357,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":360,"column":21,"nodeType":"590","messageId":"591","endLine":360,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":378,"column":24,"nodeType":"590","messageId":"591","endLine":378,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":381,"column":21,"nodeType":"590","messageId":"591","endLine":381,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":400,"column":24,"nodeType":"590","messageId":"591","endLine":400,"endColumn":26},{"ruleId":"588","severity":1,"message":"589","line":403,"column":21,"nodeType":"590","messageId":"591","endLine":403,"endColumn":23},{"ruleId":"588","severity":1,"message":"589","line":423,"column":20,"nodeType":"590","messageId":"591","endLine":423,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":426,"column":17,"nodeType":"590","messageId":"591","endLine":426,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":444,"column":22,"nodeType":"590","messageId":"591","endLine":444,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":447,"column":19,"nodeType":"590","messageId":"591","endLine":447,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":467,"column":22,"nodeType":"590","messageId":"591","endLine":467,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":470,"column":19,"nodeType":"590","messageId":"591","endLine":470,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":489,"column":22,"nodeType":"590","messageId":"591","endLine":489,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":492,"column":19,"nodeType":"590","messageId":"591","endLine":492,"endColumn":21},{"ruleId":"588","severity":1,"message":"589","line":538,"column":26,"nodeType":"590","messageId":"591","endLine":538,"endColumn":28},{"ruleId":"588","severity":1,"message":"589","line":542,"column":23,"nodeType":"590","messageId":"591","endLine":542,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":567,"column":20,"nodeType":"590","messageId":"591","endLine":567,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":570,"column":17,"nodeType":"590","messageId":"591","endLine":570,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":592,"column":20,"nodeType":"590","messageId":"591","endLine":592,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":595,"column":17,"nodeType":"590","messageId":"591","endLine":595,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":617,"column":20,"nodeType":"590","messageId":"591","endLine":617,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":620,"column":17,"nodeType":"590","messageId":"591","endLine":620,"endColumn":19},{"ruleId":"588","severity":1,"message":"589","line":641,"column":22,"nodeType":"590","messageId":"591","endLine":641,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":643,"column":16,"nodeType":"590","messageId":"591","endLine":643,"endColumn":18},{"ruleId":"671","severity":1,"message":"672","line":654,"column":6,"nodeType":"673","messageId":"674","endLine":654,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":663,"column":22,"nodeType":"590","messageId":"591","endLine":663,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":665,"column":16,"nodeType":"590","messageId":"591","endLine":665,"endColumn":18},{"ruleId":"588","severity":1,"message":"589","line":685,"column":22,"nodeType":"590","messageId":"591","endLine":685,"endColumn":24},{"ruleId":"588","severity":1,"message":"589","line":687,"column":16,"nodeType":"590","messageId":"591","endLine":687,"endColumn":18},{"ruleId":"671","severity":1,"message":"672","line":698,"column":6,"nodeType":"673","messageId":"674","endLine":698,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":708,"column":23,"nodeType":"590","messageId":"591","endLine":708,"endColumn":25},{"ruleId":"588","severity":1,"message":"589","line":710,"column":17,"nodeType":"590","messageId":"591","endLine":710,"endColumn":19},{"ruleId":"592","severity":1,"message":"675","line":1,"column":10,"nodeType":"594","messageId":"595","endLine":1,"endColumn":18},{"ruleId":"676","severity":1,"message":"677","line":7,"column":14,"nodeType":"594","messageId":"678","endLine":7,"endColumn":15},{"ruleId":"676","severity":1,"message":"677","line":7,"column":34,"nodeType":"594","messageId":"678","endLine":7,"endColumn":35},{"ruleId":"598","severity":1,"message":"599","line":72,"column":189,"nodeType":"600","messageId":"601","endLine":72,"endColumn":218},{"ruleId":"602","severity":1,"message":"603","line":8,"column":9,"nodeType":"604","endLine":8,"endColumn":55},{"ruleId":"602","severity":1,"message":"603","line":15,"column":17,"nodeType":"604","endLine":15,"endColumn":47},{"ruleId":"679","severity":1,"message":"680","line":43,"column":25,"nodeType":"604","messageId":"681","endLine":43,"endColumn":93,"fix":"682"},{"ruleId":"602","severity":1,"message":"603","line":59,"column":25,"nodeType":"604","endLine":59,"endColumn":64},{"ruleId":"602","severity":1,"message":"603","line":70,"column":21,"nodeType":"604","endLine":70,"endColumn":60},{"ruleId":"602","severity":1,"message":"603","line":77,"column":25,"nodeType":"604","endLine":77,"endColumn":64},{"ruleId":"602","severity":1,"message":"603","line":95,"column":25,"nodeType":"604","endLine":95,"endColumn":58},{"ruleId":"602","severity":1,"message":"603","line":104,"column":29,"nodeType":"604","endLine":104,"endColumn":62},{"ruleId":"602","severity":1,"message":"603","line":105,"column":29,"nodeType":"604","endLine":105,"endColumn":62},{"ruleId":"602","severity":1,"message":"603","line":106,"column":29,"nodeType":"604","endLine":106,"endColumn":62},{"ruleId":"602","severity":1,"message":"603","line":107,"column":29,"nodeType":"604","endLine":107,"endColumn":62},{"ruleId":"602","severity":1,"message":"603","line":108,"column":29,"nodeType":"604","endLine":108,"endColumn":62},{"ruleId":"602","severity":1,"message":"603","line":117,"column":29,"nodeType":"604","endLine":117,"endColumn":62},{"ruleId":"602","severity":1,"message":"603","line":124,"column":21,"nodeType":"604","endLine":124,"endColumn":56},{"ruleId":"602","severity":1,"message":"603","line":125,"column":21,"nodeType":"604","endLine":125,"endColumn":56},{"ruleId":"602","severity":1,"message":"603","line":126,"column":21,"nodeType":"604","endLine":126,"endColumn":56},{"ruleId":"592","severity":1,"message":"683","line":3,"column":10,"nodeType":"594","messageId":"595","endLine":3,"endColumn":15},{"ruleId":"592","severity":1,"message":"684","line":8,"column":7,"nodeType":"594","messageId":"595","endLine":8,"endColumn":15},{"ruleId":"592","severity":1,"message":"685","line":24,"column":12,"nodeType":"594","messageId":"595","endLine":24,"endColumn":18},{"ruleId":"588","severity":1,"message":"589","line":62,"column":17,"nodeType":"590","messageId":"591","endLine":62,"endColumn":19},{"ruleId":"607","severity":1,"message":"686","line":81,"column":7,"nodeType":"609","endLine":81,"endColumn":9,"suggestions":"687"},{"ruleId":"688","severity":1,"message":"689","line":122,"column":13,"nodeType":"604","endLine":122,"endColumn":117},{"ruleId":"690","severity":1,"message":"691","line":137,"column":44,"nodeType":"692","messageId":"693","endLine":137,"endColumn":46},{"ruleId":"688","severity":1,"message":"689","line":148,"column":116,"nodeType":"604","endLine":148,"endColumn":214},{"ruleId":"688","severity":1,"message":"689","line":155,"column":54,"nodeType":"604","endLine":155,"endColumn":158},{"ruleId":"688","severity":1,"message":"689","line":168,"column":53,"nodeType":"604","endLine":168,"endColumn":157},{"ruleId":"688","severity":1,"message":"689","line":187,"column":97,"nodeType":"604","endLine":187,"endColumn":195},{"ruleId":"607","severity":1,"message":"694","line":45,"column":7,"nodeType":"609","endLine":45,"endColumn":9,"suggestions":"695"},{"ruleId":"588","severity":1,"message":"589","line":8,"column":12,"nodeType":"590","messageId":"591","endLine":8,"endColumn":14},{"ruleId":"588","severity":1,"message":"589","line":10,"column":22,"nodeType":"590","messageId":"591","endLine":10,"endColumn":24},{"ruleId":"696","severity":1,"message":"697","line":14,"column":14,"nodeType":"594","messageId":"698","endLine":14,"endColumn":18},{"ruleId":"588","severity":1,"message":"589","line":17,"column":16,"nodeType":"590","messageId":"591","endLine":17,"endColumn":18},{"ruleId":"602","severity":1,"message":"603","line":4,"column":14,"nodeType":"604","endLine":4,"endColumn":60},{"ruleId":"602","severity":1,"message":"603","line":11,"column":17,"nodeType":"604","endLine":11,"endColumn":47},{"ruleId":"679","severity":1,"message":"680","line":39,"column":25,"nodeType":"604","messageId":"681","endLine":39,"endColumn":93,"fix":"699"},{"ruleId":"602","severity":1,"message":"603","line":307,"column":17,"nodeType":"604","endLine":307,"endColumn":50},{"ruleId":"602","severity":1,"message":"603","line":315,"column":21,"nodeType":"604","endLine":315,"endColumn":54},{"ruleId":"602","severity":1,"message":"603","line":323,"column":21,"nodeType":"604","endLine":323,"endColumn":54},{"ruleId":"602","severity":1,"message":"603","line":330,"column":13,"nodeType":"604","endLine":330,"endColumn":48},{"ruleId":"602","severity":1,"message":"603","line":331,"column":13,"nodeType":"604","endLine":331,"endColumn":48},{"ruleId":"602","severity":1,"message":"603","line":332,"column":13,"nodeType":"604","endLine":332,"endColumn":48},{"ruleId":"592","severity":1,"message":"700","line":9,"column":12,"nodeType":"594","messageId":"595","endLine":9,"endColumn":15},{"ruleId":"592","severity":1,"message":"701","line":9,"column":16,"nodeType":"594","messageId":"595","endLine":9,"endColumn":22},{"ruleId":"588","severity":1,"message":"589","line":36,"column":23,"nodeType":"590","messageId":"591","endLine":36,"endColumn":25},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'err' is assigned a value but never used.","Identifier","unusedVar","'Err' is assigned a value but never used.","'save' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ToastContainer' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notifY'. Either include it or remove the dependency array.","ArrayExpression",["702"],["703"],"'click' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Messages', 'email', 'name', 'notificationCount', and 'setSocket'. Either include them or remove the dependency array. If 'setSocket' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["704"],"no-native-reassign",["705"],"no-negated-in-lhs",["706"],"'NewTask' is defined but never used.","'handleShowSingleTask' is assigned a value but never used.","'CFade' is defined but never used.","'accordion' is assigned a value but never used.","'setAccordion' is assigned a value but never used.","'toggleMulti' is assigned a value but never used.","'toggleFade' is assigned a value but never used.","'ChartLineSimple' is defined but never used.","'CRow' is defined but never used.","'CBadge' is defined but never used.","'CSwitch' is defined but never used.",["705"],["706"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["707"],"no-dupe-keys","Duplicate key 'border'.","ObjectExpression","React Hook useEffect has a missing dependency: 'getCancelledTask'. Either include it or remove the dependency array.",["708"],"React Hook useEffect has a missing dependency: 'HandleAssignedTask'. Either include it or remove the dependency array.",["709"],"React Hook useEffect has a missing dependency: 'getOrdersInRevision'. Either include it or remove the dependency array.",["710"],"React Hook useEffect has a missing dependency: 'getCompletedTask'. Either include it or remove the dependency array.",["711"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTaskBeingReviewed'. Either include it or remove the dependency array.",["712"],"'image' is assigned a value but never used.","'isShowLoader' is assigned a value but never used.","'setShowLoader' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTaskInprogress'. Either include it or remove the dependency array.",["713"],"React Hook useEffect has a missing dependency: 'getInVoiceData'. Either include it or remove the dependency array.",["714"],"React Hook useEffect has a missing dependency: 'LoadInvoices'. Either include it or remove the dependency array.",["715"],"'TableCard' is defined but never used.","React Hook useEffect has a missing dependency: 'getUnpaidOrders'. Either include it or remove the dependency array.",["716"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'category' is assigned a value but never used.","'setCategory' is assigned a value but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'useEffect' is defined but never used.","'btn' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Check'. Either include it or remove the dependency array.",["717"],"'accessToken' is assigned a value but never used.","'Invoice' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'useState' is defined but never used.","no-use-before-define","'j' was used before it was defined.","usedBeforeDefined","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"718","text":"719"},"'toast' is defined but never used.","'ROOT_CSS' is assigned a value but never used.","'Taskid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email', 'loadChatClient', 'open', 'socket', and 'taskid'. Either include them or remove the dependency array. If 'setReceiver' needs the current value of 'email', you can also switch to useReducer instead of useState and read 'email' in the reducer.",["720"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'getOpentickets'. Either include it or remove the dependency array.",["721"],"no-redeclare","'pair' is already defined.","redeclared",{"range":"722","text":"719"},"'Key' is assigned a value but never used.","'setKey' is assigned a value but never used.",{"desc":"723","fix":"724"},{"desc":"723","fix":"725"},{"desc":"726","fix":"727"},"no-global-assign","no-unsafe-negation",{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"732","fix":"733"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"desc":"742","fix":"743"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},[1987,1987]," rel=\"noreferrer\"",{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},[1944,1944],"Update the dependencies array to be: [notifY]",{"range":"754","text":"755"},{"range":"756","text":"755"},"Update the dependencies array to be: [ENDPOINT, Messages, email, name, notificationCount, setSocket]",{"range":"757","text":"758"},"Update the dependencies array to be: [getDetails]",{"range":"759","text":"760"},"Update the dependencies array to be: [getCancelledTask]",{"range":"761","text":"762"},"Update the dependencies array to be: [HandleAssignedTask]",{"range":"763","text":"764"},"Update the dependencies array to be: [getOrdersInRevision]",{"range":"765","text":"766"},"Update the dependencies array to be: [getCompletedTask]",{"range":"767","text":"768"},"Update the dependencies array to be: [getTaskBeingReviewed]",{"range":"769","text":"770"},"Update the dependencies array to be: [getTaskInprogress]",{"range":"771","text":"772"},"Update the dependencies array to be: [getInVoiceData]",{"range":"773","text":"774"},"Update the dependencies array to be: [LoadInvoices]",{"range":"775","text":"776"},"Update the dependencies array to be: [getUnpaidOrders]",{"range":"777","text":"778"},"Update the dependencies array to be: [Check]",{"range":"779","text":"780"},"Update the dependencies array to be: [email, loadChatClient, open, socket, taskid]",{"range":"781","text":"782"},"Update the dependencies array to be: [getOpentickets]",{"range":"783","text":"784"},[1387,1389],"[notifY]",[1433,1435],[1367,1377],"[ENDPOINT, Messages, email, name, notificationCount, setSocket]",[1155,1157],"[getDetails]",[1730,1732],"[getCancelledTask]",[1468,1470],"[HandleAssignedTask]",[1666,1668],"[getOrdersInRevision]",[1561,1563],"[getCompletedTask]",[1768,1770],"[getTaskBeingReviewed]",[2022,2024],"[getTaskInprogress]",[2380,2382],"[getInVoiceData]",[4536,4538],"[LoadInvoices]",[2711,2713],"[getUnpaidOrders]",[1726,1728],"[Check]",[2231,2233],"[email, loadChatClient, open, socket, taskid]",[1252,1254],"[getOpentickets]"]